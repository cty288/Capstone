{
  "api/Framework.AbstractSavableModel.html": {
    "href": "api/Framework.AbstractSavableModel.html",
    "title": "Class AbstractSavableModel | Capstone documentation",
    "keywords": "Class AbstractSavableModel Namespace Framework Assembly MainGame.dll public abstract class AbstractSavableModel : AbstractModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel Implements IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Derived EntityModel<T> ResourceSlotsModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsFirstTimeCreated public bool IsFirstTimeCreated { get; set; } Property Value bool Methods OnInit() protected override void OnInit() OnLoad(string) public virtual void OnLoad(string suffix) Parameters suffix string OnSave(string) public virtual void OnSave(string suffix) Parameters suffix string Save(string) public void Save(string suffix) Parameters suffix string"
  },
  "api/Framework.AbstractSavableSystem.html": {
    "href": "api/Framework.AbstractSavableSystem.html",
    "title": "Class AbstractSavableSystem | Capstone documentation",
    "keywords": "Class AbstractSavableSystem Namespace Framework Assembly MainGame.dll public abstract class AbstractSavableSystem : AbstractSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem AbstractSavableSystem Implements ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnInit() protected override void OnInit() OnLoad(string) public virtual void OnLoad(string suffix) Parameters suffix string OnSave(string) public virtual void OnSave(string suffix) Parameters suffix string Save(string) public void Save(string suffix) Parameters suffix string"
  },
  "api/Framework.ISavableModel.html": {
    "href": "api/Framework.ISavableModel.html",
    "title": "Interface ISavableModel | Capstone documentation",
    "keywords": "Interface ISavableModel Namespace Framework Assembly MainGame.dll public interface ISavableModel Properties IsFirstTimeCreated bool IsFirstTimeCreated { get; set; } Property Value bool Methods OnLoad(string) void OnLoad(string suffix) Parameters suffix string OnSave(string) void OnSave(string suffix) Parameters suffix string"
  },
  "api/Framework.MainGame.html": {
    "href": "api/Framework.MainGame.html",
    "title": "Class MainGame | Capstone documentation",
    "keywords": "Class MainGame Namespace Framework Assembly MainGame.dll public class MainGame : SavableArchitecture<MainGame>, IArchitecture Inheritance object Architecture<MainGame> SavableArchitecture<MainGame> MainGame Implements IArchitecture Inherited Members SavableArchitecture<MainGame>.savableModels SavableArchitecture<MainGame>.savableSystems SavableArchitecture<MainGame>.IsSave SavableArchitecture<MainGame>.RegisterModel<T>(T) SavableArchitecture<MainGame>.RegisterSystem<T>(T) SavableArchitecture<MainGame>.ClearSave() SavableArchitecture<MainGame>.Reset() Architecture<MainGame>.Interface Architecture<MainGame>.OnRegisterPatch Architecture<MainGame>.RegisterExtensibleUtility<T>(T) Architecture<MainGame>.GetModel<T>() Architecture<MainGame>.SendCommand<T>() Architecture<MainGame>.SendCommand<T>(T) Architecture<MainGame>.GetSystem<T>(Action<T>) Architecture<MainGame>.ResetArchitecture() Architecture<MainGame>.SendEvent<T>() Architecture<MainGame>.SendEvent<T>(T) Architecture<MainGame>.RegisterEvent<T>(Action<T>) Architecture<MainGame>.UnRegisterEvent<T>(Action<T>) Architecture<MainGame>.SendQuery<TResult>(IQuery<TResult>) Architecture<MainGame>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties saveFileSuffix protected override string saveFileSuffix { get; } Property Value string Methods Init() protected override void Init() SaveGame() public override void SaveGame()"
  },
  "api/Framework.MainGame_Test.html": {
    "href": "api/Framework.MainGame_Test.html",
    "title": "Class MainGame_Test | Capstone documentation",
    "keywords": "Class MainGame_Test Namespace Framework Assembly MainGame.dll public class MainGame_Test : SavableArchitecture<MainGame_Test>, IArchitecture Inheritance object Architecture<MainGame_Test> SavableArchitecture<MainGame_Test> MainGame_Test Implements IArchitecture Inherited Members SavableArchitecture<MainGame_Test>.savableModels SavableArchitecture<MainGame_Test>.savableSystems SavableArchitecture<MainGame_Test>.IsSave SavableArchitecture<MainGame_Test>.RegisterModel<T>(T) SavableArchitecture<MainGame_Test>.RegisterSystem<T>(T) SavableArchitecture<MainGame_Test>.SaveGame() SavableArchitecture<MainGame_Test>.ClearSave() SavableArchitecture<MainGame_Test>.Reset() Architecture<MainGame_Test>.Interface Architecture<MainGame_Test>.OnRegisterPatch Architecture<MainGame_Test>.RegisterExtensibleUtility<T>(T) Architecture<MainGame_Test>.GetModel<T>() Architecture<MainGame_Test>.SendCommand<T>() Architecture<MainGame_Test>.SendCommand<T>(T) Architecture<MainGame_Test>.GetSystem<T>(Action<T>) Architecture<MainGame_Test>.ResetArchitecture() Architecture<MainGame_Test>.SendEvent<T>() Architecture<MainGame_Test>.SendEvent<T>(T) Architecture<MainGame_Test>.RegisterEvent<T>(Action<T>) Architecture<MainGame_Test>.UnRegisterEvent<T>(Action<T>) Architecture<MainGame_Test>.SendQuery<TResult>(IQuery<TResult>) Architecture<MainGame_Test>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties saveFileSuffix protected override string saveFileSuffix { get; } Property Value string Methods Init() protected override void Init()"
  },
  "api/Framework.OnBeforeGameSave.html": {
    "href": "api/Framework.OnBeforeGameSave.html",
    "title": "Struct OnBeforeGameSave | Capstone documentation",
    "keywords": "Struct OnBeforeGameSave Namespace Framework Assembly MainGame.dll public struct OnBeforeGameSave Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/Framework.SavableArchitecture-1.html": {
    "href": "api/Framework.SavableArchitecture-1.html",
    "title": "Class SavableArchitecture<T> | Capstone documentation",
    "keywords": "Class SavableArchitecture<T> Namespace Framework Assembly MainGame.dll public abstract class SavableArchitecture<T> : Architecture<T>, IArchitecture where T : Architecture<T>, new() Type Parameters T Inheritance object Architecture<T> SavableArchitecture<T> Implements IArchitecture Derived MainGame MainGame_Test Inherited Members Architecture<T>.Interface Architecture<T>.OnRegisterPatch Architecture<T>.Init() Architecture<T>.RegisterExtensibleUtility<T>(T) Architecture<T>.GetModel<T>() Architecture<T>.SendCommand<T>() Architecture<T>.SendCommand<T>(T) Architecture<T>.GetSystem<T>(Action<T>) Architecture<T>.ResetArchitecture() Architecture<T>.SendEvent<T>() Architecture<T>.SendEvent<T>(T) Architecture<T>.RegisterEvent<T>(Action<T>) Architecture<T>.UnRegisterEvent<T>(Action<T>) Architecture<T>.SendQuery<TResult>(IQuery<TResult>) Architecture<T>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IsSave protected const bool IsSave = true Field Value bool savableModels protected List<AbstractSavableModel> savableModels Field Value List<AbstractSavableModel> savableSystems protected List<AbstractSavableSystem> savableSystems Field Value List<AbstractSavableSystem> Properties saveFileSuffix protected abstract string saveFileSuffix { get; } Property Value string Methods ClearSave() public void ClearSave() RegisterModel<T>(T) public void RegisterModel<T>(T defaultModel) where T : class, IModel Parameters defaultModel T Type Parameters T RegisterSystem<T>(T) public void RegisterSystem<T>(T defaultSystem) where T : class, ISystem Parameters defaultSystem T Type Parameters T Reset() public void Reset() SaveGame() public virtual void SaveGame()"
  },
  "api/Framework.html": {
    "href": "api/Framework.html",
    "title": "Namespace Framework | Capstone documentation",
    "keywords": "Namespace Framework Classes AbstractSavableModel AbstractSavableSystem MainGame MainGame_Test SavableArchitecture<T> Structs OnBeforeGameSave Interfaces ISavableModel"
  },
  "api/Global.AddBulletCommand.html": {
    "href": "api/Global.AddBulletCommand.html",
    "title": "Class AddBulletCommand | Capstone documentation",
    "keywords": "Class AddBulletCommand Namespace Global Assembly MikroFramework.dll public class AddBulletCommand : AbstractCommand<AddBulletCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<AddBulletCommand> AddBulletCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<AddBulletCommand>.AutoRecycle AbstractCommand<AddBulletCommand>.OnRecycled() AbstractCommand<AddBulletCommand>.IsRecycled AbstractCommand<AddBulletCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.AttackPlayer.html": {
    "href": "api/Global.AttackPlayer.html",
    "title": "Class AttackPlayer | Capstone documentation",
    "keywords": "Class AttackPlayer Namespace Global Assembly MikroFramework.dll public class AttackPlayer : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> AttackPlayer Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields Damage public int Damage Field Value int"
  },
  "api/Global.BossHealthBar.html": {
    "href": "api/Global.BossHealthBar.html",
    "title": "Class BossHealthBar | Capstone documentation",
    "keywords": "Class BossHealthBar Namespace Global Assembly MainGame.dll public class BossHealthBar : HealthBar, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> HealthBar BossHealthBar Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnHealthBarDestroyed() public override void OnHealthBarDestroyed() OnSetEntity(IDamageable) public override void OnSetEntity(IDamageable entity) Parameters entity IDamageable"
  },
  "api/Global.Bullet.html": {
    "href": "api/Global.Bullet.html",
    "title": "Class Bullet | Capstone documentation",
    "keywords": "Class Bullet Namespace Global Assembly MikroFramework.dll public class Bullet : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> Bullet Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.BulletPickItem.html": {
    "href": "api/Global.BulletPickItem.html",
    "title": "Class BulletPickItem | Capstone documentation",
    "keywords": "Class BulletPickItem Namespace Global Assembly MikroFramework.dll public class BulletPickItem : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> BulletPickItem Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.CameraController.html": {
    "href": "api/Global.CameraController.html",
    "title": "Class CameraController | Capstone documentation",
    "keywords": "Class CameraController Namespace Global Assembly MikroFramework.dll public class CameraController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CameraController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.DPunkInputs.IPlayerActions.html": {
    "href": "api/Global.DPunkInputs.IPlayerActions.html",
    "title": "Interface DPunkInputs.IPlayerActions | Capstone documentation",
    "keywords": "Interface DPunkInputs.IPlayerActions Namespace Global Assembly MainGame.dll public interface DPunkInputs.IPlayerActions Methods OnFire(CallbackContext) void OnFire(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnInteract(CallbackContext) void OnInteract(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnJump(CallbackContext) void OnJump(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnLook(CallbackContext) void OnLook(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMove(CallbackContext) void OnMove(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnReload(CallbackContext) void OnReload(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnScope(CallbackContext) void OnScope(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnShoot(CallbackContext) void OnShoot(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSlide(CallbackContext) void OnSlide(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSprintHold(CallbackContext) void OnSprintHold(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSprintTap(CallbackContext) void OnSprintTap(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.DPunkInputs.ISharedActions.html": {
    "href": "api/Global.DPunkInputs.ISharedActions.html",
    "title": "Interface DPunkInputs.ISharedActions | Capstone documentation",
    "keywords": "Interface DPunkInputs.ISharedActions Namespace Global Assembly MainGame.dll public interface DPunkInputs.ISharedActions Methods OnClose(CallbackContext) void OnClose(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnHotBarLeftNavigate(CallbackContext) void OnHotBarLeftNavigate(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnHotBarRightNavigate(CallbackContext) void OnHotBarRightNavigate(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnInventory(CallbackContext) void OnInventory(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.DPunkInputs.IUIActions.html": {
    "href": "api/Global.DPunkInputs.IUIActions.html",
    "title": "Interface DPunkInputs.IUIActions | Capstone documentation",
    "keywords": "Interface DPunkInputs.IUIActions Namespace Global Assembly MainGame.dll public interface DPunkInputs.IUIActions Methods OnCancel(CallbackContext) void OnCancel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnClick(CallbackContext) void OnClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnNavigate(CallbackContext) void OnNavigate(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPoint(CallbackContext) void OnPoint(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnRightClick(CallbackContext) void OnRightClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnScrollWheel(CallbackContext) void OnScrollWheel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSubmit(CallbackContext) void OnSubmit(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnTrackedDeviceOrientation(CallbackContext) void OnTrackedDeviceOrientation(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnTrackedDevicePosition(CallbackContext) void OnTrackedDevicePosition(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.DPunkInputs.PlayerActions.html": {
    "href": "api/Global.DPunkInputs.PlayerActions.html",
    "title": "Struct DPunkInputs.PlayerActions | Capstone documentation",
    "keywords": "Struct DPunkInputs.PlayerActions Namespace Global Assembly MainGame.dll public struct DPunkInputs.PlayerActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PlayerActions(DPunkInputs) public PlayerActions(DPunkInputs wrapper) Parameters wrapper DPunkInputs Properties Fire public InputAction Fire { get; } Property Value InputAction Interact public InputAction Interact { get; } Property Value InputAction Jump public InputAction Jump { get; } Property Value InputAction Look public InputAction Look { get; } Property Value InputAction Move public InputAction Move { get; } Property Value InputAction Reload public InputAction Reload { get; } Property Value InputAction Scope public InputAction Scope { get; } Property Value InputAction Shoot public InputAction Shoot { get; } Property Value InputAction Slide public InputAction Slide { get; } Property Value InputAction SprintHold public InputAction SprintHold { get; } Property Value InputAction SprintTap public InputAction SprintTap { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IPlayerActions) public void AddCallbacks(DPunkInputs.IPlayerActions instance) Parameters instance DPunkInputs.IPlayerActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IPlayerActions) public void RemoveCallbacks(DPunkInputs.IPlayerActions instance) Parameters instance DPunkInputs.IPlayerActions SetCallbacks(IPlayerActions) public void SetCallbacks(DPunkInputs.IPlayerActions instance) Parameters instance DPunkInputs.IPlayerActions Operators implicit operator InputActionMap(PlayerActions) public static implicit operator InputActionMap(DPunkInputs.PlayerActions set) Parameters set DPunkInputs.PlayerActions Returns InputActionMap"
  },
  "api/Global.DPunkInputs.SharedActions.html": {
    "href": "api/Global.DPunkInputs.SharedActions.html",
    "title": "Struct DPunkInputs.SharedActions | Capstone documentation",
    "keywords": "Struct DPunkInputs.SharedActions Namespace Global Assembly MainGame.dll public struct DPunkInputs.SharedActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors SharedActions(DPunkInputs) public SharedActions(DPunkInputs wrapper) Parameters wrapper DPunkInputs Properties Close public InputAction Close { get; } Property Value InputAction HotBarLeftNavigate public InputAction HotBarLeftNavigate { get; } Property Value InputAction HotBarRightNavigate public InputAction HotBarRightNavigate { get; } Property Value InputAction Inventory public InputAction Inventory { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(ISharedActions) public void AddCallbacks(DPunkInputs.ISharedActions instance) Parameters instance DPunkInputs.ISharedActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(ISharedActions) public void RemoveCallbacks(DPunkInputs.ISharedActions instance) Parameters instance DPunkInputs.ISharedActions SetCallbacks(ISharedActions) public void SetCallbacks(DPunkInputs.ISharedActions instance) Parameters instance DPunkInputs.ISharedActions Operators implicit operator InputActionMap(SharedActions) public static implicit operator InputActionMap(DPunkInputs.SharedActions set) Parameters set DPunkInputs.SharedActions Returns InputActionMap"
  },
  "api/Global.DPunkInputs.UIActions.html": {
    "href": "api/Global.DPunkInputs.UIActions.html",
    "title": "Struct DPunkInputs.UIActions | Capstone documentation",
    "keywords": "Struct DPunkInputs.UIActions Namespace Global Assembly MainGame.dll public struct DPunkInputs.UIActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors UIActions(DPunkInputs) public UIActions(DPunkInputs wrapper) Parameters wrapper DPunkInputs Properties Cancel public InputAction Cancel { get; } Property Value InputAction Click public InputAction Click { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction Navigate public InputAction Navigate { get; } Property Value InputAction Point public InputAction Point { get; } Property Value InputAction RightClick public InputAction RightClick { get; } Property Value InputAction ScrollWheel public InputAction ScrollWheel { get; } Property Value InputAction Submit public InputAction Submit { get; } Property Value InputAction TrackedDeviceOrientation public InputAction TrackedDeviceOrientation { get; } Property Value InputAction TrackedDevicePosition public InputAction TrackedDevicePosition { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IUIActions) public void AddCallbacks(DPunkInputs.IUIActions instance) Parameters instance DPunkInputs.IUIActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IUIActions) public void RemoveCallbacks(DPunkInputs.IUIActions instance) Parameters instance DPunkInputs.IUIActions SetCallbacks(IUIActions) public void SetCallbacks(DPunkInputs.IUIActions instance) Parameters instance DPunkInputs.IUIActions Operators implicit operator InputActionMap(UIActions) public static implicit operator InputActionMap(DPunkInputs.UIActions set) Parameters set DPunkInputs.UIActions Returns InputActionMap"
  },
  "api/Global.DPunkInputs.html": {
    "href": "api/Global.DPunkInputs.html",
    "title": "Class DPunkInputs | Capstone documentation",
    "keywords": "Class DPunkInputs Namespace Global Assembly MainGame.dll public class DPunkInputs : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable Inheritance object DPunkInputs Implements IInputActionCollection2 IInputActionCollection IEnumerable<InputAction> IEnumerable IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DPunkInputs() public DPunkInputs() Properties GamepadScheme public InputControlScheme GamepadScheme { get; } Property Value InputControlScheme KeyboardMouseScheme public InputControlScheme KeyboardMouseScheme { get; } Property Value InputControlScheme Player public DPunkInputs.PlayerActions Player { get; } Property Value DPunkInputs.PlayerActions Shared public DPunkInputs.SharedActions Shared { get; } Property Value DPunkInputs.SharedActions UI public DPunkInputs.UIActions UI { get; } Property Value DPunkInputs.UIActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask Optional mask applied to all bindings in the collection. public InputBinding? bindingMask { get; set; } Property Value InputBinding? Remarks If this is not null, only bindings that match the mask will be used. Modifying this property while any of the actions in the collection are enabled will lead to the actions getting disabled temporarily and then re-enabled. bindings Iterate over all bindings in the collection of actions. public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> See Also bindings bindings bindings controlSchemes List of control schemes defined for the set of actions. public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> Remarks Control schemes are optional and the list may be empty. devices Devices to use with the actions in this collection. public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Remarks If this is set, actions in the collection will exclusively bind to devices in the given list. For example, if two gamepads are present in the system yet only one gamepad is listed here, then a \"<Gamepad>/leftStick\" binding will only bind to the gamepad in the list and not to the one that is only available globally. Modifying this property after bindings in the collection have already been resolved, will lead to UnityEngine.InputSystem.InputAction.controls getting refreshed. If any of the actions in the collection are currently in progress (see UnityEngine.InputSystem.InputAction.phase), the actions will remain unaffected and in progress except if the controls currently driving them (see UnityEngine.InputSystem.InputAction.activeControl) are no longer part of any of the selected devices. In that case, the action is UnityEngine.InputSystem.InputAction.canceled. Methods Contains(InputAction) Check whether the given action is contained in this collection. public bool Contains(InputAction action) Parameters action InputAction An arbitrary input action. Returns bool True if the given action is contained in the collection, false if not. Remarks Calling this method will not allocate GC memory (unlike when iterating generically over the collection). Also, a collection may have a faster containment check rather than having to search through all its actions. Disable() Disable all actions in the collection. public void Disable() See Also Disable() enabled Dispose() public void Dispose() Enable() Enable all actions in the collection. public void Enable() See Also Enable() enabled FindAction(string, bool) Find an UnityEngine.InputSystem.InputAction in the collection by its UnityEngine.InputSystem.InputAction.name or by its UnityEngine.InputSystem.InputAction.id (in string form). public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string Name of the action as either a \"map/action\" combination (e.g. \"gameplay/fire\") or a simple name. In the former case, the name is split at the '/' slash and the first part is used to find a map with that name and the second part is used to find an action with that name inside the map. In the latter case, all maps are searched in order and the first action that has the given name in any of the maps is returned. Note that name comparisons are case-insensitive. Alternatively, the given string can be a GUID as given by <xref href=\"UnityEngine.InputSystem.InputAction.id\" data-throw-if-not-resolved=\"false\"></xref>. throwIfNotFound bool If true, instead of returning null when the action cannot be found, throw ArgumentException. Returns InputAction The action with the corresponding name or null if no matching action could be found. Exceptions ArgumentNullException actionNameOrId is null. ArgumentException Thrown if throwIfNotFound is true and the action could not be found. -Or- If actionNameOrId contains a slash but is missing either the action or the map name. FindBinding(InputBinding, out InputAction) Find the index of the first binding that matches the given mask. public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Receives the action on which the binding was found. If none was found, will be set to null. Returns int Index into UnityEngine.InputSystem.InputAction.bindings of action of the binding that matches mask. If no binding matches, will return -1. Remarks For details about matching bindings by a mask, see UnityEngine.InputSystem.InputBinding.Matches(UnityEngine.InputSystem.InputBinding). var index = playerInput.actions.FindBinding( new InputBinding { path = \"<Gamepad>/buttonSouth\" }, out var action); if (index != -1) Debug.Log($\"The A button is bound to {action}\");</code></pre></example> See Also Matches(InputBinding) bindings GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/Global.Enemy.html": {
    "href": "api/Global.Enemy.html",
    "title": "Class Enemy | Capstone documentation",
    "keywords": "Class Enemy Namespace Global Assembly MikroFramework.dll public class Enemy : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Enemy Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.FaceCamera.html": {
    "href": "api/Global.FaceCamera.html",
    "title": "Class FaceCamera | Capstone documentation",
    "keywords": "Class FaceCamera Namespace Global Assembly MainGame.dll public class FaceCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FaceCamera Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.FollowCamera.html": {
    "href": "api/Global.FollowCamera.html",
    "title": "Class FollowCamera | Capstone documentation",
    "keywords": "Class FollowCamera Namespace Global Assembly MainGame.dll public class FollowCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FollowCamera Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.FullBulletCommand.html": {
    "href": "api/Global.FullBulletCommand.html",
    "title": "Class FullBulletCommand | Capstone documentation",
    "keywords": "Class FullBulletCommand Namespace Global Assembly MikroFramework.dll public class FullBulletCommand : AbstractCommand<FullBulletCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<FullBulletCommand> FullBulletCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<FullBulletCommand>.AutoRecycle AbstractCommand<FullBulletCommand>.OnRecycled() AbstractCommand<FullBulletCommand>.IsRecycled AbstractCommand<FullBulletCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.GameEntrance.html": {
    "href": "api/Global.GameEntrance.html",
    "title": "Class GameEntrance | Capstone documentation",
    "keywords": "Class GameEntrance Namespace Global Assembly MainGame.dll public class GameEntrance : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameEntrance Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.Gun.html": {
    "href": "api/Global.Gun.html",
    "title": "Class Gun | Capstone documentation",
    "keywords": "Class Gun Namespace Global Assembly MikroFramework.dll public class Gun : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> Gun Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Reload() public void Reload() Shoot() public void Shoot()"
  },
  "api/Global.GunConfigItem.html": {
    "href": "api/Global.GunConfigItem.html",
    "title": "Class GunConfigItem | Capstone documentation",
    "keywords": "Class GunConfigItem Namespace Global Assembly MikroFramework.dll public class GunConfigItem Inheritance object GunConfigItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GunConfigItem(string, int, float, float, float, bool, float, string) public GunConfigItem(string name, int bulletMaxCount, float attack, float freq, float shootDistance, bool needBullet, float reloadSeconds, string description) Parameters name string bulletMaxCount int attack float freq float shootDistance float needBullet bool reloadSeconds float description string Properties Attack public float Attack { get; set; } Property Value float BulletMaxCount public int BulletMaxCount { get; set; } Property Value int Description public string Description { get; set; } Property Value string Frequency public float Frequency { get; set; } Property Value float Name public string Name { get; set; } Property Value string NeedBullet public bool NeedBullet { get; set; } Property Value bool ReloadSeconds public float ReloadSeconds { get; set; } Property Value float ShootDistance public float ShootDistance { get; set; } Property Value float"
  },
  "api/Global.GunConfigModel.html": {
    "href": "api/Global.GunConfigModel.html",
    "title": "Class GunConfigModel | Capstone documentation",
    "keywords": "Class GunConfigModel Namespace Global Assembly MikroFramework.dll public class GunConfigModel : AbstractModel, IGunConfigModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel GunConfigModel Implements IGunConfigModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Methods GetItemByName(string) public GunConfigItem GetItemByName(string name) Parameters name string Returns GunConfigItem OnInit() protected override void OnInit()"
  },
  "api/Global.GunInfo.GunState.html": {
    "href": "api/Global.GunInfo.GunState.html",
    "title": "Enum GunInfo.GunState | Capstone documentation",
    "keywords": "Enum GunInfo.GunState Namespace Global Assembly MikroFramework.dll public enum GunInfo.GunState Fields Cooldown = 4 EmptyBullet = 3 Idle = 0 Reload = 2 Shooting = 1"
  },
  "api/Global.GunInfo.html": {
    "href": "api/Global.GunInfo.html",
    "title": "Class GunInfo | Capstone documentation",
    "keywords": "Class GunInfo Namespace Global Assembly MikroFramework.dll public class GunInfo Inheritance object GunInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BulletCountInGun public BindableProperty<int> BulletCountInGun Field Value BindableProperty<int> BulletCountOutGun public BindableProperty<int> BulletCountOutGun Field Value BindableProperty<int> Name public BindableProperty<string> Name Field Value BindableProperty<string> State public BindableProperty<GunInfo.GunState> State Field Value BindableProperty<GunInfo.GunState>"
  },
  "api/Global.GunPickItem.html": {
    "href": "api/Global.GunPickItem.html",
    "title": "Class GunPickItem | Capstone documentation",
    "keywords": "Class GunPickItem Namespace Global Assembly MikroFramework.dll public class GunPickItem : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> GunPickItem Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields BulletCountInGun public int BulletCountInGun Field Value int BulletCountOutGun public int BulletCountOutGun Field Value int Name public string Name Field Value string"
  },
  "api/Global.GunSystem.html": {
    "href": "api/Global.GunSystem.html",
    "title": "Class GunSystem | Capstone documentation",
    "keywords": "Class GunSystem Namespace Global Assembly MikroFramework.dll public class GunSystem : AbstractSystem, IGunSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem GunSystem Implements IGunSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties CurrentGun public GunInfo CurrentGun { get; } Property Value GunInfo GunInfos public Queue<GunInfo> GunInfos { get; } Property Value Queue<GunInfo> Methods OnInit() protected override void OnInit() PickGun(string, int, int) public void PickGun(string name, int bulletCountInGun, int bulletCountOutGun) Parameters name string bulletCountInGun int bulletCountOutGun int ShiftGun() public void ShiftGun()"
  },
  "api/Global.HUDManagerUI.html": {
    "href": "api/Global.HUDManagerUI.html",
    "title": "Class HUDManagerUI | Capstone documentation",
    "keywords": "Class HUDManagerUI Namespace Global Assembly MainGame.dll public class HUDManagerUI : MonoBehaviour, ISingleton Inheritance object Object Component Behaviour MonoBehaviour HUDManagerUI Implements ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Singleton public static HUDManagerUI Singleton { get; } Property Value HUDManagerUI Methods DespawnHUDElement(Transform, HUDCategory) public void DespawnHUDElement(Transform targetFollow, HUDCategory hudCategory) Parameters targetFollow Transform hudCategory HUDCategory OnSingletonInit() public void OnSingletonInit() SpawnHUDElement(Transform, string, HUDCategory, bool) Spawn an HUD element and follow the target public GameObject SpawnHUDElement(Transform targetFollow, string prefabName, HUDCategory hudCategory, bool isWorld) Parameters targetFollow Transform prefabName string The asset bundle name of the prefab hudCategory HUDCategory The type of the HUD element. No two HUD elements of the same type can follow the same target. To create a new HUD element type, add a new enum value to HUDCategory isWorld bool Returns GameObject"
  },
  "api/Global.HealthBar.html": {
    "href": "api/Global.HealthBar.html",
    "title": "Class HealthBar | Capstone documentation",
    "keywords": "Class HealthBar Namespace Global Assembly MainGame.dll public abstract class HealthBar : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> HealthBar Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived BossHealthBar NormalEnemyHealthBar Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnHealthBarDestroyed() public abstract void OnHealthBarDestroyed() OnSetEntity(IDamageable) public abstract void OnSetEntity(IDamageable entity) Parameters entity IDamageable"
  },
  "api/Global.HurtPlayerCommand.html": {
    "href": "api/Global.HurtPlayerCommand.html",
    "title": "Class HurtPlayerCommand | Capstone documentation",
    "keywords": "Class HurtPlayerCommand Namespace Global Assembly MikroFramework.dll public class HurtPlayerCommand : AbstractCommand<HurtPlayerCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<HurtPlayerCommand> HurtPlayerCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<HurtPlayerCommand>.AutoRecycle AbstractCommand<HurtPlayerCommand>.OnRecycled() AbstractCommand<HurtPlayerCommand>.IsRecycled AbstractCommand<HurtPlayerCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(int) public static HurtPlayerCommand Allocate(int damage = 1) Parameters damage int Returns HurtPlayerCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.IGunConfigModel.html": {
    "href": "api/Global.IGunConfigModel.html",
    "title": "Interface IGunConfigModel | Capstone documentation",
    "keywords": "Interface IGunConfigModel Namespace Global Assembly MikroFramework.dll public interface IGunConfigModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Methods GetItemByName(string) GunConfigItem GetItemByName(string name) Parameters name string Returns GunConfigItem"
  },
  "api/Global.IGunSystem.html": {
    "href": "api/Global.IGunSystem.html",
    "title": "Interface IGunSystem | Capstone documentation",
    "keywords": "Interface IGunSystem Namespace Global Assembly MikroFramework.dll public interface IGunSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties CurrentGun GunInfo CurrentGun { get; } Property Value GunInfo GunInfos Queue<GunInfo> GunInfos { get; } Property Value Queue<GunInfo> Methods PickGun(string, int, int) void PickGun(string name, int bulletCountInGun, int bulletCountOutGun) Parameters name string bulletCountInGun int bulletCountOutGun int ShiftGun() void ShiftGun()"
  },
  "api/Global.IPlayerModel.html": {
    "href": "api/Global.IPlayerModel.html",
    "title": "Interface IPlayerModel | Capstone documentation",
    "keywords": "Interface IPlayerModel Namespace Global Assembly MikroFramework.dll public interface IPlayerModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties HP BindableProperty<int> HP { get; } Property Value BindableProperty<int>"
  },
  "api/Global.IStatSystem.html": {
    "href": "api/Global.IStatSystem.html",
    "title": "Interface IStatSystem | Capstone documentation",
    "keywords": "Interface IStatSystem Namespace Global Assembly MikroFramework.dll public interface IStatSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties KillCount BindableProperty<int> KillCount { get; } Property Value BindableProperty<int>"
  },
  "api/Global.KillEnemyCommand.html": {
    "href": "api/Global.KillEnemyCommand.html",
    "title": "Class KillEnemyCommand | Capstone documentation",
    "keywords": "Class KillEnemyCommand Namespace Global Assembly MikroFramework.dll public class KillEnemyCommand : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction KillEnemyCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.OnDispose() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool()"
  },
  "api/Global.LevelEditor.BrushType.html": {
    "href": "api/Global.LevelEditor.BrushType.html",
    "title": "Enum LevelEditor.BrushType | Capstone documentation",
    "keywords": "Enum LevelEditor.BrushType Namespace Global Assembly MikroFramework.dll public enum LevelEditor.BrushType Fields Ground = 0 Hero = 1"
  },
  "api/Global.LevelEditor.OperateMode.html": {
    "href": "api/Global.LevelEditor.OperateMode.html",
    "title": "Enum LevelEditor.OperateMode | Capstone documentation",
    "keywords": "Enum LevelEditor.OperateMode Namespace Global Assembly MikroFramework.dll public enum LevelEditor.OperateMode Fields Draw = 0 Erase = 1"
  },
  "api/Global.LevelEditor.html": {
    "href": "api/Global.LevelEditor.html",
    "title": "Class LevelEditor | Capstone documentation",
    "keywords": "Class LevelEditor Namespace Global Assembly MikroFramework.dll public class LevelEditor : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LevelEditor Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields EmptyHighlight public SpriteRenderer EmptyHighlight Field Value SpriteRenderer"
  },
  "api/Global.LevelPlayer.html": {
    "href": "api/Global.LevelPlayer.html",
    "title": "Class LevelPlayer | Capstone documentation",
    "keywords": "Class LevelPlayer Namespace Global Assembly MikroFramework.dll public class LevelPlayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LevelPlayer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.MaxBulletCountQuery.html": {
    "href": "api/Global.MaxBulletCountQuery.html",
    "title": "Class MaxBulletCountQuery | Capstone documentation",
    "keywords": "Class MaxBulletCountQuery Namespace Global Assembly MikroFramework.dll public class MaxBulletCountQuery : AbstractQuery<int>, IQuery<int>, ICanSetArchitecture, ICanGetModel, ICanGetSystem, ICanGetUtility, IBelongToArchitecture Inheritance object AbstractQuery<int> MaxBulletCountQuery Implements IQuery<int> ICanSetArchitecture ICanGetModel ICanGetSystem ICanGetUtility IBelongToArchitecture Inherited Members AbstractQuery<int>.Do() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) Constructors MaxBulletCountQuery(string) public MaxBulletCountQuery(string gunName) Parameters gunName string Methods OnDo() protected override int OnDo() Returns int"
  },
  "api/Global.NextLevel.html": {
    "href": "api/Global.NextLevel.html",
    "title": "Class NextLevel | Capstone documentation",
    "keywords": "Class NextLevel Namespace Global Assembly MikroFramework.dll public class NextLevel : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NextLevel Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields LevelName public string LevelName Field Value string"
  },
  "api/Global.OnCurrentGunChanged.html": {
    "href": "api/Global.OnCurrentGunChanged.html",
    "title": "Class OnCurrentGunChanged | Capstone documentation",
    "keywords": "Class OnCurrentGunChanged Namespace Global Assembly MikroFramework.dll public class OnCurrentGunChanged Inheritance object OnCurrentGunChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string"
  },
  "api/Global.PickGunCommand.html": {
    "href": "api/Global.PickGunCommand.html",
    "title": "Class PickGunCommand | Capstone documentation",
    "keywords": "Class PickGunCommand Namespace Global Assembly MikroFramework.dll public class PickGunCommand : AbstractCommand<PickGunCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<PickGunCommand> PickGunCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<PickGunCommand>.AutoRecycle AbstractCommand<PickGunCommand>.OnRecycled() AbstractCommand<PickGunCommand>.IsRecycled AbstractCommand<PickGunCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(string, int, int) public static PickGunCommand Allocate(string name, int bulletInGun, int bulletOutGun) Parameters name string bulletInGun int bulletOutGun int Returns PickGunCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.Player.html": {
    "href": "api/Global.Player.html",
    "title": "Class Player | Capstone documentation",
    "keywords": "Class Player Namespace Global Assembly MikroFramework.dll public class Player : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> Player Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.PlayerHandItemController.html": {
    "href": "api/Global.PlayerHandItemController.html",
    "title": "Class PlayerHandItemController | Capstone documentation",
    "keywords": "Class PlayerHandItemController Namespace Global Assembly MainGame.dll public class PlayerHandItemController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> PlayerHandItemController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.PlayerHealthBarViewController.html": {
    "href": "api/Global.PlayerHealthBarViewController.html",
    "title": "Class PlayerHealthBarViewController | Capstone documentation",
    "keywords": "Class PlayerHealthBarViewController Namespace Global Assembly MainGame.dll public class PlayerHealthBarViewController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> PlayerHealthBarViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.PlayerInventoryController.html": {
    "href": "api/Global.PlayerInventoryController.html",
    "title": "Class PlayerInventoryController | Capstone documentation",
    "keywords": "Class PlayerInventoryController Namespace Global Assembly MainGame.dll public class PlayerInventoryController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> PlayerInventoryController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.PlayerModel.html": {
    "href": "api/Global.PlayerModel.html",
    "title": "Class PlayerModel | Capstone documentation",
    "keywords": "Class PlayerModel Namespace Global Assembly MikroFramework.dll public class PlayerModel : AbstractModel, IPlayerModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel PlayerModel Implements IPlayerModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties HP public BindableProperty<int> HP { get; } Property Value BindableProperty<int> Methods OnInit() protected override void OnInit()"
  },
  "api/Global.RandomNavMeshMovement.html": {
    "href": "api/Global.RandomNavMeshMovement.html",
    "title": "Class RandomNavMeshMovement | Capstone documentation",
    "keywords": "Class RandomNavMeshMovement Namespace Global Assembly MainGame.dll public class RandomNavMeshMovement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RandomNavMeshMovement Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.ReloadCommand.html": {
    "href": "api/Global.ReloadCommand.html",
    "title": "Class ReloadCommand | Capstone documentation",
    "keywords": "Class ReloadCommand Namespace Global Assembly MikroFramework.dll public class ReloadCommand : AbstractCommand<ReloadCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<ReloadCommand> ReloadCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<ReloadCommand>.AutoRecycle AbstractCommand<ReloadCommand>.OnRecycled() AbstractCommand<ReloadCommand>.IsRecycled AbstractCommand<ReloadCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.RubbishSlotViewController.html": {
    "href": "api/Global.RubbishSlotViewController.html",
    "title": "Class RubbishSlotViewController | Capstone documentation",
    "keywords": "Class RubbishSlotViewController Namespace Global Assembly MainGame.dll public class RubbishSlotViewController : ResourceSlotViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IEndDragHandler, IDragHandler, IBeginDragHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> ResourceSlotViewController RubbishSlotViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IPointerDownHandler IPointerUpHandler IPointerEnterHandler IPointerExitHandler IEndDragHandler IDragHandler IBeginDragHandler IEventSystemHandler Inherited Members ResourceSlotViewController.Slot ResourceSlotViewController.isSelected ResourceSlotViewController.slotBG ResourceSlotViewController.pointerDownObject ResourceSlotViewController.Awake() ResourceSlotViewController.OnPointerClick() ResourceSlotViewController.OnPointerDown(PointerEventData) ResourceSlotViewController.OnPointerUp(PointerEventData) ResourceSlotViewController.OnDrag(PointerEventData) ResourceSlotViewController.OnBeginDrag(PointerEventData) ResourceSlotViewController.OnEndDrag(PointerEventData) ResourceSlotViewController.SetSlot(ResourceSlot) ResourceSlotViewController.Activate(bool) ResourceSlotViewController.OnPointerEnter(PointerEventData) ResourceSlotViewController.OnPointerExit(PointerEventData) ResourceSlotViewController.SetSelected(bool) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.ShiftGunCommand.html": {
    "href": "api/Global.ShiftGunCommand.html",
    "title": "Class ShiftGunCommand | Capstone documentation",
    "keywords": "Class ShiftGunCommand Namespace Global Assembly MikroFramework.dll public class ShiftGunCommand : AbstractCommand<ShiftGunCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<ShiftGunCommand> ShiftGunCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<ShiftGunCommand>.AutoRecycle AbstractCommand<ShiftGunCommand>.OnRecycled() AbstractCommand<ShiftGunCommand>.IsRecycled AbstractCommand<ShiftGunCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.ShootCommand.html": {
    "href": "api/Global.ShootCommand.html",
    "title": "Class ShootCommand | Capstone documentation",
    "keywords": "Class ShootCommand Namespace Global Assembly MikroFramework.dll public class ShootCommand : AbstractCommand<ShootCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<ShootCommand> ShootCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<ShootCommand>.OnRecycled() AbstractCommand<ShootCommand>.IsRecycled AbstractCommand<ShootCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties AutoRecycle protected override bool AutoRecycle { get; } Property Value bool Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Global.ShootingEditor2D.html": {
    "href": "api/Global.ShootingEditor2D.html",
    "title": "Class ShootingEditor2D | Capstone documentation",
    "keywords": "Class ShootingEditor2D Namespace Global Assembly MikroFramework.dll public class ShootingEditor2D : Architecture<ShootingEditor2D>, IArchitecture Inheritance object Architecture<ShootingEditor2D> ShootingEditor2D Implements IArchitecture Inherited Members Architecture<ShootingEditor2D>.Interface Architecture<ShootingEditor2D>.OnRegisterPatch Architecture<ShootingEditor2D>.RegisterModel<T>(T) Architecture<ShootingEditor2D>.RegisterExtensibleUtility<T>(T) Architecture<ShootingEditor2D>.RegisterSystem<T>(T) Architecture<ShootingEditor2D>.GetModel<T>() Architecture<ShootingEditor2D>.SendCommand<T>() Architecture<ShootingEditor2D>.SendCommand<T>(T) Architecture<ShootingEditor2D>.GetSystem<T>(Action<T>) Architecture<ShootingEditor2D>.ResetArchitecture() Architecture<ShootingEditor2D>.SendEvent<T>() Architecture<ShootingEditor2D>.SendEvent<T>(T) Architecture<ShootingEditor2D>.RegisterEvent<T>(Action<T>) Architecture<ShootingEditor2D>.UnRegisterEvent<T>(Action<T>) Architecture<ShootingEditor2D>.SendQuery<TResult>(IQuery<TResult>) Architecture<ShootingEditor2D>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() protected override void Init()"
  },
  "api/Global.ShortCutResourceSlotViewController.html": {
    "href": "api/Global.ShortCutResourceSlotViewController.html",
    "title": "Class ShortCutResourceSlotViewController | Capstone documentation",
    "keywords": "Class ShortCutResourceSlotViewController Namespace Global Assembly MainGame.dll public class ShortCutResourceSlotViewController : ResourceSlotViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IEndDragHandler, IDragHandler, IBeginDragHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> ResourceSlotViewController ShortCutResourceSlotViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IPointerDownHandler IPointerUpHandler IPointerEnterHandler IPointerExitHandler IEndDragHandler IDragHandler IBeginDragHandler IEventSystemHandler Inherited Members ResourceSlotViewController.Slot ResourceSlotViewController.isSelected ResourceSlotViewController.slotBG ResourceSlotViewController.pointerDownObject ResourceSlotViewController.OnPointerClick() ResourceSlotViewController.OnPointerDown(PointerEventData) ResourceSlotViewController.OnPointerUp(PointerEventData) ResourceSlotViewController.OnDrag(PointerEventData) ResourceSlotViewController.OnBeginDrag(PointerEventData) ResourceSlotViewController.OnEndDrag(PointerEventData) ResourceSlotViewController.SetSlot(ResourceSlot) ResourceSlotViewController.Activate(bool) ResourceSlotViewController.OnPointerEnter(PointerEventData) ResourceSlotViewController.OnPointerExit(PointerEventData) ResourceSlotViewController.SetSelected(bool) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Awake() protected override void Awake() SetShortCutText(string) public void SetShortCutText(string text) Parameters text string"
  },
  "api/Global.SlotItemDragCanvas.html": {
    "href": "api/Global.SlotItemDragCanvas.html",
    "title": "Class SlotItemDragCanvas | Capstone documentation",
    "keywords": "Class SlotItemDragCanvas Namespace Global Assembly MainGame.dll public class SlotItemDragCanvas : MonoMikroSingleton<SlotItemDragCanvas>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<SlotItemDragCanvas> SlotItemDragCanvas Implements ISingleton Inherited Members MonoMikroSingleton<SlotItemDragCanvas>.instance MonoMikroSingleton<SlotItemDragCanvas>.Exists MonoMikroSingleton<SlotItemDragCanvas>.Singleton MonoMikroSingleton<SlotItemDragCanvas>.OnBeforeDestroy() MonoMikroSingleton<SlotItemDragCanvas>.OnSingletonInit() MonoMikroSingleton<SlotItemDragCanvas>.onApplicationQuit MonoMikroSingleton<SlotItemDragCanvas>.IsApplicationQuit MonoMikroSingleton<SlotItemDragCanvas>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.SlotResourceDescriptionPanel.html": {
    "href": "api/Global.SlotResourceDescriptionPanel.html",
    "title": "Class SlotResourceDescriptionPanel | Capstone documentation",
    "keywords": "Class SlotResourceDescriptionPanel Namespace Global Assembly MainGame.dll public class SlotResourceDescriptionPanel : PoolableGameObject, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject SlotResourceDescriptionPanel Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.OnStartOrAllocate() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties IsShowing public bool IsShowing { get; } Property Value bool Methods Awake() public void Awake() GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture Hide() public void Hide() OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() SetContent(string, string) public void SetContent(string name, string description) Parameters name string description string Show() public void Show()"
  },
  "api/Global.StatSystem.html": {
    "href": "api/Global.StatSystem.html",
    "title": "Class StatSystem | Capstone documentation",
    "keywords": "Class StatSystem Namespace Global Assembly MikroFramework.dll public class StatSystem : AbstractSystem, IStatSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem StatSystem Implements IStatSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties KillCount public BindableProperty<int> KillCount { get; } Property Value BindableProperty<int> Methods OnInit() protected override void OnInit()"
  },
  "api/Global.SupplyStation.html": {
    "href": "api/Global.SupplyStation.html",
    "title": "Class SupplyStation | Capstone documentation",
    "keywords": "Class SupplyStation Namespace Global Assembly MikroFramework.dll public class SupplyStation : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> SupplyStation Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.TimeSystemTest.html": {
    "href": "api/Global.TimeSystemTest.html",
    "title": "Class TimeSystemTest | Capstone documentation",
    "keywords": "Class TimeSystemTest Namespace Global Assembly MikroFramework.dll public class TimeSystemTest : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TimeSystemTest Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.TutorialController.html": {
    "href": "api/Global.TutorialController.html",
    "title": "Class TutorialController | Capstone documentation",
    "keywords": "Class TutorialController Namespace Global Assembly MainGame.dll public class TutorialController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> TutorialController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.UIController.html": {
    "href": "api/Global.UIController.html",
    "title": "Class UIController | Capstone documentation",
    "keywords": "Class UIController Namespace Global Assembly MikroFramework.dll public class UIController : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> UIController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.UIGameOver.html": {
    "href": "api/Global.UIGameOver.html",
    "title": "Class UIGameOver | Capstone documentation",
    "keywords": "Class UIGameOver Namespace Global Assembly MikroFramework.dll public class UIGameOver : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIGameOver Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.UIGamePass.html": {
    "href": "api/Global.UIGamePass.html",
    "title": "Class UIGamePass | Capstone documentation",
    "keywords": "Class UIGamePass Namespace Global Assembly MikroFramework.dll public class UIGamePass : AbstractMikroController<ShootingEditor2D>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<ShootingEditor2D> UIGamePass Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.UIGameStart.html": {
    "href": "api/Global.UIGameStart.html",
    "title": "Class UIGameStart | Capstone documentation",
    "keywords": "Class UIGameStart Namespace Global Assembly MikroFramework.dll public class UIGameStart : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIGameStart Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Global.UIHealthBarZone.html": {
    "href": "api/Global.UIHealthBarZone.html",
    "title": "Class UIHealthBarZone | Capstone documentation",
    "keywords": "Class UIHealthBarZone Namespace Global Assembly MainGame.dll public class UIHealthBarZone : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, ISingleton Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> UIHealthBarZone Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Singleton public static UIHealthBarZone Singleton { get; } Property Value UIHealthBarZone Methods OnSingletonInit() public void OnSingletonInit() SpawnHealthBarObject(HealthBar) public void SpawnHealthBarObject(HealthBar healthBar) Parameters healthBar HealthBar"
  },
  "api/Global.WeaponInventorySlotLayoutViewController.html": {
    "href": "api/Global.WeaponInventorySlotLayoutViewController.html",
    "title": "Class WeaponInventorySlotLayoutViewController | Capstone documentation",
    "keywords": "Class WeaponInventorySlotLayoutViewController Namespace Global Assembly MainGame.dll public class WeaponInventorySlotLayoutViewController : MainInventorySlotLayoutViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> InventorySlotLayoutViewController MainInventorySlotLayoutViewController WeaponInventorySlotLayoutViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MainInventorySlotLayoutViewController.slotViewControllers MainInventorySlotLayoutViewController.Awake() MainInventorySlotLayoutViewController.OnInventorySlotAdded(List<ResourceSlot>, int) MainInventorySlotLayoutViewController.OnShowSlotItem() MainInventorySlotLayoutViewController.OnHideSlotItem() InventorySlotLayoutViewController.ShowSlotItemWhenInventoryUIClosed InventorySlotLayoutViewController.HotBarCategory MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnSelected(int) public override void OnSelected(int slotIndex) Parameters slotIndex int OnSlotViewControllerSpawned(ResourceSlotViewController, int) public override void OnSlotViewControllerSpawned(ResourceSlotViewController slotViewController, int index) Parameters slotViewController ResourceSlotViewController index int"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Capstone documentation",
    "keywords": "Namespace Classes AddBulletCommand AttackPlayer BossHealthBar Bullet BulletPickItem CameraController DPunkInputs Enemy FaceCamera FollowCamera FullBulletCommand GameEntrance Gun GunConfigItem GunConfigModel GunInfo GunPickItem GunSystem HUDManagerUI HealthBar HurtPlayerCommand KillEnemyCommand LevelEditor LevelPlayer MaxBulletCountQuery NextLevel OnCurrentGunChanged PickGunCommand Player PlayerHandItemController PlayerHealthBarViewController PlayerInventoryController PlayerModel RandomNavMeshMovement ReloadCommand RubbishSlotViewController ShiftGunCommand ShootCommand ShootingEditor2D ShortCutResourceSlotViewController SlotItemDragCanvas SlotResourceDescriptionPanel StatSystem SupplyStation TimeSystemTest TutorialController UIController UIGameOver UIGamePass UIGameStart UIHealthBarZone WeaponInventorySlotLayoutViewController Structs DPunkInputs.PlayerActions DPunkInputs.SharedActions DPunkInputs.UIActions Interfaces DPunkInputs.IPlayerActions DPunkInputs.ISharedActions DPunkInputs.IUIActions IGunConfigModel IGunSystem IPlayerModel IStatSystem Enums GunInfo.GunState LevelEditor.BrushType LevelEditor.OperateMode"
  },
  "api/MikroFramework.AboutPanel.html": {
    "href": "api/MikroFramework.AboutPanel.html",
    "title": "Class AboutPanel | Capstone documentation",
    "keywords": "Class AboutPanel Namespace MikroFramework Assembly MikroFramework.dll public class AboutPanel : AbstractPanelContainer, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer AboutPanel Implements IPanelContainer IPanel Inherited Members AbstractPanelContainer.Parent AbstractPanelContainer.Children AbstractPanelContainer.GetTopChild() AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.AbstractQuery-1.html": {
    "href": "api/MikroFramework.AbstractQuery-1.html",
    "title": "Class AbstractQuery<T> | Capstone documentation",
    "keywords": "Class AbstractQuery<T> Namespace MikroFramework Assembly MikroFramework.dll public abstract class AbstractQuery<T> : IQuery<T>, ICanSetArchitecture, ICanGetModel, ICanGetSystem, ICanGetUtility, IBelongToArchitecture Type Parameters T Inheritance object AbstractQuery<T> Implements IQuery<T> ICanSetArchitecture ICanGetModel ICanGetSystem ICanGetUtility IBelongToArchitecture Derived MaxBulletCountQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) Methods Do() public T Do() Returns T OnDo() protected abstract T OnDo() Returns T"
  },
  "api/MikroFramework.ActionKit.ActionContainer.html": {
    "href": "api/MikroFramework.ActionKit.ActionContainer.html",
    "title": "Class ActionContainer | Capstone documentation",
    "keywords": "Class ActionContainer Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public abstract class ActionContainer : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction ActionContainer Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Derived Sequence Spawn Timeline RepeatSequence Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.OnDispose() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.RecycleToCache() MikroAction.RecycleBackToPool() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties ActionRecorder public abstract IEnumerable ActionRecorder { get; } Property Value IEnumerable Methods OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() SetAutoRecycle(bool) Auto recycle after finished. If false, you will need to manually recycle the action by calling RecycleToCache() public override void SetAutoRecycle(bool autoRecycle) Parameters autoRecycle bool SetAutoRecycleForRecordedActions(bool) protected abstract void SetAutoRecycleForRecordedActions(bool autoRecycle) Parameters autoRecycle bool Update() public abstract void Update()"
  },
  "api/MikroFramework.ActionKit.ActionKit.html": {
    "href": "api/MikroFramework.ActionKit.ActionKit.html",
    "title": "Class ActionKit | Capstone documentation",
    "keywords": "Class ActionKit Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class ActionKit Inheritance object ActionKit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAction(float, MikroAction) [Obsolete] public void AddAction(float startAtSeconds, MikroAction action) Parameters startAtSeconds float action MikroAction Play() [Obsolete] public void Play() Play(MikroAction) public void Play(MikroAction action) Parameters action MikroAction"
  },
  "api/MikroFramework.ActionKit.ActionPlayer.html": {
    "href": "api/MikroFramework.ActionKit.ActionPlayer.html",
    "title": "Class ActionPlayer | Capstone documentation",
    "keywords": "Class ActionPlayer Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class ActionPlayer : MikroSingleton<ActionPlayer>, ISingleton Inheritance object MikroSingleton<ActionPlayer> ActionPlayer Implements ISingleton Inherited Members MikroSingleton<ActionPlayer>.instance MikroSingleton<ActionPlayer>.Singleton MikroSingleton<ActionPlayer>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Play(MikroAction) public void Play(MikroAction action) Parameters action MikroAction RegisterUpdate(MikroAction, Action) public IUnRegister RegisterUpdate(MikroAction action, Action onUpdate) Parameters action MikroAction onUpdate Action Returns IUnRegister UnRegisterUpdate(Action) public void UnRegisterUpdate(Action onUpdate) Parameters onUpdate Action"
  },
  "api/MikroFramework.ActionKit.CallbackAction.html": {
    "href": "api/MikroFramework.ActionKit.CallbackAction.html",
    "title": "Class CallbackAction | Capstone documentation",
    "keywords": "Class CallbackAction Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class CallbackAction : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction CallbackAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.OnDispose() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(Action) public static CallbackAction Allocate(Action callback) Parameters callback Action Returns CallbackAction OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool()"
  },
  "api/MikroFramework.ActionKit.CoroutineActionExecutor.html": {
    "href": "api/MikroFramework.ActionKit.CoroutineActionExecutor.html",
    "title": "Class CoroutineActionExecutor | Capstone documentation",
    "keywords": "Class CoroutineActionExecutor Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public static class CoroutineActionExecutor Inheritance object CoroutineActionExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(MikroAction) Execute a MikroAction's Execute() function Do not use for Sequence public static IEnumerator Execute(MikroAction action) Parameters action MikroAction Returns IEnumerator"
  },
  "api/MikroFramework.ActionKit.IExtensible-1.html": {
    "href": "api/MikroFramework.ActionKit.IExtensible-1.html",
    "title": "Interface IExtensible<T> | Capstone documentation",
    "keywords": "Interface IExtensible<T> Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public interface IExtensible<T> where T : MikroAction, IExtensible<T> Type Parameters T Extension Methods MikroActionExtensions.CustomizedAction<T, CustomizedAction>(IExtensible<T>) MikroActionExtensions.Delay<T>(IExtensible<T>, float) MikroActionExtensions.Event<T>(IExtensible<T>, Action) MikroActionExtensions.ResetSelf<T>(IExtensible<T>) MikroActionExtensions.Until<T>(IExtensible<T>, Func<bool>, Action) Methods AddAction(MikroAction) T AddAction(MikroAction action) Parameters action MikroAction Returns T"
  },
  "api/MikroFramework.ActionKit.MikroAction.html": {
    "href": "api/MikroFramework.ActionKit.MikroAction.html",
    "title": "Class MikroAction | Capstone documentation",
    "keywords": "Class MikroAction Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public abstract class MikroAction : ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Derived KillEnemyCommand ActionContainer CallbackAction DelayAction CustomizedActionExample.DEFAction ResetAction UntilAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Fields AutoRecycle protected bool AutoRecycle Field Value bool Finished public BindableProperty<bool> Finished Field Value BindableProperty<bool> OnBeginCallback public Action OnBeginCallback Field Value Action OnEndedCallback public Action OnEndedCallback Field Value Action Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods Execute() public void Execute() Finish() protected void Finish() GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture OnBegin() OnBegin is called right after executing this action, and will be only called once protected virtual void OnBegin() OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected virtual void OnDispose() OnEnd() OnEnd is called once before this action ends protected virtual void OnEnd() OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected virtual void OnExecuting() RecycleBackToPool() protected abstract void RecycleBackToPool() RecycleToCache() Auto invoked after end public void RecycleToCache() Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public virtual void Reset() SetArchitecture(IArchitecture) public void SetArchitecture(IArchitecture architecture) Parameters architecture IArchitecture SetAutoRecycle(bool) Auto recycle after finished. If false, you will need to manually recycle the action by calling RecycleToCache() public virtual void SetAutoRecycle(bool autoRecycle) Parameters autoRecycle bool SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) public MikroAction SetStopExecutingWhenTargetGameObjectDestroyed(GameObject target) Parameters target GameObject Returns MikroAction"
  },
  "api/MikroFramework.ActionKit.MikroActionExtensions.html": {
    "href": "api/MikroFramework.ActionKit.MikroActionExtensions.html",
    "title": "Class MikroActionExtensions | Capstone documentation",
    "keywords": "Class MikroActionExtensions Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public static class MikroActionExtensions Inheritance object MikroActionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CustomizedAction<T, CustomizedAction>(IExtensible<T>) public static T CustomizedAction<T, CustomizedAction>(this IExtensible<T> self) where T : MikroAction, IExtensible<T> where CustomizedAction : MikroAction, new() Parameters self IExtensible<T> Returns T Type Parameters T CustomizedAction Delay<T>(IExtensible<T>, float) public static T Delay<T>(this IExtensible<T> self, float delayTime) where T : MikroAction, IExtensible<T> Parameters self IExtensible<T> delayTime float Returns T Type Parameters T Event<T>(IExtensible<T>, Action) public static T Event<T>(this IExtensible<T> self, Action callback) where T : MikroAction, IExtensible<T> Parameters self IExtensible<T> callback Action Returns T Type Parameters T ResetSelf<T>(IExtensible<T>) Reset self and execute again public static T ResetSelf<T>(this IExtensible<T> self) where T : MikroAction, IExtensible<T> Parameters self IExtensible<T> Returns T Type Parameters T StopActionWhenGameObjectDestroyed(MikroAction, GameObject) public static MikroAction StopActionWhenGameObjectDestroyed(this MikroAction action, GameObject gameObject) Parameters action MikroAction gameObject GameObject Returns MikroAction Until<T>(IExtensible<T>, Func<bool>, Action) public static T Until<T>(this IExtensible<T> self, Func<bool> triggeredCondition, Action untilCallback = null) where T : MikroAction, IExtensible<T> Parameters self IExtensible<T> triggeredCondition Func<bool> untilCallback Action Returns T Type Parameters T"
  },
  "api/MikroFramework.ActionKit.MonoActionExecutor.html": {
    "href": "api/MikroFramework.ActionKit.MonoActionExecutor.html",
    "title": "Class MonoActionExecutor | Capstone documentation",
    "keywords": "Class MonoActionExecutor Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public static class MonoActionExecutor Inheritance object MonoActionExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(MonoBehaviour, MikroAction) Execute a MikroAction's Execute() function Do not use for Sequence public static void Execute(this MonoBehaviour self, MikroAction action) Parameters self MonoBehaviour action MikroAction"
  },
  "api/MikroFramework.ActionKit.MonoBehaviorActionExtensions.html": {
    "href": "api/MikroFramework.ActionKit.MonoBehaviorActionExtensions.html",
    "title": "Class MonoBehaviorActionExtensions | Capstone documentation",
    "keywords": "Class MonoBehaviorActionExtensions Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public static class MonoBehaviorActionExtensions Inheritance object MonoBehaviorActionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Repeat(MonoBehaviour, int) public static RepeatSequence Repeat(this MonoBehaviour self, int repeatTime = 1) Parameters self MonoBehaviour repeatTime int Returns RepeatSequence Sequence(MonoBehaviour) public static Sequence Sequence(this MonoBehaviour self) Parameters self MonoBehaviour Returns Sequence Spawn(MonoBehaviour) public static Spawn Spawn(this MonoBehaviour self) Parameters self MonoBehaviour Returns Spawn"
  },
  "api/MikroFramework.ActionKit.Sequence.html": {
    "href": "api/MikroFramework.ActionKit.Sequence.html",
    "title": "Class Sequence | Capstone documentation",
    "keywords": "Class Sequence Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class Sequence : ActionContainer, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable, IExtensible<Sequence> Inheritance object MikroAction ActionContainer Sequence Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable IExtensible<Sequence> Inherited Members ActionContainer.SetAutoRecycle(bool) ActionContainer.OnExecuting() MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.CustomizedAction<T, CustomizedAction>(IExtensible<T>) MikroActionExtensions.Delay<T>(IExtensible<T>, float) MikroActionExtensions.Event<T>(IExtensible<T>, Action) MikroActionExtensions.ResetSelf<T>(IExtensible<T>) MikroActionExtensions.Until<T>(IExtensible<T>, Func<bool>, Action) MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties ActionRecorder public override IEnumerable ActionRecorder { get; } Property Value IEnumerable Methods AddAction(MikroAction) Add an action to the sequence, in which each action in the sequence will be played in sequence each frame public Sequence AddAction(MikroAction action) Parameters action MikroAction Returns Sequence AddAction(List<MikroAction>) public Sequence AddAction(List<MikroAction> actions) Parameters actions List<MikroAction> Returns Sequence Allocate() public static Sequence Allocate() Returns Sequence OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() RecycleBackToPool() protected override void RecycleBackToPool() RemoveAction(MikroAction) public MikroAction RemoveAction(MikroAction action) Parameters action MikroAction Returns MikroAction Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public override void Reset() SetAutoRecycleForRecordedActions(bool) protected override void SetAutoRecycleForRecordedActions(bool autoRecycle) Parameters autoRecycle bool Update() public override void Update()"
  },
  "api/MikroFramework.ActionKit.Spawn.html": {
    "href": "api/MikroFramework.ActionKit.Spawn.html",
    "title": "Class Spawn | Capstone documentation",
    "keywords": "Class Spawn Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class Spawn : ActionContainer, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable, IExtensible<Spawn> Inheritance object MikroAction ActionContainer Spawn Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable IExtensible<Spawn> Inherited Members ActionContainer.SetAutoRecycle(bool) ActionContainer.OnExecuting() MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.CustomizedAction<T, CustomizedAction>(IExtensible<T>) MikroActionExtensions.Delay<T>(IExtensible<T>, float) MikroActionExtensions.Event<T>(IExtensible<T>, Action) MikroActionExtensions.ResetSelf<T>(IExtensible<T>) MikroActionExtensions.Until<T>(IExtensible<T>, Func<bool>, Action) MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties ActionRecorder public override IEnumerable ActionRecorder { get; } Property Value IEnumerable Methods AddAction(MikroAction) public Spawn AddAction(MikroAction action) Parameters action MikroAction Returns Spawn Allocate() public static Spawn Allocate() Returns Spawn OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() RecycleBackToPool() protected override void RecycleBackToPool() Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public override void Reset() SetAutoRecycleForRecordedActions(bool) protected override void SetAutoRecycleForRecordedActions(bool autoRecycle) Parameters autoRecycle bool Update() public override void Update()"
  },
  "api/MikroFramework.ActionKit.Timeline.html": {
    "href": "api/MikroFramework.ActionKit.Timeline.html",
    "title": "Class Timeline | Capstone documentation",
    "keywords": "Class Timeline Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class Timeline : ActionContainer, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction ActionContainer Timeline Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members ActionContainer.SetAutoRecycle(bool) ActionContainer.OnExecuting() MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Finish() MikroAction.OnEnd() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties ActionRecorder public override IEnumerable ActionRecorder { get; } Property Value IEnumerable Methods AddAction(float, MikroAction) public void AddAction(float startSeconds, MikroAction action) Parameters startSeconds float action MikroAction Allocate() public static Timeline Allocate() Returns Timeline CompleteCalenderItem(Timepoint) [Obsolete(\"This method is deprecated.\")] public void CompleteCalenderItem(Timepoint item) Parameters item Timepoint GetAvailableCalenderItem(float) [Obsolete(\"This method is deprecated.\")] public List<Timepoint> GetAvailableCalenderItem(float currentSeconds) Parameters currentSeconds float Returns List<Timepoint> OnBegin() OnBegin is called right after executing this action, and will be only called once protected override void OnBegin() OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() Record(Timepoint) [Obsolete(\"This method is deprecated. Use AddAction() instead\")] public void Record(Timepoint item) Parameters item Timepoint RecycleBackToPool() protected override void RecycleBackToPool() Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public override void Reset() SetAutoRecycleForRecordedActions(bool) protected override void SetAutoRecycleForRecordedActions(bool autoRecycle) Parameters autoRecycle bool Update() public override void Update()"
  },
  "api/MikroFramework.ActionKit.Timepoint.html": {
    "href": "api/MikroFramework.ActionKit.Timepoint.html",
    "title": "Class Timepoint | Capstone documentation",
    "keywords": "Class Timepoint Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class Timepoint : IPoolable Inheritance object Timepoint Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public MikroAction Action Field Value MikroAction StartSeconds public float StartSeconds Field Value float Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods Allocate() public static Timepoint Allocate() Returns Timepoint OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.ActionKit.Timer.html": {
    "href": "api/MikroFramework.ActionKit.Timer.html",
    "title": "Class Timer | Capstone documentation",
    "keywords": "Class Timer Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public class Timer Inheritance object Timer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CurrentSeconds public float CurrentSeconds Field Value float Methods StartTimer() Start the timer public void StartTimer() UpdateTimeData() Calculate the time elapsed since the start of the timer public void UpdateTimeData()"
  },
  "api/MikroFramework.ActionKit.UpdateActionExecutor.ActionKitUpdateTrigger.html": {
    "href": "api/MikroFramework.ActionKit.UpdateActionExecutor.ActionKitUpdateTrigger.html",
    "title": "Class UpdateActionExecutor.ActionKitUpdateTrigger | Capstone documentation",
    "keywords": "Class UpdateActionExecutor.ActionKitUpdateTrigger Namespace MikroFramework.ActionKit Assembly MikroFramework.dll [MonoSingletonPath(\"[FrameworkPersistent]/[ActionKit]/ActionKitUpdater\")] public class UpdateActionExecutor.ActionKitUpdateTrigger : MonoPersistentMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger> MonoPersistentMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger> UpdateActionExecutor.ActionKitUpdateTrigger Implements ISingleton Inherited Members MonoPersistentMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.instance MonoPersistentMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.Singleton MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.Exists MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.OnBeforeDestroy() MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.OnSingletonInit() MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.onApplicationQuit MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.IsApplicationQuit MonoMikroSingleton<UpdateActionExecutor.ActionKitUpdateTrigger>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields OnUpdate public Action OnUpdate Field Value Action"
  },
  "api/MikroFramework.ActionKit.UpdateActionExecutor.html": {
    "href": "api/MikroFramework.ActionKit.UpdateActionExecutor.html",
    "title": "Class UpdateActionExecutor | Capstone documentation",
    "keywords": "Class UpdateActionExecutor Namespace MikroFramework.ActionKit Assembly MikroFramework.dll public static class UpdateActionExecutor Inheritance object UpdateActionExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(MikroAction) public static void Execute(MikroAction action) Parameters action MikroAction"
  },
  "api/MikroFramework.ActionKit.html": {
    "href": "api/MikroFramework.ActionKit.html",
    "title": "Namespace MikroFramework.ActionKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.ActionKit Classes ActionContainer ActionKit ActionPlayer CallbackAction CoroutineActionExecutor MikroAction MikroActionExtensions MonoActionExecutor MonoBehaviorActionExtensions Sequence Spawn Timeline Timepoint Timer UpdateActionExecutor UpdateActionExecutor.ActionKitUpdateTrigger Interfaces IExtensible<T>"
  },
  "api/MikroFramework.Architecture.AbstractCommand-1.html": {
    "href": "api/MikroFramework.Architecture.AbstractCommand-1.html",
    "title": "Class AbstractCommand<T> | Capstone documentation",
    "keywords": "Class AbstractCommand<T> Namespace MikroFramework.Architecture Assembly MikroFramework.dll Non-async command public abstract class AbstractCommand<T> : ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture where T : AbstractCommand<T>, new() Type Parameters T Inheritance object AbstractCommand<T> Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Derived AddBulletCommand FullBulletCommand HurtPlayerCommand PickGunCommand ReloadCommand ShiftGunCommand ShootCommand BuyLifeCommand AddCountCommand SubtractCount KillEnemyCommand MissCommand StartGameCommand DirectSelectHotBarSlotCommand NavigateSelectHotBarSlotCommand PlayerThrowAllSlotResourceCommand SlotItemDragReleaseCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties AutoRecycle protected virtual bool AutoRecycle { get; } Property Value bool IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods OnExecute() Execute this command protected abstract void OnExecute() OnRecycled() public virtual void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.Architecture.AbstractMikroController-1.html": {
    "href": "api/MikroFramework.Architecture.AbstractMikroController-1.html",
    "title": "Class AbstractMikroController<T> | Capstone documentation",
    "keywords": "Class AbstractMikroController<T> Namespace MikroFramework.Architecture Assembly MikroFramework.dll public abstract class AbstractMikroController<T> : MonoBehaviour, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : Architecture<T>, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<T> Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AttackPlayer Bullet BulletPickItem Gun GunPickItem HealthBar Player PlayerHandItemController PlayerHealthBarViewController PlayerInventoryController SupplyStation TutorialController UIController UIGamePass UIHealthBarZone Enemy ErrorArea GamePanel GameWinPanel Game GameStartPanel UI InventorySlotLayoutViewController ResourceSlotViewController PlayerMovement GunRecoil Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Architecture.AbstractModel.html": {
    "href": "api/MikroFramework.Architecture.AbstractModel.html",
    "title": "Class AbstractModel | Capstone documentation",
    "keywords": "Class AbstractModel Namespace MikroFramework.Architecture Assembly MikroFramework.dll public abstract class AbstractModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel Implements IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Derived AbstractSavableModel GunConfigModel PlayerModel CounterModel GameModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Methods OnInit() protected abstract void OnInit()"
  },
  "api/MikroFramework.Architecture.AbstractSystem.html": {
    "href": "api/MikroFramework.Architecture.AbstractSystem.html",
    "title": "Class AbstractSystem | Capstone documentation",
    "keywords": "Class AbstractSystem Namespace MikroFramework.Architecture Assembly MikroFramework.dll public abstract class AbstractSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem Implements ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Derived AbstractSavableSystem GunSystem StatSystem AchievementSystem CountDownSystem AchievementSystem ScoreSystem TimeSystem AbstractResourceSlotsSystem<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnInit() protected abstract void OnInit()"
  },
  "api/MikroFramework.Architecture.Architecture-1.html": {
    "href": "api/MikroFramework.Architecture.Architecture-1.html",
    "title": "Class Architecture<T> | Capstone documentation",
    "keywords": "Class Architecture<T> Namespace MikroFramework.Architecture Assembly MikroFramework.dll public abstract class Architecture<T> : IArchitecture where T : Architecture<T>, new() Type Parameters T Inheritance object Architecture<T> Implements IArchitecture Derived SavableArchitecture<T> ShootingEditor2D CounterApp PointGame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OnRegisterPatch public static Action<T> OnRegisterPatch Field Value Action<T> Properties Interface public static IArchitecture Interface { get; } Property Value IArchitecture Methods GetModel<T>() Get a model from a system public T GetModel<T>() where T : class, IModel Returns T Type Parameters T GetSystem<T>(Action<T>) Get an ISystem that registered to the archiecture public T GetSystem<T>(Action<T> onDelayed = null) where T : class, ISystem Parameters onDelayed Action<T> Returns T Type Parameters T GetUtility<T>() Get a specific utility of the current architecture, should be called in the Init() function of Model Objects public T GetUtility<T>() where T : class, IUtility Returns T Type Parameters T Init() protected abstract void Init() RegisterEvent<T>(Action<T>) RegisterInstance a listener to a Type event public IUnRegister RegisterEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> Returns IUnRegister Type Parameters T RegisterExtensibleUtility<T>(T) RegisterInstance an Utility to the current architecture, should be called in the Init function of the current architecture public void RegisterExtensibleUtility<T>(T instance) where T : IUtility Parameters instance T Type Parameters T RegisterModel<T>(T) RegisterInstance a Model to the current architecture, should be called in the Init function of the current architecture public virtual void RegisterModel<T>(T model) where T : IModel Parameters model T Type Parameters T RegisterSystem<T>(T) RegisterInstance an ISystem to the architecture public virtual void RegisterSystem<T>(T system) where T : ISystem Parameters system T Type Parameters T ResetArchitecture() public static void ResetArchitecture() SendCommand<T>() Send a ICommand public void SendCommand<T>() where T : class, ICommand, new() Type Parameters T SendCommand<T>(T) Send a ICommand object public void SendCommand<T>(T command) where T : class, ICommand Parameters command T Type Parameters T SendEvent<T>() Send a Type event public void SendEvent<T>() where T : new() Type Parameters T SendEvent<T>(T) Send a type event object public void SendEvent<T>(T e) Parameters e T Type Parameters T SendQuery<TResult>(IQuery<TResult>) public TResult SendQuery<TResult>(IQuery<TResult> query) Parameters query IQuery<TResult> Returns TResult Type Parameters TResult UnRegisterEvent<T>(Action<T>) Unregister a listener of a Type event public void UnRegisterEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanGetModelExtension.html": {
    "href": "api/MikroFramework.Architecture.CanGetModelExtension.html",
    "title": "Class CanGetModelExtension | Capstone documentation",
    "keywords": "Class CanGetModelExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanGetModelExtension Inheritance object CanGetModelExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetModel<T>(ICanGetModel) public static T GetModel<T>(this ICanGetModel self) where T : class, IModel Parameters self ICanGetModel Returns T Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanGetSystemExtension.html": {
    "href": "api/MikroFramework.Architecture.CanGetSystemExtension.html",
    "title": "Class CanGetSystemExtension | Capstone documentation",
    "keywords": "Class CanGetSystemExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanGetSystemExtension Inheritance object CanGetSystemExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetSystem<T>(ICanGetSystem, Action<T>) public static T GetSystem<T>(this ICanGetSystem self, Action<T> delayedResult = null) where T : class, ISystem Parameters self ICanGetSystem delayedResult Action<T> Returns T Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanGetUtilityExtension.html": {
    "href": "api/MikroFramework.Architecture.CanGetUtilityExtension.html",
    "title": "Class CanGetUtilityExtension | Capstone documentation",
    "keywords": "Class CanGetUtilityExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanGetUtilityExtension Inheritance object CanGetUtilityExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetUtility<T>(ICanGetUtility) public static T GetUtility<T>(this ICanGetUtility self) where T : class, IUtility Parameters self ICanGetUtility Returns T Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanRegisterEventExtension.html": {
    "href": "api/MikroFramework.Architecture.CanRegisterEventExtension.html",
    "title": "Class CanRegisterEventExtension | Capstone documentation",
    "keywords": "Class CanRegisterEventExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanRegisterEventExtension Inheritance object CanRegisterEventExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterEvent<T>(ICanRegisterEvent, Action<T>) public static IUnRegister RegisterEvent<T>(this ICanRegisterEvent self, Action<T> onEvent) Parameters self ICanRegisterEvent onEvent Action<T> Returns IUnRegister Type Parameters T UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) public static void UnRegisterEvent<T>(this ICanRegisterEvent self, Action<T> onEvent) Parameters self ICanRegisterEvent onEvent Action<T> Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanSendCommandExtension.html": {
    "href": "api/MikroFramework.Architecture.CanSendCommandExtension.html",
    "title": "Class CanSendCommandExtension | Capstone documentation",
    "keywords": "Class CanSendCommandExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanSendCommandExtension Inheritance object CanSendCommandExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendCommand<T>(ICanSendCommand) public static void SendCommand<T>(this ICanSendCommand self) where T : class, ICommand, new() Parameters self ICanSendCommand Type Parameters T SendCommand<T>(ICanSendCommand, T) public static void SendCommand<T>(this ICanSendCommand self, T command) where T : class, ICommand Parameters self ICanSendCommand command T Type Parameters T"
  },
  "api/MikroFramework.Architecture.CanSendEventExtension.html": {
    "href": "api/MikroFramework.Architecture.CanSendEventExtension.html",
    "title": "Class CanSendEventExtension | Capstone documentation",
    "keywords": "Class CanSendEventExtension Namespace MikroFramework.Architecture Assembly MikroFramework.dll public static class CanSendEventExtension Inheritance object CanSendEventExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendEvent<T>(ICanSendEvent) public static void SendEvent<T>(this ICanSendEvent self) where T : new() Parameters self ICanSendEvent Type Parameters T SendEvent<T>(ICanSendEvent, T) public static void SendEvent<T>(this ICanSendEvent self, T e) Parameters self ICanSendEvent e T Type Parameters T"
  },
  "api/MikroFramework.Architecture.IArchitecture.html": {
    "href": "api/MikroFramework.Architecture.IArchitecture.html",
    "title": "Interface IArchitecture | Capstone documentation",
    "keywords": "Interface IArchitecture Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface IArchitecture Methods GetModel<T>() RegisterInstance an IModel to the architecture T GetModel<T>() where T : class, IModel Returns T Type Parameters T GetSystem<T>(Action<T>) Get an ISystem that registered to the archiecture T GetSystem<T>(Action<T> onDelayed = null) where T : class, ISystem Parameters onDelayed Action<T> Returns T Type Parameters T GetUtility<T>() Get an IUtility object that Inited in the Architecture T GetUtility<T>() where T : class, IUtility Returns T Type Parameters T RegisterEvent<T>(Action<T>) RegisterInstance a listener to a Type event IUnRegister RegisterEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> Returns IUnRegister Type Parameters T RegisterExtensibleUtility<T>(T) RegisterInstance an IUtility to the architecture void RegisterExtensibleUtility<T>(T instance) where T : IUtility Parameters instance T Type Parameters T RegisterModel<T>(T) RegisterInstance a model to the architecture void RegisterModel<T>(T instance) where T : IModel Parameters instance T Type Parameters T RegisterSystem<T>(T) RegisterInstance an ISystem to the architecture void RegisterSystem<T>(T system) where T : ISystem Parameters system T Type Parameters T SendCommand<T>() Send a ICommand void SendCommand<T>() where T : class, ICommand, new() Type Parameters T SendCommand<T>(T) Send a ICommand object void SendCommand<T>(T command) where T : class, ICommand Parameters command T Type Parameters T SendEvent<T>() Send a Type event void SendEvent<T>() where T : new() Type Parameters T SendEvent<T>(T) Send a type event object void SendEvent<T>(T e) Parameters e T Type Parameters T SendQuery<TResult>(IQuery<TResult>) TResult SendQuery<TResult>(IQuery<TResult> query) Parameters query IQuery<TResult> Returns TResult Type Parameters TResult UnRegisterEvent<T>(Action<T>) Unregister a listener of a Type event void UnRegisterEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> Type Parameters T"
  },
  "api/MikroFramework.Architecture.IBelongToArchitecture.html": {
    "href": "api/MikroFramework.Architecture.IBelongToArchitecture.html",
    "title": "Interface IBelongToArchitecture | Capstone documentation",
    "keywords": "Interface IBelongToArchitecture Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface IBelongToArchitecture Methods GetArchitecture() IArchitecture GetArchitecture() Returns IArchitecture"
  },
  "api/MikroFramework.Architecture.ICanGetModel.html": {
    "href": "api/MikroFramework.Architecture.ICanGetModel.html",
    "title": "Interface ICanGetModel | Capstone documentation",
    "keywords": "Interface ICanGetModel Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanGetModel : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel)"
  },
  "api/MikroFramework.Architecture.ICanGetSystem.html": {
    "href": "api/MikroFramework.Architecture.ICanGetSystem.html",
    "title": "Interface ICanGetSystem | Capstone documentation",
    "keywords": "Interface ICanGetSystem Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanGetSystem : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>)"
  },
  "api/MikroFramework.Architecture.ICanGetUtility.html": {
    "href": "api/MikroFramework.Architecture.ICanGetUtility.html",
    "title": "Interface ICanGetUtility | Capstone documentation",
    "keywords": "Interface ICanGetUtility Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanGetUtility : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility)"
  },
  "api/MikroFramework.Architecture.ICanRegisterEvent.html": {
    "href": "api/MikroFramework.Architecture.ICanRegisterEvent.html",
    "title": "Interface ICanRegisterEvent | Capstone documentation",
    "keywords": "Interface ICanRegisterEvent Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanRegisterEvent : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>)"
  },
  "api/MikroFramework.Architecture.ICanSendCommand.html": {
    "href": "api/MikroFramework.Architecture.ICanSendCommand.html",
    "title": "Interface ICanSendCommand | Capstone documentation",
    "keywords": "Interface ICanSendCommand Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanSendCommand : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T)"
  },
  "api/MikroFramework.Architecture.ICanSendEvent.html": {
    "href": "api/MikroFramework.Architecture.ICanSendEvent.html",
    "title": "Interface ICanSendEvent | Capstone documentation",
    "keywords": "Interface ICanSendEvent Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanSendEvent : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T)"
  },
  "api/MikroFramework.Architecture.ICanSetArchitecture.html": {
    "href": "api/MikroFramework.Architecture.ICanSetArchitecture.html",
    "title": "Interface ICanSetArchitecture | Capstone documentation",
    "keywords": "Interface ICanSetArchitecture Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICanSetArchitecture Methods SetArchitecture(IArchitecture) void SetArchitecture(IArchitecture architecture) Parameters architecture IArchitecture"
  },
  "api/MikroFramework.Architecture.ICommand.html": {
    "href": "api/MikroFramework.Architecture.ICommand.html",
    "title": "Interface ICommand | Capstone documentation",
    "keywords": "Interface ICommand Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ICommand : ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inherited Members ICanSetArchitecture.SetArchitecture(IArchitecture) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Execute() void Execute()"
  },
  "api/MikroFramework.Architecture.IController.html": {
    "href": "api/MikroFramework.Architecture.IController.html",
    "title": "Interface IController | Capstone documentation",
    "keywords": "Interface IController Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface IController : ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>)"
  },
  "api/MikroFramework.Architecture.IModel.html": {
    "href": "api/MikroFramework.Architecture.IModel.html",
    "title": "Interface IModel | Capstone documentation",
    "keywords": "Interface IModel Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface IModel : ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Methods Init() void Init()"
  },
  "api/MikroFramework.Architecture.ISystem.html": {
    "href": "api/MikroFramework.Architecture.ISystem.html",
    "title": "Interface ISystem | Capstone documentation",
    "keywords": "Interface ISystem Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface ISystem : ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Init() void Init()"
  },
  "api/MikroFramework.Architecture.IUtility.html": {
    "href": "api/MikroFramework.Architecture.IUtility.html",
    "title": "Interface IUtility | Capstone documentation",
    "keywords": "Interface IUtility Namespace MikroFramework.Architecture Assembly MikroFramework.dll public interface IUtility"
  },
  "api/MikroFramework.Architecture.html": {
    "href": "api/MikroFramework.Architecture.html",
    "title": "Namespace MikroFramework.Architecture | Capstone documentation",
    "keywords": "Namespace MikroFramework.Architecture Classes AbstractCommand<T> Non-async command AbstractMikroController<T> AbstractModel AbstractSystem Architecture<T> CanGetModelExtension CanGetSystemExtension CanGetUtilityExtension CanRegisterEventExtension CanSendCommandExtension CanSendEventExtension Interfaces IArchitecture IBelongToArchitecture ICanGetModel ICanGetSystem ICanGetUtility ICanRegisterEvent ICanSendCommand ICanSendEvent ICanSetArchitecture ICommand IController IModel ISystem IUtility"
  },
  "api/MikroFramework.AssetDataTable.html": {
    "href": "api/MikroFramework.AssetDataTable.html",
    "title": "Class AssetDataTable | Capstone documentation",
    "keywords": "Class AssetDataTable Namespace MikroFramework Assembly MikroFramework.dll public class AssetDataTable : Table<AssetData>, IEnumerable<AssetData>, IEnumerable Inheritance object Table<AssetData> AssetDataTable Implements IEnumerable<AssetData> IEnumerable Inherited Members Table<AssetData>.Items Table<AssetData>.Add(AssetData) Table<AssetData>.Add(IEnumerable<AssetData>) Table<AssetData>.Remove(AssetData) Table<AssetData>.Update() Table<AssetData>.Clear() Table<AssetData>.Get(Func<AssetData, bool>) Table<AssetData>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NameIndex public TableIndex<string, AssetData> NameIndex Field Value TableIndex<string, AssetData> Methods GetAssetDataByResSearchKeys(ResSearchKeys) public AssetData GetAssetDataByResSearchKeys(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns AssetData OnAdd(AssetData) Add your logic for adding your customized index here public override void OnAdd(AssetData item) Parameters item AssetData OnClear() Triggered when the table is cleared protected override void OnClear() OnRemove(AssetData) Add your logic for removing your customized index here public override void OnRemove(AssetData item) Parameters item AssetData"
  },
  "api/MikroFramework.AudioKit.AudioInstance-1.html": {
    "href": "api/MikroFramework.AudioKit.AudioInstance-1.html",
    "title": "Class AudioInstance<T> | Capstone documentation",
    "keywords": "Class AudioInstance<T> Namespace MikroFramework.AudioKit Assembly MikroFramework.dll public class AudioInstance<T> : MonoBehaviour, ISingleton where T : AudioInstance<T> Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour AudioInstance<T> Implements ISingleton Derived BGMAudioInstance Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields singleton public static AudioSource singleton Field Value AudioSource Properties Singleton public static AudioSource Singleton { get; } Property Value AudioSource Methods OnSingletonInit() public void OnSingletonInit()"
  },
  "api/MikroFramework.AudioKit.AudioManager.html": {
    "href": "api/MikroFramework.AudioKit.AudioManager.html",
    "title": "Class AudioManager | Capstone documentation",
    "keywords": "Class AudioManager Namespace MikroFramework.AudioKit Assembly MikroFramework.dll [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] [MonoSingletonPath(\"[FrameworkPersistent]/AudioManager\")] public class AudioManager : ManagerBehavior, IManager, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior AudioManager Implements IManager ISingleton Inherited Members ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods AudioOff() Turn off all audios [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void AudioOff() AudioOn() Turn on all audios [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void AudioOn() BGMMute() Mute the BGM [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void BGMMute() BGMOn() Turn on the BGM [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void BGMOn() PauseBGM() Pause playing the current BGM [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void PauseBGM() PlayAudio(string) [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void PlayAudio(string audioName) Parameters audioName string PlayBGM(string, bool) [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void PlayBGM(string musicName, bool loop) Parameters musicName string loop bool ResumeBGM() Resume the paused BGM [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void ResumeBGM() StopBGM() [Obsolete(\"AudioManager is Obsolete. Use AudioSystem Instead\")] public static void StopBGM()"
  },
  "api/MikroFramework.AudioKit.AudioSystem.html": {
    "href": "api/MikroFramework.AudioKit.AudioSystem.html",
    "title": "Class AudioSystem | Capstone documentation",
    "keywords": "Class AudioSystem Namespace MikroFramework.AudioKit Assembly MikroFramework.dll public class AudioSystem : MonoPersistentMikroSingleton<AudioSystem>, ISingleton, IAudioSystem Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<AudioSystem> MonoPersistentMikroSingleton<AudioSystem> AudioSystem Implements ISingleton IAudioSystem Inherited Members MonoPersistentMikroSingleton<AudioSystem>.instance MonoPersistentMikroSingleton<AudioSystem>.Singleton MonoMikroSingleton<AudioSystem>.Exists MonoMikroSingleton<AudioSystem>.OnBeforeDestroy() MonoMikroSingleton<AudioSystem>.OnSingletonInit() MonoMikroSingleton<AudioSystem>.onApplicationQuit MonoMikroSingleton<AudioSystem>.IsApplicationQuit MonoMikroSingleton<AudioSystem>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields MasterVolumeStorageKey public const string MasterVolumeStorageKey = \"AudioSystemMasterVolume\" Field Value string MusicVolumeStorageKey public const string MusicVolumeStorageKey = \"AudioSystemMusicVolume\" Field Value string SoundVolumeStorageKey public const string SoundVolumeStorageKey = \"AudioSystemSoundVolume\" Field Value string Properties MasterVolume public float MasterVolume { get; set; } Property Value float MusicVolume public float MusicVolume { get; set; } Property Value float SoundVolume public float SoundVolume { get; set; } Property Value float Methods Destroy() public void Destroy() Initialize(Action) public void Initialize(Action onInitialize) Parameters onInitialize Action PauseMusic() public void PauseMusic() PauseSound(string) Pause all sounds with the same clip name public void PauseSound(string clipName) Parameters clipName string PauseSound(AudioSource) public void PauseSound(AudioSource audioSource) Parameters audioSource AudioSource Play2DSound(string, float, bool) public AudioSource Play2DSound(string clipName, float relativeVolume = 1, bool loop = false) Parameters clipName string relativeVolume float loop bool Returns AudioSource Play2DSound(AudioClip, float, bool) public AudioSource Play2DSound(AudioClip clip, float relativeVolume = 1, bool loop = false) Parameters clip AudioClip relativeVolume float loop bool Returns AudioSource Play3DSound(string, Vector3, float, bool, bool) public AudioSource Play3DSound(string clipName, Vector3 position, float relativeVolume = 1, bool loop = false, bool autoDestroy = true) Parameters clipName string position Vector3 relativeVolume float loop bool autoDestroy bool Returns AudioSource Play3DSound(AudioClip, Vector3, float, bool, bool) public AudioSource Play3DSound(AudioClip clip, Vector3 position, float relativeVolume = 1, bool loop = false, bool autoDestroy = true) Parameters clip AudioClip position Vector3 relativeVolume float loop bool autoDestroy bool Returns AudioSource PlayMusic(string, float) public void PlayMusic(string clipPath, float relativeVolume = 1) Parameters clipPath string relativeVolume float PlayMusic(AudioClip, float) public void PlayMusic(AudioClip clip, float relativeVolume = 1) Parameters clip AudioClip relativeVolume float PlayMusic(AudioClip, AudioSource, float) public void PlayMusic(AudioClip clip, AudioSource audioSource, float relativeVolume = 1) Parameters clip AudioClip audioSource AudioSource relativeVolume float PlaySound(string, AudioSource, out AudioClip, bool, float, bool) public AudioSource PlaySound(string clipName, AudioSource audioSource, out AudioClip clip, bool loop, float relativeVolume = 1, bool autoDestroy = true) Parameters clipName string audioSource AudioSource clip AudioClip loop bool relativeVolume float autoDestroy bool Returns AudioSource PlaySound(AudioClip, AudioSource, bool, float, bool) public AudioSource PlaySound(AudioClip clip, AudioSource audioSource, bool loop, float relativeVolume = 1, bool autoDestroy = true) Parameters clip AudioClip audioSource AudioSource loop bool relativeVolume float autoDestroy bool Returns AudioSource ResumeMusic() public void ResumeMusic() ResumeSound(string) Resume all sounds with the same clip name public void ResumeSound(string clipName) Parameters clipName string ResumeSound(AudioSource) public void ResumeSound(AudioSource audioSource) Parameters audioSource AudioSource SetArchitecture(IArchitecture) public void SetArchitecture(IArchitecture architecture) Parameters architecture IArchitecture StopMusic() public void StopMusic() StopSound(string) Stop all sounds with the same clip name public void StopSound(string clipName) Parameters clipName string StopSound(AudioSource) public void StopSound(AudioSource audioSource) Parameters audioSource AudioSource"
  },
  "api/MikroFramework.AudioKit.BGMAudioInstance.html": {
    "href": "api/MikroFramework.AudioKit.BGMAudioInstance.html",
    "title": "Class BGMAudioInstance | Capstone documentation",
    "keywords": "Class BGMAudioInstance Namespace MikroFramework.AudioKit Assembly MikroFramework.dll public class BGMAudioInstance : AudioInstance<BGMAudioInstance>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour AudioInstance<BGMAudioInstance> BGMAudioInstance Implements ISingleton Inherited Members AudioInstance<BGMAudioInstance>.Singleton AudioInstance<BGMAudioInstance>.singleton AudioInstance<BGMAudioInstance>.OnSingletonInit() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.AudioKit.IAudioSystem.html": {
    "href": "api/MikroFramework.AudioKit.IAudioSystem.html",
    "title": "Interface IAudioSystem | Capstone documentation",
    "keywords": "Interface IAudioSystem Namespace MikroFramework.AudioKit Assembly MikroFramework.dll public interface IAudioSystem Properties MusicVolume float MusicVolume { get; set; } Property Value float SoundVolume float SoundVolume { get; set; } Property Value float Methods Destroy() void Destroy() Initialize(Action) void Initialize(Action onInitialize) Parameters onInitialize Action PauseMusic() void PauseMusic() PauseSound(string) Pause all sounds with the same clip name void PauseSound(string clipName) Parameters clipName string PauseSound(AudioSource) void PauseSound(AudioSource audioSource) Parameters audioSource AudioSource Play2DSound(string, float, bool) AudioSource Play2DSound(string clipName, float relativeVolume = 1, bool loop = false) Parameters clipName string relativeVolume float loop bool Returns AudioSource Play2DSound(AudioClip, float, bool) AudioSource Play2DSound(AudioClip clip, float relativeVolume = 1, bool loop = false) Parameters clip AudioClip relativeVolume float loop bool Returns AudioSource Play3DSound(string, Vector3, float, bool, bool) AudioSource Play3DSound(string clipName, Vector3 position, float relativeVolume = 1, bool loop = false, bool autoDestroy = true) Parameters clipName string position Vector3 relativeVolume float loop bool autoDestroy bool Returns AudioSource Play3DSound(AudioClip, Vector3, float, bool, bool) AudioSource Play3DSound(AudioClip clip, Vector3 position, float relativeVolume = 1, bool loop = false, bool autoDestroy = true) Parameters clip AudioClip position Vector3 relativeVolume float loop bool autoDestroy bool Returns AudioSource PlayMusic(string, float) void PlayMusic(string clipPath, float relativeVolume = 1) Parameters clipPath string relativeVolume float PlayMusic(AudioClip, float) void PlayMusic(AudioClip clip, float relativeVolume = 1) Parameters clip AudioClip relativeVolume float PlayMusic(AudioClip, AudioSource, float) void PlayMusic(AudioClip clip, AudioSource audioSource, float relativeVolume = 1) Parameters clip AudioClip audioSource AudioSource relativeVolume float PlaySound(string, AudioSource, out AudioClip, bool, float, bool) AudioSource PlaySound(string clipName, AudioSource audioSource, out AudioClip clip, bool loop, float relativeVolume = 1, bool autoDestroy = true) Parameters clipName string audioSource AudioSource clip AudioClip loop bool relativeVolume float autoDestroy bool Returns AudioSource PlaySound(AudioClip, AudioSource, bool, float, bool) AudioSource PlaySound(AudioClip clip, AudioSource audioSource, bool loop, float relativeVolume = 1, bool autoDestroy = true) Parameters clip AudioClip audioSource AudioSource loop bool relativeVolume float autoDestroy bool Returns AudioSource ResumeMusic() void ResumeMusic() ResumeSound(string) Resume all sounds with the same clip name void ResumeSound(string clipName) Parameters clipName string ResumeSound(AudioSource) void ResumeSound(AudioSource audioSource) Parameters audioSource AudioSource StopMusic() void StopMusic() StopSound(string) Stop all sounds with the same clip name void StopSound(string clipName) Parameters clipName string StopSound(AudioSource) void StopSound(AudioSource audioSource) Parameters audioSource AudioSource"
  },
  "api/MikroFramework.AudioKit.SoundType.html": {
    "href": "api/MikroFramework.AudioKit.SoundType.html",
    "title": "Enum SoundType | Capstone documentation",
    "keywords": "Enum SoundType Namespace MikroFramework.AudioKit Assembly MikroFramework.dll public enum SoundType Fields Sound2D = 0 Sound3D = 1"
  },
  "api/MikroFramework.AudioKit.html": {
    "href": "api/MikroFramework.AudioKit.html",
    "title": "Namespace MikroFramework.AudioKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.AudioKit Classes AudioInstance<T> AudioManager AudioSystem BGMAudioInstance Interfaces IAudioSystem Enums SoundType"
  },
  "api/MikroFramework.AudioSystemBasicExample.html": {
    "href": "api/MikroFramework.AudioSystemBasicExample.html",
    "title": "Class AudioSystemBasicExample | Capstone documentation",
    "keywords": "Class AudioSystemBasicExample Namespace MikroFramework Assembly MikroFramework.dll public class AudioSystemBasicExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AudioSystemBasicExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.AutoCreateUIExample.html": {
    "href": "api/MikroFramework.AutoCreateUIExample.html",
    "title": "Class AutoCreateUIExample | Capstone documentation",
    "keywords": "Class AutoCreateUIExample Namespace MikroFramework Assembly MikroFramework.dll public class AutoCreateUIExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AutoCreateUIExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.AutoDeleteActionsExample.html": {
    "href": "api/MikroFramework.AutoDeleteActionsExample.html",
    "title": "Class AutoDeleteActionsExample | Capstone documentation",
    "keywords": "Class AutoDeleteActionsExample Namespace MikroFramework Assembly MikroFramework.dll public class AutoDeleteActionsExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AutoDeleteActionsExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.BindableProperty.BindableProperty-1.html": {
    "href": "api/MikroFramework.BindableProperty.BindableProperty-1.html",
    "title": "Class BindableProperty<T> | Capstone documentation",
    "keywords": "Class BindableProperty<T> Namespace MikroFramework.BindableProperty Assembly MikroFramework.dll [Serializable] public class BindableProperty<T> : IBindableProperty Type Parameters T Inheritance object BindableProperty<T> Implements IBindableProperty Derived BindableDictionary<TKey, TValue> BindableHashset<T> BindableList<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BindableProperty() public BindableProperty() BindableProperty(T) public BindableProperty(T defaultValue = default) Parameters defaultValue T Properties ObjectValue public object ObjectValue { get; set; } Property Value object Value public T Value { get; set; } Property Value T Methods RegisterOnObjectValueChaned(Action<object, object>) public IUnRegister RegisterOnObjectValueChaned(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> Returns IUnRegister RegisterOnObjectValueChaned(Action<object>) public IUnRegister RegisterOnObjectValueChaned(Action<object> onValueChanged) Parameters onValueChanged Action<object> Returns IUnRegister RegisterOnValueChanged(Action<T, T>) RegisterInstance listeners to the event that triggered when the value of the property changes. public IUnRegister RegisterOnValueChanged(Action<T, T> onValueChanged) Parameters onValueChanged Action<T, T> old and new values Returns IUnRegister The returned IUnRegister allows you to call its UnRegisterWhenGameObjectDestroyed() function to unregister the event more convenient instead of calling UnRegisterOnValueChanged function RegisterOnValueChanged(Action<T>) RegisterInstance listeners to the event that triggered when the value of the property changes. [Obsolete(\"Use the one with two values (new and old) instead\")] public IUnRegister RegisterOnValueChanged(Action<T> onValueChanged) Parameters onValueChanged Action<T> Returns IUnRegister The returned IUnRegister allows you to call its UnRegisterWhenGameObjectDestroyed() function to unregister the event more convenient instead of calling UnRegisterOnValueChanged function RegisterWithInitObject(Action<object, object>) public IUnRegister RegisterWithInitObject(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> Returns IUnRegister RegisterWithInitObject(Action<object>) public IUnRegister RegisterWithInitObject(Action<object> onValueChanged) Parameters onValueChanged Action<object> Returns IUnRegister RegisterWithInitValue(Action<T, T>) public IUnRegister RegisterWithInitValue(Action<T, T> onValueChanged) Parameters onValueChanged Action<T, T> Returns IUnRegister RegisterWithInitValue(Action<T>) [Obsolete(\"Use the one with two values (new and old) instead\")] public IUnRegister RegisterWithInitValue(Action<T> onValueChanged) Parameters onValueChanged Action<T> Returns IUnRegister ToString() public override string ToString() Returns string UnRegisterAll() public void UnRegisterAll() UnRegisterOnObjectValueChanged(Action<object, object>) public void UnRegisterOnObjectValueChanged(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> UnRegisterOnObjectValueChanged(Action<object>) public void UnRegisterOnObjectValueChanged(Action<object> onValueChanged) Parameters onValueChanged Action<object> UnRegisterOnValueChanged(Action<T, T>) public void UnRegisterOnValueChanged(Action<T, T> onValueChanged) Parameters onValueChanged Action<T, T> UnRegisterOnValueChanged(Action<T>) Unregister listeners to the event that triggered when the value of the property changes [Obsolete(\"Use the one with two parameters (new and old) instead\")] public void UnRegisterOnValueChanged(Action<T> onValueChanged) Parameters onValueChanged Action<T> Operators implicit operator T(BindableProperty<T>) public static implicit operator T(BindableProperty<T> property) Parameters property BindableProperty<T> Returns T"
  },
  "api/MikroFramework.BindableProperty.IBindableProperty.html": {
    "href": "api/MikroFramework.BindableProperty.IBindableProperty.html",
    "title": "Interface IBindableProperty | Capstone documentation",
    "keywords": "Interface IBindableProperty Namespace MikroFramework.BindableProperty Assembly MikroFramework.dll public interface IBindableProperty Properties Value dynamic Value { get; set; } Property Value dynamic Methods RegisterOnObjectValueChaned(Action<object, object>) IUnRegister RegisterOnObjectValueChaned(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> Returns IUnRegister RegisterOnObjectValueChaned(Action<object>) IUnRegister RegisterOnObjectValueChaned(Action<object> onValueChanged) Parameters onValueChanged Action<object> Returns IUnRegister RegisterWithInitObject(Action<object, object>) IUnRegister RegisterWithInitObject(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> Returns IUnRegister RegisterWithInitObject(Action<object>) IUnRegister RegisterWithInitObject(Action<object> onValueChanged) Parameters onValueChanged Action<object> Returns IUnRegister UnRegisterAll() void UnRegisterAll() UnRegisterOnObjectValueChanged(Action<object, object>) void UnRegisterOnObjectValueChanged(Action<object, object> onValueChanged) Parameters onValueChanged Action<dynamic, dynamic> UnRegisterOnObjectValueChanged(Action<object>) void UnRegisterOnObjectValueChanged(Action<object> onValueChanged) Parameters onValueChanged Action<object>"
  },
  "api/MikroFramework.BindableProperty.html": {
    "href": "api/MikroFramework.BindableProperty.html",
    "title": "Namespace MikroFramework.BindableProperty | Capstone documentation",
    "keywords": "Namespace MikroFramework.BindableProperty Classes BindableProperty<T> Interfaces IBindableProperty"
  },
  "api/MikroFramework.CallbackRecord.html": {
    "href": "api/MikroFramework.CallbackRecord.html",
    "title": "Class CallbackRecord | Capstone documentation",
    "keywords": "Class CallbackRecord Namespace MikroFramework Assembly MikroFramework.dll public class CallbackRecord : IPoolable Inheritance object CallbackRecord Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EventType public EventType EventType Field Value EventType OnEventReceived public Action<MikroMessage> OnEventReceived Field Value Action<MikroMessage> Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods Allocate() Allocate a CallbackRecord from the pool public static CallbackRecord Allocate() Returns CallbackRecord RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.CanSendQueryExtension.html": {
    "href": "api/MikroFramework.CanSendQueryExtension.html",
    "title": "Class CanSendQueryExtension | Capstone documentation",
    "keywords": "Class CanSendQueryExtension Namespace MikroFramework Assembly MikroFramework.dll public static class CanSendQueryExtension Inheritance object CanSendQueryExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendQuery<T>(ICanSendQuery, IQuery<T>) public static T SendQuery<T>(this ICanSendQuery self, IQuery<T> query) Parameters self ICanSendQuery query IQuery<T> Returns T Type Parameters T"
  },
  "api/MikroFramework.CodeGen.AttributeInfo.html": {
    "href": "api/MikroFramework.CodeGen.AttributeInfo.html",
    "title": "Class AttributeInfo | Capstone documentation",
    "keywords": "Class AttributeInfo Namespace MikroFramework.CodeGen Assembly MikroFramework.dll public class AttributeInfo Inheritance object AttributeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AttributeName public string AttributeName Field Value string ObjName public string ObjName Field Value string PathInParent public string PathInParent Field Value string TypeName public string TypeName Field Value string"
  },
  "api/MikroFramework.CodeGen.Bind.html": {
    "href": "api/MikroFramework.CodeGen.Bind.html",
    "title": "Class Bind | Capstone documentation",
    "keywords": "Class Bind Namespace MikroFramework.CodeGen Assembly MikroFramework.dll public class Bind : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Bind Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields ArchitectureName public string ArchitectureName Field Value string CustomClassName public string CustomClassName Field Value string InhertFrom public BindInhertFrom InhertFrom Field Value BindInhertFrom ScriptAssembly public string ScriptAssembly Field Value string ScriptGenerateRootPath public string ScriptGenerateRootPath Field Value string ScriptNamespace public string ScriptNamespace Field Value string"
  },
  "api/MikroFramework.CodeGen.BindInhertFrom.html": {
    "href": "api/MikroFramework.CodeGen.BindInhertFrom.html",
    "title": "Enum BindInhertFrom | Capstone documentation",
    "keywords": "Enum BindInhertFrom Namespace MikroFramework.CodeGen Assembly MikroFramework.dll public enum BindInhertFrom Fields AbstractViewController = 2 CustomClass = 4 IController = 3 Mikrobehavior = 1 Monobehaviour = 0"
  },
  "api/MikroFramework.CodeGen.BindingDefaultNamespaces.html": {
    "href": "api/MikroFramework.CodeGen.BindingDefaultNamespaces.html",
    "title": "Class BindingDefaultNamespaces | Capstone documentation",
    "keywords": "Class BindingDefaultNamespaces Namespace MikroFramework.CodeGen Assembly MikroFramework.dll public static class BindingDefaultNamespaces Inheritance object BindingDefaultNamespaces Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultScriptNamespaces public static List<string> DefaultScriptNamespaces Field Value List<string>"
  },
  "api/MikroFramework.CodeGen.BindingNamingRules.html": {
    "href": "api/MikroFramework.CodeGen.BindingNamingRules.html",
    "title": "Class BindingNamingRules | Capstone documentation",
    "keywords": "Class BindingNamingRules Namespace MikroFramework.CodeGen Assembly MikroFramework.dll public static class BindingNamingRules Inheritance object BindingNamingRules Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields rules public static Dictionary<string, string[]> rules Field Value Dictionary<string, string[]>"
  },
  "api/MikroFramework.CodeGen.html": {
    "href": "api/MikroFramework.CodeGen.html",
    "title": "Namespace MikroFramework.CodeGen | Capstone documentation",
    "keywords": "Namespace MikroFramework.CodeGen Classes AttributeInfo Bind BindingDefaultNamespaces BindingNamingRules Enums BindInhertFrom"
  },
  "api/MikroFramework.ComplexRepeatExample.html": {
    "href": "api/MikroFramework.ComplexRepeatExample.html",
    "title": "Class ComplexRepeatExample | Capstone documentation",
    "keywords": "Class ComplexRepeatExample Namespace MikroFramework Assembly MikroFramework.dll public class ComplexRepeatExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ComplexRepeatExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.DataStructures.Table-1.html": {
    "href": "api/MikroFramework.DataStructures.Table-1.html",
    "title": "Class Table<TDataItem> | Capstone documentation",
    "keywords": "Class Table<TDataItem> Namespace MikroFramework.DataStructures Assembly MikroFramework.dll public abstract class Table<TDataItem> : IEnumerable<TDataItem>, IEnumerable where TDataItem : class Type Parameters TDataItem Inheritance object Table<TDataItem> Implements IEnumerable<TDataItem> IEnumerable Derived AssetDataTable TestAdvancedDataTable TestSimpleDataTable ResTable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Items public List<TDataItem> Items { get; } Property Value List<TDataItem> Methods Add(IEnumerable<TDataItem>) public void Add(IEnumerable<TDataItem> items) Parameters items IEnumerable<TDataItem> Add(TDataItem) public void Add(TDataItem item) Parameters item TDataItem Clear() public void Clear() Get(Func<TDataItem, bool>) public IEnumerable<TDataItem> Get(Func<TDataItem, bool> condition) Parameters condition Func<TDataItem, bool> Returns IEnumerable<TDataItem> GetEnumerator() public IEnumerator<TDataItem> GetEnumerator() Returns IEnumerator<TDataItem> OnAdd(TDataItem) Add your logic for adding your customized index here public abstract void OnAdd(TDataItem item) Parameters item TDataItem OnClear() Triggered when the table is cleared protected abstract void OnClear() OnRemove(TDataItem) Add your logic for removing your customized index here public abstract void OnRemove(TDataItem item) Parameters item TDataItem Remove(TDataItem) public void Remove(TDataItem item) Parameters item TDataItem Update() public void Update()"
  },
  "api/MikroFramework.DataStructures.TableIndex-2.html": {
    "href": "api/MikroFramework.DataStructures.TableIndex-2.html",
    "title": "Class TableIndex<TKeyType, TDataItem> | Capstone documentation",
    "keywords": "Class TableIndex<TKeyType, TDataItem> Namespace MikroFramework.DataStructures Assembly MikroFramework.dll public class TableIndex<TKeyType, TDataItem> Type Parameters TKeyType TDataItem Inheritance object TableIndex<TKeyType, TDataItem> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TableIndex(Func<TDataItem, TKeyType>) public TableIndex(Func<TDataItem, TKeyType> keyGetter) Parameters keyGetter Func<TDataItem, TKeyType> Methods Add(TDataItem) Add or create a new data item to its corresponding key in the index public void Add(TDataItem dataItem) Parameters dataItem TDataItem Clear() public void Clear() Get(Func<TKeyType, bool>) Get a set of data items from the table's index, where their keys matches a certain conditions public IEnumerable<TDataItem> Get(Func<TKeyType, bool> condition) Parameters condition Func<TKeyType, bool> Returns IEnumerable<TDataItem> Get(TKeyType) Get a set of data items from the table's index, where their keys equals the input key public IEnumerable<TDataItem> Get(TKeyType key) Parameters key TKeyType Returns IEnumerable<TDataItem> Remove(TDataItem) Remove a dataitem from its index public void Remove(TDataItem dataItem) Parameters dataItem TDataItem"
  },
  "api/MikroFramework.DataStructures.html": {
    "href": "api/MikroFramework.DataStructures.html",
    "title": "Namespace MikroFramework.DataStructures | Capstone documentation",
    "keywords": "Namespace MikroFramework.DataStructures Classes TableIndex<TKeyType, TDataItem> Table<TDataItem>"
  },
  "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLConnectorConfig.html": {
    "href": "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLConnectorConfig.html",
    "title": "Class MySQLConnectorConfig | Capstone documentation",
    "keywords": "Class MySQLConnectorConfig Namespace MikroFramework.DatabaseKit.MySQLConnector Assembly MikroFramework.dll public static class MySQLConnectorConfig Inheritance object MySQLConnectorConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Charset public static string Charset Field Value string DatabaseName public static string DatabaseName Field Value string IP public static string IP Field Value string Password public static string Password Field Value string Port public static string Port Field Value string UserID public static string UserID Field Value string"
  },
  "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLDatabaseManager.html": {
    "href": "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLDatabaseManager.html",
    "title": "Class MySQLDatabaseManager | Capstone documentation",
    "keywords": "Class MySQLDatabaseManager Namespace MikroFramework.DatabaseKit.MySQLConnector Assembly MikroFramework.dll public class MySQLDatabaseManager : MikroSingleton<MySQLDatabaseManager>, ISingleton Inheritance object MikroSingleton<MySQLDatabaseManager> MySQLDatabaseManager Implements ISingleton Inherited Members MikroSingleton<MySQLDatabaseManager>.instance MikroSingleton<MySQLDatabaseManager>.Singleton MikroSingleton<MySQLDatabaseManager>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTable(string, string[], string[], Action<int>, Action<MySqlException>) public void CreateTable(string name, string[] cols, string[] colType, Action<int> onFinished, Action<MySqlException> onError) Parameters name string cols string[] colType string[] onFinished Action<int> onError Action<MySqlException> CreateTableAutoID(string, string[], string[], Action<int>, Action<MySqlException>) public void CreateTableAutoID(string name, string[] cols, string[] colType, Action<int> onFinished, Action<MySqlException> onError) Parameters name string cols string[] colType string[] onFinished Action<int> onError Action<MySqlException>"
  },
  "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLExecuter.html": {
    "href": "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLExecuter.html",
    "title": "Class MySQLExecuter | Capstone documentation",
    "keywords": "Class MySQLExecuter Namespace MikroFramework.DatabaseKit.MySQLConnector Assembly MikroFramework.dll public class MySQLExecuter : MikroSingleton<MySQLExecuter>, ISingleton Inheritance object MikroSingleton<MySQLExecuter> MySQLExecuter Implements ISingleton Inherited Members MikroSingleton<MySQLExecuter>.instance MikroSingleton<MySQLExecuter>.Singleton MikroSingleton<MySQLExecuter>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExcuteQuery(string, Action<DataSet>, Action<MySqlException>, params MySqlParameter[]) public void ExcuteQuery(string SQLString, Action<DataSet> onFinished, Action<MySqlException> onError, params MySqlParameter[] cmdParms) Parameters SQLString string onFinished Action<DataSet> onError Action<MySqlException> cmdParms MySqlParameter[] ExecuteNonQuery(string, Action<int>, Action<MySqlException>) public void ExecuteNonQuery(string SQLString, Action<int> onFinished, Action<MySqlException> onError) Parameters SQLString string onFinished Action<int> onError Action<MySqlException> ExecuteNonQuery(string, Action<int>, Action<MySqlException>, params MySqlParameter[]) public void ExecuteNonQuery(string SQLString, Action<int> onFinished, Action<MySqlException> onError, params MySqlParameter[] cmdParms) Parameters SQLString string onFinished Action<int> onError Action<MySqlException> cmdParms MySqlParameter[] ExecuteNonQueryTran(Dictionary<string, MySqlParameter[]>, Action, Action<MySqlException>) public void ExecuteNonQueryTran(Dictionary<string, MySqlParameter[]> SQLStringList, Action onFinished, Action<MySqlException> onError) Parameters SQLStringList Dictionary<string, MySqlParameter[]> onFinished Action onError Action<MySqlException> ExecuteNonQueryTransaction(ArrayList, Action, Action<MySqlException>) public void ExecuteNonQueryTransaction(ArrayList SQLStringList, Action onFinished, Action<MySqlException> onError) Parameters SQLStringList ArrayList onFinished Action onError Action<MySqlException> ExecuteQuery(string, Action<DataSet>, Action<MySqlException>) public void ExecuteQuery(string SQLString, Action<DataSet> onFinished, Action<MySqlException> onError) Parameters SQLString string onFinished Action<DataSet> onError Action<MySqlException> ExecuteReader(string, Action<List<object[]>>, Action<MySqlException>) public void ExecuteReader(string strSQL, Action<List<object[]>> onFinished, Action<MySqlException> onError) Parameters strSQL string onFinished Action<List<object[]>> onError Action<MySqlException> ExecuteReader(string, Action<List<object[]>>, Action<MySqlException>, params MySqlParameter[]) public void ExecuteReader(string SQLString, Action<List<object[]>> onFinished, Action<MySqlException> onError, params MySqlParameter[] cmdParms) Parameters SQLString string onFinished Action<List<object[]>> onError Action<MySqlException> cmdParms MySqlParameter[] ExecuteScalar(string, Action<object>, Action<MySqlException>) public void ExecuteScalar(string SQLString, Action<object> onFinished, Action<MySqlException> onError) Parameters SQLString string onFinished Action<object> onError Action<MySqlException> GetSingle(string, Action<object>, Action<MySqlException>, params MySqlParameter[]) public void GetSingle(string SQLString, Action<object> onFinished, Action<MySqlException> onError, params MySqlParameter[] cmdParms) Parameters SQLString string onFinished Action<object> onError Action<MySqlException> cmdParms MySqlParameter[]"
  },
  "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLTableManager.html": {
    "href": "api/MikroFramework.DatabaseKit.MySQLConnector.MySQLTableManager.html",
    "title": "Class MySQLTableManager | Capstone documentation",
    "keywords": "Class MySQLTableManager Namespace MikroFramework.DatabaseKit.MySQLConnector Assembly MikroFramework.dll public class MySQLTableManager Inheritance object MySQLTableManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create(string) public static MySQLTableManager Create(string tableName) Parameters tableName string Returns MySQLTableManager Delete(string[], string[], Action<int>, Action<MySqlException>) Delete from tableName where col[0] = colsValues[0] OR cols[1]=colValues[1] public void Delete(string[] cols, string[] colsValues, Action<int> onFinished, Action<MySqlException> onError) Parameters cols string[] colsValues string[] onFinished Action<int> onError Action<MySqlException> InsertInto(string[], string[], Action<int>, Action<MySqlException>) public void InsertInto(string[] cols, string[] values, Action<int> onFinished, Action<MySqlException> onError) Parameters cols string[] values string[] onFinished Action<int> onError Action<MySqlException> Select(string, Action<DataSet>, Action<MySqlException>) public void Select(string tableName, Action<DataSet> onFinished, Action<MySqlException> onError) Parameters tableName string onFinished Action<DataSet> onError Action<MySqlException> Select(string[], Action<DataSet>, Action<MySqlException>) public void Select(string[] items, Action<DataSet> onFinished, Action<MySqlException> onError) Parameters items string[] onFinished Action<DataSet> onError Action<MySqlException> SelectWhere(string[], string[], string[], string[], Action<DataSet>, Action<MySqlException>) E.g.: Select selectedItems... from tableName where conditioncol[0] = values[0] and conditioncol[1] > values[1]. Code: SelectWhere(selectedItems, new string[]{\"conditioncol0\", \"conditioncol1\"}, new string[]{\"=\",\">\"}, new string[]{\"value0\", \"value1\")) public void SelectWhere(string[] selectedItems, string[] conditionCols, string[] operations, string[] values, Action<DataSet> onFinished, Action<MySqlException> onError) Parameters selectedItems string[] conditionCols string[] operations string[] values string[] onFinished Action<DataSet> onError Action<MySqlException> UpdateInto(string[], string[], string, string, Action<int>, Action<MySqlException>) Update table, set columns to new colsValues where selectkey=selectvalue public void UpdateInto(string[] cols, string[] colsValues, string selectKey, string selectValue, Action<int> onFinished, Action<MySqlException> onError) Parameters cols string[] colsValues string[] selectKey string selectValue string onFinished Action<int> onError Action<MySqlException>"
  },
  "api/MikroFramework.DatabaseKit.MySQLConnector.html": {
    "href": "api/MikroFramework.DatabaseKit.MySQLConnector.html",
    "title": "Namespace MikroFramework.DatabaseKit.MySQLConnector | Capstone documentation",
    "keywords": "Namespace MikroFramework.DatabaseKit.MySQLConnector Classes MySQLConnectorConfig MySQLDatabaseManager MySQLExecuter MySQLTableManager"
  },
  "api/MikroFramework.DatabaseKit.NHibernate.NHibernateTableManager-1.html": {
    "href": "api/MikroFramework.DatabaseKit.NHibernate.NHibernateTableManager-1.html",
    "title": "Class NHibernateTableManager<T> | Capstone documentation",
    "keywords": "Class NHibernateTableManager<T> Namespace MikroFramework.DatabaseKit.NHibernate Assembly MikroFramework.dll Manager for each MySQL Table public class NHibernateTableManager<T> : MikroSingleton<NHibernateTableManager<T>>, ISingleton, IManager Type Parameters T Inheritance object MikroSingleton<NHibernateTableManager<T>> NHibernateTableManager<T> Implements ISingleton IManager Inherited Members MikroSingleton<NHibernateTableManager<T>>.instance MikroSingleton<NHibernateTableManager<T>>.Singleton MikroSingleton<NHibernateTableManager<T>>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NHibernateTableManager() protected NHibernateTableManager() Methods Add(T) Insert a data to the table. Returns whether insert success public virtual Task<bool> Add(T obj) Parameters obj T The inserted data object must have a mapping with NHibernate Returns Task<bool> AddListener(EventType, Action<MikroMessage>) Add a listener to the corresponding event type, which must have at least one callback function public void AddListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function Broadcast(EventType, MikroMessage) Broadcast an event public void Broadcast(EventType eventType, MikroMessage data) Parameters eventType EventType data MikroMessage data included in the event GetAll() public virtual Task<IList<T>> GetAll() Returns Task<IList<T>> GetById(int) Get a data by id from the database public virtual Task<T> GetById(int id) Parameters id int The id of the data. Returns Task<T> Remove(T) Remove a data from the table public virtual Task<bool> Remove(T obj) Parameters obj T The object to remove. Must have a mapping in NHibernate Returns Task<bool> RemoveListener(EventType) Remove all callback function of this object from the corresponding event type, which must have at least one callback function public void RemoveListener(EventType eventType) Parameters eventType EventType The type of the event (create it in the EventType class) RemoveListener(EventType, Action<MikroMessage>) Remove a callback function from the corresponding event type, which must have at least one callback function public void RemoveListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function SearchByFieldName(string, object) Search a data from the table, given a single restriction public virtual Task<IList<T>> SearchByFieldName(string fieldName, object value) Parameters fieldName string The name of the field in the corresponding Models class of the table value object The value of the field to check Returns Task<IList<T>> A list of result. Null if not found or has error SearchByFieldNameUniqueResult(string, object) Search a UNIQUE data from the table, given a single restriction. public virtual Task<T> SearchByFieldNameUniqueResult(string fieldName, object value) Parameters fieldName string The name of the field in the corresponding Models class of the table value object The value of the field to check Returns Task<T> A list of result. Null if not found or has error SearchByFieldNames(string[], object[]) Search a data from the table, given restrictions public virtual Task<IList<T>> SearchByFieldNames(string[] fieldNames, object[] values) Parameters fieldNames string[] The name of the field in the corresponding Models class of the table values object[] The value of the field to check Returns Task<IList<T>> A list of result. Null if not found or has error SearchByFieldNamesUniqueResult(string[], object[]) Search a UNIQUE data from the table, given restrictions. public virtual Task<T> SearchByFieldNamesUniqueResult(string[] fieldNames, object[] values) Parameters fieldNames string[] The name of the field in the corresponding Models class of the table values object[] The value of the field to check Returns Task<T> A list of result. Null if not found or has error Update(T) Update a data from the table. Returns whether update success. public virtual Task<bool> Update(T obj) Parameters obj T The object to update. Must have a mapping in NHibernate Returns Task<bool>"
  },
  "api/MikroFramework.DatabaseKit.NHibernate.html": {
    "href": "api/MikroFramework.DatabaseKit.NHibernate.html",
    "title": "Namespace MikroFramework.DatabaseKit.NHibernate | Capstone documentation",
    "keywords": "Namespace MikroFramework.DatabaseKit.NHibernate Classes NHibernateTableManager<T> Manager for each MySQL Table"
  },
  "api/MikroFramework.DatabaseKit.html": {
    "href": "api/MikroFramework.DatabaseKit.html",
    "title": "Namespace MikroFramework.DatabaseKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.DatabaseKit Namespaces MikroFramework.DatabaseKit.MySQLConnector MikroFramework.DatabaseKit.NHibernate"
  },
  "api/MikroFramework.DelayAction.html": {
    "href": "api/MikroFramework.DelayAction.html",
    "title": "Class DelayAction | Capstone documentation",
    "keywords": "Class DelayAction Namespace MikroFramework Assembly MikroFramework.dll public class DelayAction : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction DelayAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.OnDispose() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(float, Action) public static DelayAction Allocate(float delayTime, Action onDelayFinished = null) Parameters delayTime float onDelayFinished Action Returns DelayAction OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool() Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public override void Reset()"
  },
  "api/MikroFramework.DelayActionExtensions.html": {
    "href": "api/MikroFramework.DelayActionExtensions.html",
    "title": "Class DelayActionExtensions | Capstone documentation",
    "keywords": "Class DelayActionExtensions Namespace MikroFramework Assembly MikroFramework.dll public static class DelayActionExtensions Inheritance object DelayActionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Delay(MonoBehaviour, float, Action) public static void Delay(this MonoBehaviour self, float seconds, Action onDelayFinished) Parameters self MonoBehaviour seconds float onDelayFinished Action"
  },
  "api/MikroFramework.Event.EnumEventSystemUnRegister.html": {
    "href": "api/MikroFramework.Event.EnumEventSystemUnRegister.html",
    "title": "Class EnumEventSystemUnRegister | Capstone documentation",
    "keywords": "Class EnumEventSystemUnRegister Namespace MikroFramework.Event Assembly MikroFramework.dll public class EnumEventSystemUnRegister : IUnRegister Inheritance object EnumEventSystemUnRegister Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyed(IUnRegister, GameObject, bool) Constructors EnumEventSystemUnRegister(EventType, Action<MikroMessage>) public EnumEventSystemUnRegister(EventType eventType, Action<MikroMessage> callback) Parameters eventType EventType callback Action<MikroMessage> Fields Callback public Action<MikroMessage> Callback Field Value Action<MikroMessage> EventType public EventType EventType Field Value EventType Methods UnRegister() public void UnRegister()"
  },
  "api/MikroFramework.Event.EventCenter.html": {
    "href": "api/MikroFramework.Event.EventCenter.html",
    "title": "Class EventCenter | Capstone documentation",
    "keywords": "Class EventCenter Namespace MikroFramework.Event Assembly MikroFramework.dll public class EventCenter Inheritance object EventCenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddListener(EventType, Action<MikroMessage>) Add a listener to the corresponding event type, which must have at least one callback function public static IUnRegister AddListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function, which can have 0-5 parameters Returns IUnRegister Broadcast(EventType, MikroMessage) Broadcast all callback functions with no parameters from an existing eventType public static void Broadcast(EventType eventType, MikroMessage data) Parameters eventType EventType The type of the event data MikroMessage RemoveAllListeners(EventType) Remove all callback functions of a specific event Note: This is irreversible! It will also remove callback functions of this event on other scripts! public static void RemoveAllListeners(EventType eventType) Parameters eventType EventType RemoveListener(EventType, Action<MikroMessage>) Remove a callback function from the corresponding event type, which must have at least one callback function public static void RemoveListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function with no parameters"
  },
  "api/MikroFramework.Event.EventProperty-1.html": {
    "href": "api/MikroFramework.Event.EventProperty-1.html",
    "title": "Class EventProperty<T> | Capstone documentation",
    "keywords": "Class EventProperty<T> Namespace MikroFramework.Event Assembly MikroFramework.dll public class EventProperty<T> Type Parameters T Inheritance object EventProperty<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register(Action<T>) public void Register(Action<T> callback) Parameters callback Action<T> Trigger(T) public void Trigger(T msg) Parameters msg T UnRegister(Action<T>) public void UnRegister(Action<T> callback) Parameters callback Action<T>"
  },
  "api/MikroFramework.Event.EventProperty-2.html": {
    "href": "api/MikroFramework.Event.EventProperty-2.html",
    "title": "Class EventProperty<T, Y> | Capstone documentation",
    "keywords": "Class EventProperty<T, Y> Namespace MikroFramework.Event Assembly MikroFramework.dll public class EventProperty<T, Y> Type Parameters T Y Inheritance object EventProperty<T, Y> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register(Action<T, Y>) public void Register(Action<T, Y> callback) Parameters callback Action<T, Y> Trigger(T, Y) public void Trigger(T msg1, Y msg2) Parameters msg1 T msg2 Y UnRegister(Action<T, Y>) public void UnRegister(Action<T, Y> callback) Parameters callback Action<T, Y>"
  },
  "api/MikroFramework.Event.EventProperty-3.html": {
    "href": "api/MikroFramework.Event.EventProperty-3.html",
    "title": "Class EventProperty<T, Y, X> | Capstone documentation",
    "keywords": "Class EventProperty<T, Y, X> Namespace MikroFramework.Event Assembly MikroFramework.dll public class EventProperty<T, Y, X> Type Parameters T Y X Inheritance object EventProperty<T, Y, X> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register(Action<T, Y, X>) public void Register(Action<T, Y, X> callback) Parameters callback Action<T, Y, X> Trigger(T, Y, X) public void Trigger(T msg1, Y msg2, X msg3) Parameters msg1 T msg2 Y msg3 X UnRegister(Action<T, Y, X>) public void UnRegister(Action<T, Y, X> callback) Parameters callback Action<T, Y, X>"
  },
  "api/MikroFramework.Event.EventProperty.html": {
    "href": "api/MikroFramework.Event.EventProperty.html",
    "title": "Class EventProperty | Capstone documentation",
    "keywords": "Class EventProperty Namespace MikroFramework.Event Assembly MikroFramework.dll public class EventProperty Inheritance object EventProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register(Action) public void Register(Action callback) Parameters callback Action Trigger() public void Trigger() UnRegister(Action) public void UnRegister(Action callback) Parameters callback Action"
  },
  "api/MikroFramework.Event.EventType.html": {
    "href": "api/MikroFramework.Event.EventType.html",
    "title": "Enum EventType | Capstone documentation",
    "keywords": "Enum EventType Namespace MikroFramework.Event Assembly MikroFramework.dll public enum EventType Fields None = 0 OnPlayerStart = 3 Test = 1 Test1 = 2"
  },
  "api/MikroFramework.Event.IOnEvent-1.html": {
    "href": "api/MikroFramework.Event.IOnEvent-1.html",
    "title": "Interface IOnEvent<T> | Capstone documentation",
    "keywords": "Interface IOnEvent<T> Namespace MikroFramework.Event Assembly MikroFramework.dll public interface IOnEvent<T> Type Parameters T Methods OnEvent(T) void OnEvent(T e) Parameters e T"
  },
  "api/MikroFramework.Event.ITypeEventSystem.html": {
    "href": "api/MikroFramework.Event.ITypeEventSystem.html",
    "title": "Interface ITypeEventSystem | Capstone documentation",
    "keywords": "Interface ITypeEventSystem Namespace MikroFramework.Event Assembly MikroFramework.dll public interface ITypeEventSystem Methods Register<T>(Action<T>) IUnRegister Register<T>(Action<T> onEvent) Parameters onEvent Action<T> Returns IUnRegister Type Parameters T Send<T>() void Send<T>() where T : new() Type Parameters T Send<T>(T) void Send<T>(T e) Parameters e T Type Parameters T UnRegister<T>(Action<T>) void UnRegister<T>(Action<T> onEvent) Parameters onEvent Action<T> Type Parameters T"
  },
  "api/MikroFramework.Event.IUnRegister.html": {
    "href": "api/MikroFramework.Event.IUnRegister.html",
    "title": "Interface IUnRegister | Capstone documentation",
    "keywords": "Interface IUnRegister Namespace MikroFramework.Event Assembly MikroFramework.dll public interface IUnRegister Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyed(IUnRegister, GameObject, bool) Methods UnRegister() void UnRegister()"
  },
  "api/MikroFramework.Event.MikroMessage.html": {
    "href": "api/MikroFramework.Event.MikroMessage.html",
    "title": "Class MikroMessage | Capstone documentation",
    "keywords": "Class MikroMessage Namespace MikroFramework.Event Assembly MikroFramework.dll public class MikroMessage Inheritance object MikroMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MikroMessage() protected MikroMessage() Properties Messages public List<object> Messages { get; } Property Value List<object> Methods Create(params object[]) public static MikroMessage Create(params object[] messages) Parameters messages object[] Returns MikroMessage GetMessage(int) public object GetMessage(int index) Parameters index int Returns object GetSingleMessage() public object GetSingleMessage() Returns object"
  },
  "api/MikroFramework.Event.OnGlobalEventExtension.html": {
    "href": "api/MikroFramework.Event.OnGlobalEventExtension.html",
    "title": "Class OnGlobalEventExtension | Capstone documentation",
    "keywords": "Class OnGlobalEventExtension Namespace MikroFramework.Event Assembly MikroFramework.dll public static class OnGlobalEventExtension Inheritance object OnGlobalEventExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterEvent<T>(IOnEvent<T>) public static IUnRegister RegisterEvent<T>(this IOnEvent<T> self) where T : struct Parameters self IOnEvent<T> Returns IUnRegister Type Parameters T UnRegisterEvent<T>(IOnEvent<T>) public static void UnRegisterEvent<T>(this IOnEvent<T> self) where T : struct Parameters self IOnEvent<T> Type Parameters T"
  },
  "api/MikroFramework.Event.TypeEventSystem.IRegisterations.html": {
    "href": "api/MikroFramework.Event.TypeEventSystem.IRegisterations.html",
    "title": "Interface TypeEventSystem.IRegisterations | Capstone documentation",
    "keywords": "Interface TypeEventSystem.IRegisterations Namespace MikroFramework.Event Assembly MikroFramework.dll public interface TypeEventSystem.IRegisterations"
  },
  "api/MikroFramework.Event.TypeEventSystem.Registerations-1.html": {
    "href": "api/MikroFramework.Event.TypeEventSystem.Registerations-1.html",
    "title": "Class TypeEventSystem.Registerations<T> | Capstone documentation",
    "keywords": "Class TypeEventSystem.Registerations<T> Namespace MikroFramework.Event Assembly MikroFramework.dll public class TypeEventSystem.Registerations<T> : TypeEventSystem.IRegisterations Type Parameters T Inheritance object TypeEventSystem.Registerations<T> Implements TypeEventSystem.IRegisterations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OnEvent public Action<T> OnEvent Field Value Action<T>"
  },
  "api/MikroFramework.Event.TypeEventSystem.html": {
    "href": "api/MikroFramework.Event.TypeEventSystem.html",
    "title": "Class TypeEventSystem | Capstone documentation",
    "keywords": "Class TypeEventSystem Namespace MikroFramework.Event Assembly MikroFramework.dll public class TypeEventSystem : ITypeEventSystem Inheritance object TypeEventSystem Implements ITypeEventSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterGlobalEvent<T>(Action<T>) RegisterInstance a global event public static IUnRegister RegisterGlobalEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> callback function Returns IUnRegister Type Parameters T Register<T>(Action<T>) RegisterInstance a local event. Use static functions (global events) if you are not using an architecture. public IUnRegister Register<T>(Action<T> onEvent) Parameters onEvent Action<T> Returns IUnRegister Type Parameters T SendGlobalEvent<T>() Send a global event public static void SendGlobalEvent<T>() where T : new() Type Parameters T SendGlobalEvent<T>(T) Send a global event public static void SendGlobalEvent<T>(T e) Parameters e T Type Parameters T Send<T>() Send a local event. Use static functions (global events) if you are not using an architecture. public void Send<T>() where T : new() Type Parameters T Send<T>(T) Send a local event. Use static functions (global events) if you are not using an architecture. public void Send<T>(T e) Parameters e T Type Parameters T UnRegisterGlobalEvent<T>(Action<T>) Unregister a global event public static void UnRegisterGlobalEvent<T>(Action<T> onEvent) Parameters onEvent Action<T> callback function Type Parameters T UnRegister<T>(Action<T>) UnRegister a local event. Use static functions (global events) if you are not using an architecture. public void UnRegister<T>(Action<T> onEvent) Parameters onEvent Action<T> Type Parameters T"
  },
  "api/MikroFramework.Event.TypeEventSystemUnRegister-1.html": {
    "href": "api/MikroFramework.Event.TypeEventSystemUnRegister-1.html",
    "title": "Class TypeEventSystemUnRegister<T> | Capstone documentation",
    "keywords": "Class TypeEventSystemUnRegister<T> Namespace MikroFramework.Event Assembly MikroFramework.dll public class TypeEventSystemUnRegister<T> : IUnRegister Type Parameters T Inheritance object TypeEventSystemUnRegister<T> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyed(IUnRegister, GameObject, bool) Constructors TypeEventSystemUnRegister(ITypeEventSystem, Action<T>) public TypeEventSystemUnRegister(ITypeEventSystem typeEventSystem, Action<T> onEvent) Parameters typeEventSystem ITypeEventSystem onEvent Action<T> Fields OnEvent public Action<T> OnEvent Field Value Action<T> TypeEventSystem public ITypeEventSystem TypeEventSystem Field Value ITypeEventSystem Methods UnRegister() public void UnRegister()"
  },
  "api/MikroFramework.Event.UnRegisterDestroyTrigger.html": {
    "href": "api/MikroFramework.Event.UnRegisterDestroyTrigger.html",
    "title": "Class UnRegisterDestroyTrigger | Capstone documentation",
    "keywords": "Class UnRegisterDestroyTrigger Namespace MikroFramework.Event Assembly MikroFramework.dll public class UnRegisterDestroyTrigger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UnRegisterDestroyTrigger Derived UnRegisterAllocateTrigger Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods AddUnRegister(IUnRegister, bool) public void AddUnRegister(IUnRegister unRegister, bool alsoUnregisterWhenDisabled) Parameters unRegister IUnRegister alsoUnregisterWhenDisabled bool OnDestroy() protected void OnDestroy()"
  },
  "api/MikroFramework.Event.UnRegisterExtension.html": {
    "href": "api/MikroFramework.Event.UnRegisterExtension.html",
    "title": "Class UnRegisterExtension | Capstone documentation",
    "keywords": "Class UnRegisterExtension Namespace MikroFramework.Event Assembly MikroFramework.dll public static class UnRegisterExtension Inheritance object UnRegisterExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UnRegisterWhenGameObjectDestroyed(IUnRegister, GameObject, bool) Unregister this listener when a specific gameObject is destroyed public static void UnRegisterWhenGameObjectDestroyed(this IUnRegister unRegister, GameObject gameObject, bool alsoUnRegisterWhenDisabled = false) Parameters unRegister IUnRegister gameObject GameObject alsoUnRegisterWhenDisabled bool"
  },
  "api/MikroFramework.Event.UniRxTypeEventSystem.IRegisterations.html": {
    "href": "api/MikroFramework.Event.UniRxTypeEventSystem.IRegisterations.html",
    "title": "Interface UniRxTypeEventSystem.IRegisterations | Capstone documentation",
    "keywords": "Interface UniRxTypeEventSystem.IRegisterations Namespace MikroFramework.Event Assembly MikroFramework.dll public interface UniRxTypeEventSystem.IRegisterations"
  },
  "api/MikroFramework.Event.UniRxTypeEventSystem.Registerations-1.html": {
    "href": "api/MikroFramework.Event.UniRxTypeEventSystem.Registerations-1.html",
    "title": "Class UniRxTypeEventSystem.Registerations<T> | Capstone documentation",
    "keywords": "Class UniRxTypeEventSystem.Registerations<T> Namespace MikroFramework.Event Assembly MikroFramework.dll public class UniRxTypeEventSystem.Registerations<T> : UniRxTypeEventSystem.IRegisterations Type Parameters T Inheritance object UniRxTypeEventSystem.Registerations<T> Implements UniRxTypeEventSystem.IRegisterations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Subject public Subject<T> Subject Field Value Subject<T>"
  },
  "api/MikroFramework.Event.UniRxTypeEventSystem.html": {
    "href": "api/MikroFramework.Event.UniRxTypeEventSystem.html",
    "title": "Class UniRxTypeEventSystem | Capstone documentation",
    "keywords": "Class UniRxTypeEventSystem Namespace MikroFramework.Event Assembly MikroFramework.dll public class UniRxTypeEventSystem Inheritance object UniRxTypeEventSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEvent<T>() RegisterInstance a local event. Use static functions (global events) if you are not using an architecture. public static Subject<T> GetEvent<T>() Returns Subject<T> Type Parameters T Send<T>() Send a local event. Use static functions (global events) if you are not using an architecture. public static void Send<T>() where T : new() Type Parameters T Send<T>(T) Send a local event. Use static functions (global events) if you are not using an architecture. public static void Send<T>(T e) Parameters e T Type Parameters T"
  },
  "api/MikroFramework.Event.html": {
    "href": "api/MikroFramework.Event.html",
    "title": "Namespace MikroFramework.Event | Capstone documentation",
    "keywords": "Namespace MikroFramework.Event Classes EnumEventSystemUnRegister EventCenter EventProperty EventProperty<T> EventProperty<T, Y> EventProperty<T, Y, X> MikroMessage OnGlobalEventExtension TypeEventSystem TypeEventSystem.Registerations<T> TypeEventSystemUnRegister<T> UnRegisterDestroyTrigger UnRegisterExtension UniRxTypeEventSystem UniRxTypeEventSystem.Registerations<T> Interfaces IOnEvent<T> ITypeEventSystem IUnRegister TypeEventSystem.IRegisterations UniRxTypeEventSystem.IRegisterations Enums EventType"
  },
  "api/MikroFramework.Examples.AchievementItem.html": {
    "href": "api/MikroFramework.Examples.AchievementItem.html",
    "title": "Class AchievementItem | Capstone documentation",
    "keywords": "Class AchievementItem Namespace MikroFramework.Examples Assembly MikroFramework.dll public class AchievementItem Inheritance object AchievementItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CheckComplete public Func<bool> CheckComplete { get; set; } Property Value Func<bool> Name public string Name { get; set; } Property Value string Unlocked public bool Unlocked { get; set; } Property Value bool"
  },
  "api/MikroFramework.Examples.AchievementSystem.html": {
    "href": "api/MikroFramework.Examples.AchievementSystem.html",
    "title": "Class AchievementSystem | Capstone documentation",
    "keywords": "Class AchievementSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public class AchievementSystem : AbstractSystem, IAchievementSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem AchievementSystem Implements IAchievementSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnInit() protected override void OnInit()"
  },
  "api/MikroFramework.Examples.AssetBundleExample.html": {
    "href": "api/MikroFramework.Examples.AssetBundleExample.html",
    "title": "Class AssetBundleExample | Capstone documentation",
    "keywords": "Class AssetBundleExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class AssetBundleExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AssetBundleExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.AudioManagerExample.html": {
    "href": "api/MikroFramework.Examples.AudioManagerExample.html",
    "title": "Class AudioManagerExample | Capstone documentation",
    "keywords": "Class AudioManagerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class AudioManagerExample : MikroBehavior Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior AudioManagerExample Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Examples.BindablePropertySerializationExample.Info.html": {
    "href": "api/MikroFramework.Examples.BindablePropertySerializationExample.Info.html",
    "title": "Class BindablePropertySerializationExample.Info | Capstone documentation",
    "keywords": "Class BindablePropertySerializationExample.Info Namespace MikroFramework.Examples Assembly MikroFramework.dll [Serializable] public class BindablePropertySerializationExample.Info Inheritance object BindablePropertySerializationExample.Info Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Age public BindableProperty<int> Age Field Value BindableProperty<int> Name public BindableProperty<string> Name Field Value BindableProperty<string>"
  },
  "api/MikroFramework.Examples.BindablePropertySerializationExample.html": {
    "href": "api/MikroFramework.Examples.BindablePropertySerializationExample.html",
    "title": "Class BindablePropertySerializationExample | Capstone documentation",
    "keywords": "Class BindablePropertySerializationExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class BindablePropertySerializationExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BindablePropertySerializationExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.BlueToothManager.html": {
    "href": "api/MikroFramework.Examples.BlueToothManager.html",
    "title": "Class BlueToothManager | Capstone documentation",
    "keywords": "Class BlueToothManager Namespace MikroFramework.Examples Assembly MikroFramework.dll public class BlueToothManager : IBluetoothManager Inheritance object BlueToothManager Implements IBluetoothManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Connect() public void Connect()"
  },
  "api/MikroFramework.Examples.BuyLifeCommand.html": {
    "href": "api/MikroFramework.Examples.BuyLifeCommand.html",
    "title": "Class BuyLifeCommand | Capstone documentation",
    "keywords": "Class BuyLifeCommand Namespace MikroFramework.Examples Assembly MikroFramework.dll public class BuyLifeCommand : AbstractCommand<BuyLifeCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<BuyLifeCommand> BuyLifeCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<BuyLifeCommand>.AutoRecycle AbstractCommand<BuyLifeCommand>.OnRecycled() AbstractCommand<BuyLifeCommand>.IsRecycled AbstractCommand<BuyLifeCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.Examples.CanDoEverything.html": {
    "href": "api/MikroFramework.Examples.CanDoEverything.html",
    "title": "Class CanDoEverything | Capstone documentation",
    "keywords": "Class CanDoEverything Namespace MikroFramework.Examples Assembly MikroFramework.dll public class CanDoEverything Inheritance object CanDoEverything Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSth1() public void DoSth1() DoSth2() public void DoSth2() DoSth3() public void DoSth3()"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.ClassicObserverPatternExample.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.ClassicObserverPatternExample.html",
    "title": "Class ClassicObserverPatternExample | Capstone documentation",
    "keywords": "Class ClassicObserverPatternExample Namespace MikroFramework.Examples.ClassicObserverPattern Assembly MikroFramework.dll public class ClassicObserverPatternExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ClassicObserverPatternExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.ConcreteObserver.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.ConcreteObserver.html",
    "title": "Class ConcreteObserver | Capstone documentation",
    "keywords": "Class ConcreteObserver Namespace MikroFramework.Examples.ClassicObserverPattern Assembly MikroFramework.dll public class ConcreteObserver : Observer Inheritance object Observer ConcreteObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConcreteObserver(ConcreteSubject) public ConcreteObserver(ConcreteSubject subject) Parameters subject ConcreteSubject Methods Update() public override void Update()"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.ConcreteSubject.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.ConcreteSubject.html",
    "title": "Class ConcreteSubject | Capstone documentation",
    "keywords": "Class ConcreteSubject Namespace MikroFramework.Examples.ClassicObserverPattern Assembly MikroFramework.dll public class ConcreteSubject : Subject Inheritance object Subject ConcreteSubject Inherited Members Subject.Attach(Observer) Subject.Detach(Observer) Subject.Notify() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetState() public string GetState() Returns string SetState(string) public void SetState(string state) Parameters state string"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.Observer.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.Observer.html",
    "title": "Class Observer | Capstone documentation",
    "keywords": "Class Observer Namespace MikroFramework.Examples.ClassicObserverPattern Assembly MikroFramework.dll public abstract class Observer Inheritance object Observer Derived ConcreteObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Update() public abstract void Update()"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.Subject.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.Subject.html",
    "title": "Class Subject | Capstone documentation",
    "keywords": "Class Subject Namespace MikroFramework.Examples.ClassicObserverPattern Assembly MikroFramework.dll public abstract class Subject Inheritance object Subject Derived ConcreteSubject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Attach(Observer) public void Attach(Observer observer) Parameters observer Observer Detach(Observer) public void Detach(Observer observer) Parameters observer Observer Notify() public void Notify()"
  },
  "api/MikroFramework.Examples.ClassicObserverPattern.html": {
    "href": "api/MikroFramework.Examples.ClassicObserverPattern.html",
    "title": "Namespace MikroFramework.Examples.ClassicObserverPattern | Capstone documentation",
    "keywords": "Namespace MikroFramework.Examples.ClassicObserverPattern Classes ClassicObserverPatternExample ConcreteObserver ConcreteSubject Observer Subject"
  },
  "api/MikroFramework.Examples.CountDownSystem.html": {
    "href": "api/MikroFramework.Examples.CountDownSystem.html",
    "title": "Class CountDownSystem | Capstone documentation",
    "keywords": "Class CountDownSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public class CountDownSystem : AbstractSystem, ICountDownSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem CountDownSystem Implements ICountDownSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties CurrentRemainSeconds public int CurrentRemainSeconds { get; protected set; } Property Value int Methods OnInit() protected override void OnInit() Update() public void Update()"
  },
  "api/MikroFramework.Examples.CounterApp.AchievementSystem.html": {
    "href": "api/MikroFramework.Examples.CounterApp.AchievementSystem.html",
    "title": "Class AchievementSystem | Capstone documentation",
    "keywords": "Class AchievementSystem Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class AchievementSystem : AbstractSystem, IAchievementSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem AchievementSystem Implements IAchievementSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnInit() protected override void OnInit()"
  },
  "api/MikroFramework.Examples.CounterApp.AddCountCommand.html": {
    "href": "api/MikroFramework.Examples.CounterApp.AddCountCommand.html",
    "title": "Class AddCountCommand | Capstone documentation",
    "keywords": "Class AddCountCommand Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class AddCountCommand : AbstractCommand<AddCountCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<AddCountCommand> AddCountCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<AddCountCommand>.AutoRecycle AbstractCommand<AddCountCommand>.OnRecycled() AbstractCommand<AddCountCommand>.IsRecycled AbstractCommand<AddCountCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.Examples.CounterApp.CounterApp.html": {
    "href": "api/MikroFramework.Examples.CounterApp.CounterApp.html",
    "title": "Class CounterApp | Capstone documentation",
    "keywords": "Class CounterApp Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class CounterApp : Architecture<CounterApp>, IArchitecture Inheritance object Architecture<CounterApp> CounterApp Implements IArchitecture Inherited Members Architecture<CounterApp>.Interface Architecture<CounterApp>.OnRegisterPatch Architecture<CounterApp>.RegisterModel<T>(T) Architecture<CounterApp>.RegisterExtensibleUtility<T>(T) Architecture<CounterApp>.RegisterSystem<T>(T) Architecture<CounterApp>.GetModel<T>() Architecture<CounterApp>.SendCommand<T>() Architecture<CounterApp>.SendCommand<T>(T) Architecture<CounterApp>.GetSystem<T>(Action<T>) Architecture<CounterApp>.ResetArchitecture() Architecture<CounterApp>.SendEvent<T>() Architecture<CounterApp>.SendEvent<T>(T) Architecture<CounterApp>.RegisterEvent<T>(Action<T>) Architecture<CounterApp>.UnRegisterEvent<T>(Action<T>) Architecture<CounterApp>.SendQuery<TResult>(IQuery<TResult>) Architecture<CounterApp>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() protected override void Init()"
  },
  "api/MikroFramework.Examples.CounterApp.CounterModel.html": {
    "href": "api/MikroFramework.Examples.CounterApp.CounterModel.html",
    "title": "Class CounterModel | Capstone documentation",
    "keywords": "Class CounterModel Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class CounterModel : AbstractModel, ICounterModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel CounterModel Implements ICounterModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties Count public ReactiveProperty<int> Count { get; } Property Value ReactiveProperty<int> Methods OnInit() protected override void OnInit()"
  },
  "api/MikroFramework.Examples.CounterApp.CounterViewController.html": {
    "href": "api/MikroFramework.Examples.CounterApp.CounterViewController.html",
    "title": "Class CounterViewController | Capstone documentation",
    "keywords": "Class CounterViewController Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class CounterViewController : MonoBehaviour, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour CounterViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.CounterApp.IAchievementSystem.html": {
    "href": "api/MikroFramework.Examples.CounterApp.IAchievementSystem.html",
    "title": "Interface IAchievementSystem | Capstone documentation",
    "keywords": "Interface IAchievementSystem Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public interface IAchievementSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>)"
  },
  "api/MikroFramework.Examples.CounterApp.ICounterModel.html": {
    "href": "api/MikroFramework.Examples.CounterApp.ICounterModel.html",
    "title": "Interface ICounterModel | Capstone documentation",
    "keywords": "Interface ICounterModel Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public interface ICounterModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties Count ReactiveProperty<int> Count { get; } Property Value ReactiveProperty<int>"
  },
  "api/MikroFramework.Examples.CounterApp.IStorage.html": {
    "href": "api/MikroFramework.Examples.CounterApp.IStorage.html",
    "title": "Interface IStorage | Capstone documentation",
    "keywords": "Interface IStorage Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public interface IStorage : IUtility Methods LoadInt(string, int) int LoadInt(string key, int defaultValue = 0) Parameters key string defaultValue int Returns int SaveInt(string, int) void SaveInt(string key, int value = 0) Parameters key string value int"
  },
  "api/MikroFramework.Examples.CounterApp.PlayerPrefStorage.html": {
    "href": "api/MikroFramework.Examples.CounterApp.PlayerPrefStorage.html",
    "title": "Class PlayerPrefStorage | Capstone documentation",
    "keywords": "Class PlayerPrefStorage Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class PlayerPrefStorage : IStorage, IUtility Inheritance object PlayerPrefStorage Implements IStorage IUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadInt(string, int) public int LoadInt(string key, int defaultValue = 0) Parameters key string defaultValue int Returns int SaveInt(string, int) public void SaveInt(string key, int value = 0) Parameters key string value int"
  },
  "api/MikroFramework.Examples.CounterApp.SubtractCount.html": {
    "href": "api/MikroFramework.Examples.CounterApp.SubtractCount.html",
    "title": "Class SubtractCount | Capstone documentation",
    "keywords": "Class SubtractCount Namespace MikroFramework.Examples.CounterApp Assembly MikroFramework.dll public class SubtractCount : AbstractCommand<SubtractCount>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<SubtractCount> SubtractCount Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<SubtractCount>.AutoRecycle AbstractCommand<SubtractCount>.OnRecycled() AbstractCommand<SubtractCount>.IsRecycled AbstractCommand<SubtractCount>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.Examples.CounterApp.html": {
    "href": "api/MikroFramework.Examples.CounterApp.html",
    "title": "Namespace MikroFramework.Examples.CounterApp | Capstone documentation",
    "keywords": "Namespace MikroFramework.Examples.CounterApp Classes AchievementSystem AddCountCommand CounterApp CounterModel CounterViewController PlayerPrefStorage SubtractCount Interfaces IAchievementSystem ICounterModel IStorage"
  },
  "api/MikroFramework.Examples.CustomizedActionExample.DEFAction.html": {
    "href": "api/MikroFramework.Examples.CustomizedActionExample.DEFAction.html",
    "title": "Class CustomizedActionExample.DEFAction | Capstone documentation",
    "keywords": "Class CustomizedActionExample.DEFAction Namespace MikroFramework.Examples Assembly MikroFramework.dll public class CustomizedActionExample.DEFAction : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction CustomizedActionExample.DEFAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(string) public static CustomizedActionExample.DEFAction Allocate(string msg) Parameters msg string Returns CustomizedActionExample.DEFAction OnBegin() OnBegin is called right after executing this action, and will be only called once protected override void OnBegin() OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() OnEnd() OnEnd is called once before this action ends protected override void OnEnd() OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool()"
  },
  "api/MikroFramework.Examples.CustomizedActionExample.html": {
    "href": "api/MikroFramework.Examples.CustomizedActionExample.html",
    "title": "Class CustomizedActionExample | Capstone documentation",
    "keywords": "Class CustomizedActionExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class CustomizedActionExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CustomizedActionExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.DelayExample.html": {
    "href": "api/MikroFramework.Examples.DelayExample.html",
    "title": "Class DelayExample | Capstone documentation",
    "keywords": "Class DelayExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class DelayExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DelayExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.DelaySequenceExample.html": {
    "href": "api/MikroFramework.Examples.DelaySequenceExample.html",
    "title": "Class DelaySequenceExample | Capstone documentation",
    "keywords": "Class DelaySequenceExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class DelaySequenceExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DelaySequenceExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.DelayWithCoroutineExample.html": {
    "href": "api/MikroFramework.Examples.DelayWithCoroutineExample.html",
    "title": "Class DelayWithCoroutineExample | Capstone documentation",
    "keywords": "Class DelayWithCoroutineExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class DelayWithCoroutineExample : MikroBehavior Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior DelayWithCoroutineExample Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Examples.Enemy.html": {
    "href": "api/MikroFramework.Examples.Enemy.html",
    "title": "Class Enemy | Capstone documentation",
    "keywords": "Class Enemy Namespace MikroFramework.Examples Assembly MikroFramework.dll public class Enemy : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> Enemy Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields winPanel public GameObject winPanel Field Value GameObject"
  },
  "api/MikroFramework.Examples.EnumFSMSimplifiedExample.html": {
    "href": "api/MikroFramework.Examples.EnumFSMSimplifiedExample.html",
    "title": "Class EnumFSMSimplifiedExample | Capstone documentation",
    "keywords": "Class EnumFSMSimplifiedExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class EnumFSMSimplifiedExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EnumFSMSimplifiedExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ErrorArea.html": {
    "href": "api/MikroFramework.Examples.ErrorArea.html",
    "title": "Class ErrorArea | Capstone documentation",
    "keywords": "Class ErrorArea Namespace MikroFramework.Examples Assembly MikroFramework.dll public class ErrorArea : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> ErrorArea Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.EventSystemExample.html": {
    "href": "api/MikroFramework.Examples.EventSystemExample.html",
    "title": "Class EventSystemExample | Capstone documentation",
    "keywords": "Class EventSystemExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class EventSystemExample : MikroBehavior Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior EventSystemExample Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Examples.EventSystemInMikroBehavior.html": {
    "href": "api/MikroFramework.Examples.EventSystemInMikroBehavior.html",
    "title": "Class EventSystemInMikroBehavior | Capstone documentation",
    "keywords": "Class EventSystemInMikroBehavior Namespace MikroFramework.Examples Assembly MikroFramework.dll public class EventSystemInMikroBehavior : MikroBehavior Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior EventSystemInMikroBehavior Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Examples.FSMSimplified.html": {
    "href": "api/MikroFramework.Examples.FSMSimplified.html",
    "title": "Class FSMSimplified | Capstone documentation",
    "keywords": "Class FSMSimplified Namespace MikroFramework.Examples Assembly MikroFramework.dll public class FSMSimplified : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FSMSimplified Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.GameManager.html": {
    "href": "api/MikroFramework.Examples.GameManager.html",
    "title": "Class GameManager | Capstone documentation",
    "keywords": "Class GameManager Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GameManager : MonoBehaviour, ISingleton Inheritance object Object Component Behaviour MonoBehaviour GameManager Implements ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Gameover() public static void Gameover() Init() public static void Init() Pause() public static void Pause() Play(int, int) public static void Play(int addScore, int addHealth) Parameters addScore int addHealth int Resume() public static void Resume()"
  },
  "api/MikroFramework.Examples.GameModel.html": {
    "href": "api/MikroFramework.Examples.GameModel.html",
    "title": "Class GameModel | Capstone documentation",
    "keywords": "Class GameModel Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GameModel : AbstractModel, IGameModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel GameModel Implements IGameModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties BestScore public BindableProperty<int> BestScore { get; } Property Value BindableProperty<int> Gold public BindableProperty<int> Gold { get; } Property Value BindableProperty<int> KillCount public BindableProperty<int> KillCount { get; } Property Value BindableProperty<int> Life public BindableProperty<int> Life { get; } Property Value BindableProperty<int> Score public BindableProperty<int> Score { get; } Property Value BindableProperty<int> Methods OnInit() protected override void OnInit()"
  },
  "api/MikroFramework.Examples.GameModule.html": {
    "href": "api/MikroFramework.Examples.GameModule.html",
    "title": "Class GameModule | Capstone documentation",
    "keywords": "Class GameModule Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GameModule : EntranceManager, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager GameModule Implements IManager Inherited Members EntranceManager.environmentMode EntranceManager.EnvironmentMode ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods LaunchInDevelopingMode() Code in Developing Mode will only run at the development phrase of the project protected override void LaunchInDevelopingMode() LaunchInReleasedMode() Code in Released Mode will only run at the released phrase of the project protected override void LaunchInReleasedMode() LaunchInTestingMode() Code in Testing Mode will only run at the testing phrase of the project protected override void LaunchInTestingMode() LoadModule() public static void LoadModule()"
  },
  "api/MikroFramework.Examples.GameObjectPoolsManagerExample.html": {
    "href": "api/MikroFramework.Examples.GameObjectPoolsManagerExample.html",
    "title": "Class GameObjectPoolsManagerExample | Capstone documentation",
    "keywords": "Class GameObjectPoolsManagerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GameObjectPoolsManagerExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameObjectPoolsManagerExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields CylinderPrefab public GameObject CylinderPrefab Field Value GameObject cubePrefab public GameObject cubePrefab Field Value GameObject spherePrefab public GameObject spherePrefab Field Value GameObject Methods Allocate(GameObject) public void Allocate(GameObject prefab) Parameters prefab GameObject Recycle(GameObject) public void Recycle(GameObject prefab) Parameters prefab GameObject"
  },
  "api/MikroFramework.Examples.GamePanel.html": {
    "href": "api/MikroFramework.Examples.GamePanel.html",
    "title": "Class GamePanel | Capstone documentation",
    "keywords": "Class GamePanel Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GamePanel : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> GamePanel Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.GameWinPanel.html": {
    "href": "api/MikroFramework.Examples.GameWinPanel.html",
    "title": "Class GameWinPanel | Capstone documentation",
    "keywords": "Class GameWinPanel Namespace MikroFramework.Examples Assembly MikroFramework.dll public class GameWinPanel : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> GameWinPanel Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.HomeModule.html": {
    "href": "api/MikroFramework.Examples.HomeModule.html",
    "title": "Class HomeModule | Capstone documentation",
    "keywords": "Class HomeModule Namespace MikroFramework.Examples Assembly MikroFramework.dll public class HomeModule : EntranceManager, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager HomeModule Implements IManager Inherited Members EntranceManager.environmentMode EntranceManager.EnvironmentMode ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods LaunchInDevelopingMode() Code in Developing Mode will only run at the development phrase of the project protected override void LaunchInDevelopingMode() LaunchInReleasedMode() Code in Released Mode will only run at the released phrase of the project protected override void LaunchInReleasedMode() LaunchInTestingMode() Code in Testing Mode will only run at the testing phrase of the project protected override void LaunchInTestingMode()"
  },
  "api/MikroFramework.Examples.HotUpdateEntranceManagerExample.html": {
    "href": "api/MikroFramework.Examples.HotUpdateEntranceManagerExample.html",
    "title": "Class HotUpdateEntranceManagerExample | Capstone documentation",
    "keywords": "Class HotUpdateEntranceManagerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class HotUpdateEntranceManagerExample : HotUpdateEntranceManager, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager HotUpdateEntranceManager HotUpdateEntranceManagerExample Implements IManager Inherited Members HotUpdateEntranceManager.resLoader HotUpdateEntranceManager.LaunchInReleasedMode() HotUpdateEntranceManager.StartHotUpdate() HotUpdateEntranceManager.InitializeHotUpdateManager() HotUpdateEntranceManager.CheckNewVersionRes() HotUpdateEntranceManager.UpdateResources() HotUpdateEntranceManager.ValidateResourceCompleteness() HotUpdateEntranceManager.DeleteRedundantFiles() HotUpdateEntranceManager.Update() HotUpdateEntranceManager.EnableUpdateDownloadSpeed() EntranceManager.environmentMode EntranceManager.EnvironmentMode ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields downloadText public Text downloadText Field Value Text Methods LaunchInDevelopingMode() Code in Developing Mode will only run at the development phrase of the project protected override void LaunchInDevelopingMode() LaunchInTestingMode() Code in Testing Mode will only run at the testing phrase of the project protected override void LaunchInTestingMode() OnHotUpdateComplete() Invoked after the complete hot-update cycle has completed protected override void OnHotUpdateComplete() OnHotUpdateError(HotUpdateError) Callback function invoked when any error occurs during the hot-updating phrase protected override void OnHotUpdateError(HotUpdateError error) Parameters error HotUpdateError OnHotUpdateManagerInitialized() Callback function invoked when the hot-update manager is initialized protected override void OnHotUpdateManagerInitialized() OnHotUpdateResourceDownloadedAndUpdated() Invoked when resources are successfully downloaded and updated on the local device protected override void OnHotUpdateResourceDownloadedAndUpdated() OnHotUpdateResourcesDownloading(float, float, float, float, float) Callback invoked every frame when resources are downloading and updating protected override void OnHotUpdateResourcesDownloading(float downloadProgress, float totalDownloadSize, float alreadyDownloadedFileSize, float downloadingFileDownloadedSize, float downloadSpeed) Parameters downloadProgress float The overall progress of the current download queue totalDownloadSize float The total size of all files combined of the current download queue alreadyDownloadedFileSize float The combined size of all files that have completely downloaded (not including files that are downloading) of the current download queue downloadingFileDownloadedSize float The downloaded size of the current downloading file (not complete) downloadSpeed float Current download speed OnHotUpdateVersionChecked(bool, ResVersion) Callback invoked when the Hot-update version is checked protected override void OnHotUpdateVersionChecked(bool needUpdate, ResVersion localResVersion) Parameters needUpdate bool Does the current game need to be updated? localResVersion ResVersion The local ResVersion (contains local AB file infos) file OnRedundantFilesDeleted() Invoked when redundant files are deleted from the local device protected override void OnRedundantFilesDeleted() OnResourceCompletenessValidated(List<ABMD5Base>) Invoked when the completeness of all local resources has been validated protected override void OnResourceCompletenessValidated(List<ABMD5Base> updatedResourceInfos) Parameters updatedResourceInfos List<ABMD5Base> Infos of files that have been updated (null if all original files are complete)"
  },
  "api/MikroFramework.Examples.IAchievementSystem.html": {
    "href": "api/MikroFramework.Examples.IAchievementSystem.html",
    "title": "Interface IAchievementSystem | Capstone documentation",
    "keywords": "Interface IAchievementSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IAchievementSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>)"
  },
  "api/MikroFramework.Examples.IBluetoothManager.html": {
    "href": "api/MikroFramework.Examples.IBluetoothManager.html",
    "title": "Interface IBluetoothManager | Capstone documentation",
    "keywords": "Interface IBluetoothManager Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IBluetoothManager Methods Connect() void Connect()"
  },
  "api/MikroFramework.Examples.ICanDoSomething1.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething1.html",
    "title": "Interface ICanDoSomething1 | Capstone documentation",
    "keywords": "Interface ICanDoSomething1 Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface ICanDoSomething1 : IHasEverything Inherited Members IHasEverything.canDoEverything Extension Methods ICanDoSomething1Extension.DoSomething1(ICanDoSomething1)"
  },
  "api/MikroFramework.Examples.ICanDoSomething1Extension.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething1Extension.html",
    "title": "Class ICanDoSomething1Extension | Capstone documentation",
    "keywords": "Class ICanDoSomething1Extension Namespace MikroFramework.Examples Assembly MikroFramework.dll public static class ICanDoSomething1Extension Inheritance object ICanDoSomething1Extension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething1(ICanDoSomething1) public static void DoSomething1(this ICanDoSomething1 self) Parameters self ICanDoSomething1"
  },
  "api/MikroFramework.Examples.ICanDoSomething2.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething2.html",
    "title": "Interface ICanDoSomething2 | Capstone documentation",
    "keywords": "Interface ICanDoSomething2 Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface ICanDoSomething2 : IHasEverything Inherited Members IHasEverything.canDoEverything Extension Methods ICanDoSomething2Extension.DoSomething2(ICanDoSomething2)"
  },
  "api/MikroFramework.Examples.ICanDoSomething2Extension.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething2Extension.html",
    "title": "Class ICanDoSomething2Extension | Capstone documentation",
    "keywords": "Class ICanDoSomething2Extension Namespace MikroFramework.Examples Assembly MikroFramework.dll public static class ICanDoSomething2Extension Inheritance object ICanDoSomething2Extension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething2(ICanDoSomething2) public static void DoSomething2(this ICanDoSomething2 self) Parameters self ICanDoSomething2"
  },
  "api/MikroFramework.Examples.ICanDoSomething3.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething3.html",
    "title": "Interface ICanDoSomething3 | Capstone documentation",
    "keywords": "Interface ICanDoSomething3 Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface ICanDoSomething3 : IHasEverything Inherited Members IHasEverything.canDoEverything Extension Methods ICanDoSomething3Extension.DoSomething3(ICanDoSomething3)"
  },
  "api/MikroFramework.Examples.ICanDoSomething3Extension.html": {
    "href": "api/MikroFramework.Examples.ICanDoSomething3Extension.html",
    "title": "Class ICanDoSomething3Extension | Capstone documentation",
    "keywords": "Class ICanDoSomething3Extension Namespace MikroFramework.Examples Assembly MikroFramework.dll public static class ICanDoSomething3Extension Inheritance object ICanDoSomething3Extension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething3(ICanDoSomething3) public static void DoSomething3(this ICanDoSomething3 self) Parameters self ICanDoSomething3"
  },
  "api/MikroFramework.Examples.ICanSayHello.html": {
    "href": "api/MikroFramework.Examples.ICanSayHello.html",
    "title": "Interface ICanSayHello | Capstone documentation",
    "keywords": "Interface ICanSayHello Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface ICanSayHello Methods SayHello() void SayHello() SayOther() void SayOther()"
  },
  "api/MikroFramework.Examples.ICountDownSystem.html": {
    "href": "api/MikroFramework.Examples.ICountDownSystem.html",
    "title": "Interface ICountDownSystem | Capstone documentation",
    "keywords": "Interface ICountDownSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface ICountDownSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties CurrentRemainSeconds int CurrentRemainSeconds { get; } Property Value int Methods Update() void Update()"
  },
  "api/MikroFramework.Examples.IGameModel.html": {
    "href": "api/MikroFramework.Examples.IGameModel.html",
    "title": "Interface IGameModel | Capstone documentation",
    "keywords": "Interface IGameModel Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IGameModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) Properties BestScore BindableProperty<int> BestScore { get; } Property Value BindableProperty<int> Gold BindableProperty<int> Gold { get; } Property Value BindableProperty<int> KillCount BindableProperty<int> KillCount { get; } Property Value BindableProperty<int> Life BindableProperty<int> Life { get; } Property Value BindableProperty<int> Score BindableProperty<int> Score { get; } Property Value BindableProperty<int>"
  },
  "api/MikroFramework.Examples.IHasEverything.html": {
    "href": "api/MikroFramework.Examples.IHasEverything.html",
    "title": "Interface IHasEverything | Capstone documentation",
    "keywords": "Interface IHasEverything Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IHasEverything Properties canDoEverything CanDoEverything canDoEverything { get; } Property Value CanDoEverything"
  },
  "api/MikroFramework.Examples.IOCExample.html": {
    "href": "api/MikroFramework.Examples.IOCExample.html",
    "title": "Class IOCExample | Capstone documentation",
    "keywords": "Class IOCExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class IOCExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour IOCExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.IScoreSystem.html": {
    "href": "api/MikroFramework.Examples.IScoreSystem.html",
    "title": "Interface IScoreSystem | Capstone documentation",
    "keywords": "Interface IScoreSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IScoreSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>)"
  },
  "api/MikroFramework.Examples.IStorage.html": {
    "href": "api/MikroFramework.Examples.IStorage.html",
    "title": "Interface IStorage | Capstone documentation",
    "keywords": "Interface IStorage Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface IStorage : IUtility Methods LoadInt(string, int) int LoadInt(string key, int defaultValue = 0) Parameters key string defaultValue int Returns int SaveInt(string, int) void SaveInt(string key, int value) Parameters key string value int"
  },
  "api/MikroFramework.Examples.IndexSearchExample.html": {
    "href": "api/MikroFramework.Examples.IndexSearchExample.html",
    "title": "Class IndexSearchExample | Capstone documentation",
    "keywords": "Class IndexSearchExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class IndexSearchExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour IndexSearchExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.InterfaceDesignExample.html": {
    "href": "api/MikroFramework.Examples.InterfaceDesignExample.html",
    "title": "Class InterfaceDesignExample | Capstone documentation",
    "keywords": "Class InterfaceDesignExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceDesignExample : MonoBehaviour, ICanSayHello Inheritance object Object Component Behaviour MonoBehaviour InterfaceDesignExample Implements ICanSayHello Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods SayHello() public void SayHello()"
  },
  "api/MikroFramework.Examples.InterfaceRuleExample.OnlyCanDo1.html": {
    "href": "api/MikroFramework.Examples.InterfaceRuleExample.OnlyCanDo1.html",
    "title": "Class InterfaceRuleExample.OnlyCanDo1 | Capstone documentation",
    "keywords": "Class InterfaceRuleExample.OnlyCanDo1 Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceRuleExample.OnlyCanDo1 : ICanDoSomething1, IHasEverything Inheritance object InterfaceRuleExample.OnlyCanDo1 Implements ICanDoSomething1 IHasEverything Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ICanDoSomething1Extension.DoSomething1(ICanDoSomething1)"
  },
  "api/MikroFramework.Examples.InterfaceRuleExample.OnlyCanDo23.html": {
    "href": "api/MikroFramework.Examples.InterfaceRuleExample.OnlyCanDo23.html",
    "title": "Class InterfaceRuleExample.OnlyCanDo23 | Capstone documentation",
    "keywords": "Class InterfaceRuleExample.OnlyCanDo23 Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceRuleExample.OnlyCanDo23 : ICanDoSomething2, ICanDoSomething3, IHasEverything Inheritance object InterfaceRuleExample.OnlyCanDo23 Implements ICanDoSomething2 ICanDoSomething3 IHasEverything Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ICanDoSomething2Extension.DoSomething2(ICanDoSomething2) ICanDoSomething3Extension.DoSomething3(ICanDoSomething3)"
  },
  "api/MikroFramework.Examples.InterfaceRuleExample.html": {
    "href": "api/MikroFramework.Examples.InterfaceRuleExample.html",
    "title": "Class InterfaceRuleExample | Capstone documentation",
    "keywords": "Class InterfaceRuleExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceRuleExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InterfaceRuleExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.InterfaceStructExample.CustomScript.html": {
    "href": "api/MikroFramework.Examples.InterfaceStructExample.CustomScript.html",
    "title": "Class InterfaceStructExample.CustomScript | Capstone documentation",
    "keywords": "Class InterfaceStructExample.CustomScript Namespace MikroFramework.Examples Assembly MikroFramework.dll public abstract class InterfaceStructExample.CustomScript : InterfaceStructExample.ICustomScript Inheritance object InterfaceStructExample.CustomScript Implements InterfaceStructExample.ICustomScript Derived InterfaceStructExample.MyScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnDestroy() protected abstract void OnDestroy() OnStart() protected abstract void OnStart() OnUpdate() protected abstract void OnUpdate()"
  },
  "api/MikroFramework.Examples.InterfaceStructExample.ICustomScript.html": {
    "href": "api/MikroFramework.Examples.InterfaceStructExample.ICustomScript.html",
    "title": "Interface InterfaceStructExample.ICustomScript | Capstone documentation",
    "keywords": "Interface InterfaceStructExample.ICustomScript Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface InterfaceStructExample.ICustomScript Methods Destroy() void Destroy() Start() void Start() Update() void Update()"
  },
  "api/MikroFramework.Examples.InterfaceStructExample.MyScript.html": {
    "href": "api/MikroFramework.Examples.InterfaceStructExample.MyScript.html",
    "title": "Class InterfaceStructExample.MyScript | Capstone documentation",
    "keywords": "Class InterfaceStructExample.MyScript Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceStructExample.MyScript : InterfaceStructExample.CustomScript, InterfaceStructExample.ICustomScript Inheritance object InterfaceStructExample.CustomScript InterfaceStructExample.MyScript Implements InterfaceStructExample.ICustomScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnDestroy() protected override void OnDestroy() OnStart() protected override void OnStart() OnUpdate() protected override void OnUpdate()"
  },
  "api/MikroFramework.Examples.InterfaceStructExample.html": {
    "href": "api/MikroFramework.Examples.InterfaceStructExample.html",
    "title": "Class InterfaceStructExample | Capstone documentation",
    "keywords": "Class InterfaceStructExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class InterfaceStructExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InterfaceStructExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.KillEnemyCommand.html": {
    "href": "api/MikroFramework.Examples.KillEnemyCommand.html",
    "title": "Class KillEnemyCommand | Capstone documentation",
    "keywords": "Class KillEnemyCommand Namespace MikroFramework.Examples Assembly MikroFramework.dll public class KillEnemyCommand : AbstractCommand<KillEnemyCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<KillEnemyCommand> KillEnemyCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<KillEnemyCommand>.AutoRecycle AbstractCommand<KillEnemyCommand>.OnRecycled() AbstractCommand<KillEnemyCommand>.IsRecycled AbstractCommand<KillEnemyCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.Examples.LevelManagerExample.html": {
    "href": "api/MikroFramework.Examples.LevelManagerExample.html",
    "title": "Class LevelManagerExample | Capstone documentation",
    "keywords": "Class LevelManagerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class LevelManagerExample : MikroBehavior Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior LevelManagerExample Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Examples.MissCommand.html": {
    "href": "api/MikroFramework.Examples.MissCommand.html",
    "title": "Class MissCommand | Capstone documentation",
    "keywords": "Class MissCommand Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MissCommand : AbstractCommand<MissCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<MissCommand> MissCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<MissCommand>.AutoRecycle AbstractCommand<MissCommand>.OnRecycled() AbstractCommand<MissCommand>.IsRecycled AbstractCommand<MissCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.Examples.MonoMikroSingletonExample.html": {
    "href": "api/MikroFramework.Examples.MonoMikroSingletonExample.html",
    "title": "Class MonoMikroSingletonExample | Capstone documentation",
    "keywords": "Class MonoMikroSingletonExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MonoMikroSingletonExample : MonoMikroSingleton<MonoMikroSingletonExample>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoMikroSingletonExample> MonoMikroSingletonExample Implements ISingleton Inherited Members MonoMikroSingleton<MonoMikroSingletonExample>.instance MonoMikroSingleton<MonoMikroSingletonExample>.Exists MonoMikroSingleton<MonoMikroSingletonExample>.Singleton MonoMikroSingleton<MonoMikroSingletonExample>.OnBeforeDestroy() MonoMikroSingleton<MonoMikroSingletonExample>.onApplicationQuit MonoMikroSingleton<MonoMikroSingletonExample>.IsApplicationQuit MonoMikroSingleton<MonoMikroSingletonExample>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnSingletonInit() public override void OnSingletonInit()"
  },
  "api/MikroFramework.Examples.MonoObject.html": {
    "href": "api/MikroFramework.Examples.MonoObject.html",
    "title": "Class MonoObject | Capstone documentation",
    "keywords": "Class MonoObject Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MonoObject : MonoBehaviour, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MonoObject Implements ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields Num public int Num Field Value int Properties Singleton public static MonoObject Singleton { get; } Property Value MonoObject"
  },
  "api/MikroFramework.Examples.MonoSafeObjectPoolExample.html": {
    "href": "api/MikroFramework.Examples.MonoSafeObjectPoolExample.html",
    "title": "Class MonoSafeObjectPoolExample | Capstone documentation",
    "keywords": "Class MonoSafeObjectPoolExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MonoSafeObjectPoolExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MonoSafeObjectPoolExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields PooledGameObjectPrefab1 public GameObject PooledGameObjectPrefab1 Field Value GameObject"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.ConfigManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.ConfigManager.html",
    "title": "Class MonoSingletonPathExample.ConfigManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.ConfigManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Logic]/ConfigManager\")] public class MonoSingletonPathExample.ConfigManager : MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.ConfigManager> MonoSingletonPathExample.ConfigManager Implements ISingleton Inherited Members MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.instance MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.ConfigManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.GameManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.GameManager.html",
    "title": "Class MonoSingletonPathExample.GameManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.GameManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Logic]/GameManager\")] public class MonoSingletonPathExample.GameManager : MonoMikroSingleton<MonoSingletonPathExample.GameManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.GameManager> MonoSingletonPathExample.GameManager Implements ISingleton Inherited Members MonoMikroSingleton<MonoSingletonPathExample.GameManager>.instance MonoMikroSingleton<MonoSingletonPathExample.GameManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.GameManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.GameManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.GameManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.GameManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.GameManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.GameManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.NetworkManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.NetworkManager.html",
    "title": "Class MonoSingletonPathExample.NetworkManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.NetworkManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Others]/NetworkManager\")] public class MonoSingletonPathExample.NetworkManager : MonoPersistentMikroSingleton<MonoSingletonPathExample.NetworkManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.NetworkManager> MonoPersistentMikroSingleton<MonoSingletonPathExample.NetworkManager> MonoSingletonPathExample.NetworkManager Implements ISingleton Inherited Members MonoPersistentMikroSingleton<MonoSingletonPathExample.NetworkManager>.instance MonoPersistentMikroSingleton<MonoSingletonPathExample.NetworkManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.NetworkManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.ResManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.ResManager.html",
    "title": "Class MonoSingletonPathExample.ResManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.ResManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Framework]/ResManager]\")] public class MonoSingletonPathExample.ResManager : MonoMikroSingleton<MonoSingletonPathExample.ResManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.ResManager> MonoSingletonPathExample.ResManager Implements ISingleton Inherited Members MonoMikroSingleton<MonoSingletonPathExample.ResManager>.instance MonoMikroSingleton<MonoSingletonPathExample.ResManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.ResManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.ResManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.ResManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.ResManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.ResManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.ResManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.SingletonPathSingletonProperty.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.SingletonPathSingletonProperty.html",
    "title": "Class MonoSingletonPathExample.SingletonPathSingletonProperty | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.SingletonPathSingletonProperty Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[SingletonProperty]/Test\")] public class MonoSingletonPathExample.SingletonPathSingletonProperty : MonoBehaviour, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MonoSingletonPathExample.SingletonPathSingletonProperty Implements ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Singleton public static MonoSingletonPathExample.SingletonPathSingletonProperty Singleton { get; } Property Value MonoSingletonPathExample.SingletonPathSingletonProperty Methods OnSingletonInit() public void OnSingletonInit()"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.SoundManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.SoundManager.html",
    "title": "Class MonoSingletonPathExample.SoundManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.SoundManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Framework]/SoundManager\")] public class MonoSingletonPathExample.SoundManager : MonoMikroSingleton<MonoSingletonPathExample.SoundManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.SoundManager> MonoSingletonPathExample.SoundManager Implements ISingleton Inherited Members MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.instance MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.SoundManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.UIManager.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.UIManager.html",
    "title": "Class MonoSingletonPathExample.UIManager | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample.UIManager Namespace MikroFramework.Examples Assembly MikroFramework.dll [MonoSingletonPath(\"[Framework]/UIManager\")] public class MonoSingletonPathExample.UIManager : MonoPersistentMikroSingleton<MonoSingletonPathExample.UIManager>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<MonoSingletonPathExample.UIManager> MonoPersistentMikroSingleton<MonoSingletonPathExample.UIManager> MonoSingletonPathExample.UIManager Implements ISingleton Inherited Members MonoPersistentMikroSingleton<MonoSingletonPathExample.UIManager>.instance MonoPersistentMikroSingleton<MonoSingletonPathExample.UIManager>.Singleton MonoMikroSingleton<MonoSingletonPathExample.UIManager>.Exists MonoMikroSingleton<MonoSingletonPathExample.UIManager>.OnBeforeDestroy() MonoMikroSingleton<MonoSingletonPathExample.UIManager>.OnSingletonInit() MonoMikroSingleton<MonoSingletonPathExample.UIManager>.onApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.UIManager>.IsApplicationQuit MonoMikroSingleton<MonoSingletonPathExample.UIManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPathExample.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPathExample.html",
    "title": "Class MonoSingletonPathExample | Capstone documentation",
    "keywords": "Class MonoSingletonPathExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MonoSingletonPathExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MonoSingletonPathExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MonoSingletonPropertyExample.html": {
    "href": "api/MikroFramework.Examples.MonoSingletonPropertyExample.html",
    "title": "Class MonoSingletonPropertyExample | Capstone documentation",
    "keywords": "Class MonoSingletonPropertyExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MonoSingletonPropertyExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MonoSingletonPropertyExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.MySQLConnectorBasicUsage.html": {
    "href": "api/MikroFramework.Examples.MySQLConnectorBasicUsage.html",
    "title": "Class MySQLConnectorBasicUsage | Capstone documentation",
    "keywords": "Class MySQLConnectorBasicUsage Namespace MikroFramework.Examples Assembly MikroFramework.dll public class MySQLConnectorBasicUsage : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MySQLConnectorBasicUsage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Delete() public void Delete() Insert() public void Insert() SelectIDGreaterThan12() public void SelectIDGreaterThan12() SelectIDUsername() public void SelectIDUsername() UpdateInfo() public void UpdateInfo()"
  },
  "api/MikroFramework.Examples.NestedActionExample.html": {
    "href": "api/MikroFramework.Examples.NestedActionExample.html",
    "title": "Class NestedActionExample | Capstone documentation",
    "keywords": "Class NestedActionExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class NestedActionExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NestedActionExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.NotifyEvent.html": {
    "href": "api/MikroFramework.Examples.NotifyEvent.html",
    "title": "Class NotifyEvent | Capstone documentation",
    "keywords": "Class NotifyEvent Namespace MikroFramework.Examples Assembly MikroFramework.dll public class NotifyEvent Inheritance object NotifyEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.Examples.Observer.html": {
    "href": "api/MikroFramework.Examples.Observer.html",
    "title": "Class Observer | Capstone documentation",
    "keywords": "Class Observer Namespace MikroFramework.Examples Assembly MikroFramework.dll public class Observer Inheritance object Observer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Observer() public Observer() Methods Dispose() public void Dispose()"
  },
  "api/MikroFramework.Examples.ObserverPatternWithTypeEventSystemExplanation.html": {
    "href": "api/MikroFramework.Examples.ObserverPatternWithTypeEventSystemExplanation.html",
    "title": "Class ObserverPatternWithTypeEventSystemExplanation | Capstone documentation",
    "keywords": "Class ObserverPatternWithTypeEventSystemExplanation Namespace MikroFramework.Examples Assembly MikroFramework.dll public class ObserverPatternWithTypeEventSystemExplanation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ObserverPatternWithTypeEventSystemExplanation Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.OnCountdownEndEvent.html": {
    "href": "api/MikroFramework.Examples.OnCountdownEndEvent.html",
    "title": "Class OnCountdownEndEvent | Capstone documentation",
    "keywords": "Class OnCountdownEndEvent Namespace MikroFramework.Examples Assembly MikroFramework.dll public class OnCountdownEndEvent Inheritance object OnCountdownEndEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.Examples.OnEventA.html": {
    "href": "api/MikroFramework.Examples.OnEventA.html",
    "title": "Struct OnEventA | Capstone documentation",
    "keywords": "Struct OnEventA Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct OnEventA Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/MikroFramework.Examples.OnEventB.html": {
    "href": "api/MikroFramework.Examples.OnEventB.html",
    "title": "Struct OnEventB | Capstone documentation",
    "keywords": "Struct OnEventB Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct OnEventB Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/MikroFramework.Examples.PlayerInfo.html": {
    "href": "api/MikroFramework.Examples.PlayerInfo.html",
    "title": "Class PlayerInfo | Capstone documentation",
    "keywords": "Class PlayerInfo Namespace MikroFramework.Examples Assembly MikroFramework.dll [Serializable] public class PlayerInfo Inheritance object PlayerInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Age public BindableProperty<int> Age { get; set; } Property Value BindableProperty<int> Name public BindableProperty<string> Name { get; set; } Property Value BindableProperty<string> State public BindableProperty<PlayerState> State { get; set; } Property Value BindableProperty<PlayerState>"
  },
  "api/MikroFramework.Examples.PlayerPrefsStorage.html": {
    "href": "api/MikroFramework.Examples.PlayerPrefsStorage.html",
    "title": "Class PlayerPrefsStorage | Capstone documentation",
    "keywords": "Class PlayerPrefsStorage Namespace MikroFramework.Examples Assembly MikroFramework.dll public class PlayerPrefsStorage : IStorage, IUtility Inheritance object PlayerPrefsStorage Implements IStorage IUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadInt(string, int) public int LoadInt(string key, int defaultValue = 0) Parameters key string defaultValue int Returns int SaveInt(string, int) public void SaveInt(string key, int value) Parameters key string value int"
  },
  "api/MikroFramework.Examples.PlayerState.html": {
    "href": "api/MikroFramework.Examples.PlayerState.html",
    "title": "Class PlayerState | Capstone documentation",
    "keywords": "Class PlayerState Namespace MikroFramework.Examples Assembly MikroFramework.dll [Serializable] public class PlayerState : IEquatable<PlayerState> Inheritance object PlayerState Implements IEquatable<PlayerState> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields hp public int hp Field Value int mp public int mp Field Value int Methods Equals(PlayerState) public bool Equals(PlayerState other) Parameters other PlayerState Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/MikroFramework.Examples.PointGame.html": {
    "href": "api/MikroFramework.Examples.PointGame.html",
    "title": "Class PointGame | Capstone documentation",
    "keywords": "Class PointGame Namespace MikroFramework.Examples Assembly MikroFramework.dll public class PointGame : Architecture<PointGame>, IArchitecture Inheritance object Architecture<PointGame> PointGame Implements IArchitecture Inherited Members Architecture<PointGame>.Interface Architecture<PointGame>.OnRegisterPatch Architecture<PointGame>.RegisterModel<T>(T) Architecture<PointGame>.RegisterExtensibleUtility<T>(T) Architecture<PointGame>.RegisterSystem<T>(T) Architecture<PointGame>.GetModel<T>() Architecture<PointGame>.SendCommand<T>() Architecture<PointGame>.SendCommand<T>(T) Architecture<PointGame>.GetSystem<T>(Action<T>) Architecture<PointGame>.ResetArchitecture() Architecture<PointGame>.SendEvent<T>() Architecture<PointGame>.SendEvent<T>(T) Architecture<PointGame>.RegisterEvent<T>(Action<T>) Architecture<PointGame>.UnRegisterEvent<T>(Action<T>) Architecture<PointGame>.SendQuery<TResult>(IQuery<TResult>) Architecture<PointGame>.GetUtility<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() protected override void Init()"
  },
  "api/MikroFramework.Examples.PooledGameObjectExample.html": {
    "href": "api/MikroFramework.Examples.PooledGameObjectExample.html",
    "title": "Class PooledGameObjectExample | Capstone documentation",
    "keywords": "Class PooledGameObjectExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class PooledGameObjectExample : PoolableGameObject Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject PooledGameObjectExample Inherited Members PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields Id public int Id Field Value int globalId public static int globalId Field Value int Methods OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartOrAllocate() public override void OnStartOrAllocate()"
  },
  "api/MikroFramework.Examples.ResManagerExample.html": {
    "href": "api/MikroFramework.Examples.ResManagerExample.html",
    "title": "Class ResManagerExample | Capstone documentation",
    "keywords": "Class ResManagerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class ResManagerExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ResManagerExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.SafeObjectPoolExample.html": {
    "href": "api/MikroFramework.Examples.SafeObjectPoolExample.html",
    "title": "Class SafeObjectPoolExample | Capstone documentation",
    "keywords": "Class SafeObjectPoolExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SafeObjectPoolExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SafeObjectPoolExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ScoreSystem.html": {
    "href": "api/MikroFramework.Examples.ScoreSystem.html",
    "title": "Class ScoreSystem | Capstone documentation",
    "keywords": "Class ScoreSystem Namespace MikroFramework.Examples Assembly MikroFramework.dll public class ScoreSystem : AbstractSystem, IScoreSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem ScoreSystem Implements IScoreSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnInit() protected override void OnInit()"
  },
  "api/MikroFramework.Examples.SequenceExample.html": {
    "href": "api/MikroFramework.Examples.SequenceExample.html",
    "title": "Class SequenceExample | Capstone documentation",
    "keywords": "Class SequenceExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SequenceExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SequenceExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ServiceLocator.AccountSystem.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.AccountSystem.html",
    "title": "Class AccountSystem | Capstone documentation",
    "keywords": "Class AccountSystem Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class AccountSystem : IAccountSystem, ISystem Inheritance object AccountSystem Implements IAccountSystem ISystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsLogined public bool IsLogined { get; } Property Value bool Methods Login(string, string, Action<bool>) public void Login(string username, string password, Action<bool> onLogin) Parameters username string password string onLogin Action<bool> Logout(Action) public void Logout(Action onLogout) Parameters onLogout Action"
  },
  "api/MikroFramework.Examples.ServiceLocator.ArchitectureConfig.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ArchitectureConfig.html",
    "title": "Class ArchitectureConfig | Capstone documentation",
    "keywords": "Class ArchitectureConfig Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class ArchitectureConfig : IArchitecture Inheritance object ArchitectureConfig Implements IArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Architecture public static ArchitectureConfig Architecture Field Value ArchitectureConfig Properties BasicModuleLayer Basic Modules, such as Log and third-party plugins, such as DOTween and BestHTTP public IBasicModuleLayer BasicModuleLayer { get; } Property Value IBasicModuleLayer BusinessModuleLayer public IBusinessModuleLayer BusinessModuleLayer { get; } Property Value IBusinessModuleLayer LogicLayer public ILogicLayer LogicLayer { get; } Property Value ILogicLayer PublicModuleLayer Modules that serve as solutions for specific problems. Such as UIManager, ResManager... public IPublicModuleLayer PublicModuleLayer { get; } Property Value IPublicModuleLayer UtilityLayer Tools that do not need to manage data. Such as JsonSerializer public IUtilityLayer UtilityLayer { get; } Property Value IUtilityLayer"
  },
  "api/MikroFramework.Examples.ServiceLocator.BluetoothService.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.BluetoothService.html",
    "title": "Class BluetoothService | Capstone documentation",
    "keywords": "Class BluetoothService Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class BluetoothService : IService Inheritance object BluetoothService Implements IService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; } Property Value string Methods Execute() public void Execute()"
  },
  "api/MikroFramework.Examples.ServiceLocator.BusinessModuleLayer.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.BusinessModuleLayer.html",
    "title": "Class BusinessModuleLayer | Capstone documentation",
    "keywords": "Class BusinessModuleLayer Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class BusinessModuleLayer : AbstractModuleLayer, IBusinessModuleLayer, IModuleLayer Inheritance object AbstractModuleLayer BusinessModuleLayer Implements IBusinessModuleLayer IModuleLayer Inherited Members AbstractModuleLayer.GetModule<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties factory protected override AssemblyModuleFactory factory { get; } Property Value AssemblyModuleFactory"
  },
  "api/MikroFramework.Examples.ServiceLocator.EventManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.EventManager.html",
    "title": "Class EventManager | Capstone documentation",
    "keywords": "Class EventManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class EventManager : IEventManager, IModule Inheritance object EventManager Implements IEventManager IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething() public void DoSomething() InitModule() public void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.FSM.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.FSM.html",
    "title": "Class FSM | Capstone documentation",
    "keywords": "Class FSM Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class FSM : IFSM, IModule Inheritance object FSM Implements IFSM IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething() public void DoSomething() InitModule() public void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IAccountSystem.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IAccountSystem.html",
    "title": "Interface IAccountSystem | Capstone documentation",
    "keywords": "Interface IAccountSystem Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IAccountSystem : ISystem Properties IsLogined bool IsLogined { get; } Property Value bool Methods Login(string, string, Action<bool>) void Login(string username, string password, Action<bool> onLogin) Parameters username string password string onLogin Action<bool> Logout(Action) void Logout(Action onLogout) Parameters onLogout Action"
  },
  "api/MikroFramework.Examples.ServiceLocator.IEventManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IEventManager.html",
    "title": "Interface IEventManager | Capstone documentation",
    "keywords": "Interface IEventManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IEventManager : IModule Inherited Members IModule.InitModule() Methods DoSomething() void DoSomething()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IFSM.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IFSM.html",
    "title": "Interface IFSM | Capstone documentation",
    "keywords": "Interface IFSM Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IFSM : IModule Inherited Members IModule.InitModule() Methods DoSomething() void DoSomething()"
  },
  "api/MikroFramework.Examples.ServiceLocator.ILogicController.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ILogicController.html",
    "title": "Interface ILogicController | Capstone documentation",
    "keywords": "Interface ILogicController Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface ILogicController"
  },
  "api/MikroFramework.Examples.ServiceLocator.ILoginController.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ILoginController.html",
    "title": "Interface ILoginController | Capstone documentation",
    "keywords": "Interface ILoginController Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface ILoginController : ILogicController Methods Login() void Login()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IModule.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IModule.html",
    "title": "Interface IModule | Capstone documentation",
    "keywords": "Interface IModule Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IModule Methods InitModule() void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IPoolManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IPoolManager.html",
    "title": "Interface IPoolManager | Capstone documentation",
    "keywords": "Interface IPoolManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IPoolManager : IModule Inherited Members IModule.InitModule() Methods DoSomething() void DoSomething()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IQuestSystem.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IQuestSystem.html",
    "title": "Interface IQuestSystem | Capstone documentation",
    "keywords": "Interface IQuestSystem Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IQuestSystem : ISystem Methods OnEvent(string) void OnEvent(string eventName) Parameters eventName string"
  },
  "api/MikroFramework.Examples.ServiceLocator.IResManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IResManager.html",
    "title": "Interface IResManager | Capstone documentation",
    "keywords": "Interface IResManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IResManager : IModule Inherited Members IModule.InitModule() Methods DoSomething() void DoSomething()"
  },
  "api/MikroFramework.Examples.ServiceLocator.ISystem.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ISystem.html",
    "title": "Interface ISystem | Capstone documentation",
    "keywords": "Interface ISystem Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface ISystem"
  },
  "api/MikroFramework.Examples.ServiceLocator.IUIManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IUIManager.html",
    "title": "Interface IUIManager | Capstone documentation",
    "keywords": "Interface IUIManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IUIManager : IModule Inherited Members IModule.InitModule() Methods DoSomething() void DoSomething()"
  },
  "api/MikroFramework.Examples.ServiceLocator.IUserInputManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.IUserInputManager.html",
    "title": "Interface IUserInputManager | Capstone documentation",
    "keywords": "Interface IUserInputManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public interface IUserInputManager : ILogicController Methods OnInput(KeyCode) void OnInput(KeyCode keyCode) Parameters keyCode KeyCode"
  },
  "api/MikroFramework.Examples.ServiceLocator.InitialContext.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.InitialContext.html",
    "title": "Class InitialContext | Capstone documentation",
    "keywords": "Class InitialContext Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class InitialContext : AbstractInitialContext Inheritance object AbstractInitialContext InitialContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LookUp(string) Try to find a service public override IService LookUp(string name) Parameters name string Returns IService"
  },
  "api/MikroFramework.Examples.ServiceLocator.LayeredArchitectureExample.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.LayeredArchitectureExample.html",
    "title": "Class LayeredArchitectureExample | Capstone documentation",
    "keywords": "Class LayeredArchitectureExample Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class LayeredArchitectureExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LayeredArchitectureExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ServiceLocator.LogicLayer.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.LogicLayer.html",
    "title": "Class LogicLayer | Capstone documentation",
    "keywords": "Class LogicLayer Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class LogicLayer : AbstractModuleLayer, ILogicLayer, IModuleLayer Inheritance object AbstractModuleLayer LogicLayer Implements ILogicLayer IModuleLayer Inherited Members AbstractModuleLayer.GetModule<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties factory protected override AssemblyModuleFactory factory { get; } Property Value AssemblyModuleFactory"
  },
  "api/MikroFramework.Examples.ServiceLocator.LoginController.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.LoginController.html",
    "title": "Class LoginController | Capstone documentation",
    "keywords": "Class LoginController Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class LoginController : ILoginController, ILogicController Inheritance object LoginController Implements ILoginController ILogicController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Login() public void Login()"
  },
  "api/MikroFramework.Examples.ServiceLocator.ModuleManagementConfig.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ModuleManagementConfig.html",
    "title": "Class ModuleManagementConfig | Capstone documentation",
    "keywords": "Class ModuleManagementConfig Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class ModuleManagementConfig : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModuleManagementConfig Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields container public static ModuleContainer container Field Value ModuleContainer"
  },
  "api/MikroFramework.Examples.ServiceLocator.PoolManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.PoolManager.html",
    "title": "Class PoolManager | Capstone documentation",
    "keywords": "Class PoolManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class PoolManager : IPoolManager, IModule Inheritance object PoolManager Implements IPoolManager IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething() public void DoSomething() InitModule() public void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.QuestSystem.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.QuestSystem.html",
    "title": "Class QuestSystem | Capstone documentation",
    "keywords": "Class QuestSystem Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class QuestSystem : IQuestSystem, ISystem Inheritance object QuestSystem Implements IQuestSystem ISystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnEvent(string) public void OnEvent(string eventName) Parameters eventName string"
  },
  "api/MikroFramework.Examples.ServiceLocator.ResManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ResManager.html",
    "title": "Class ResManager | Capstone documentation",
    "keywords": "Class ResManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class ResManager : IResManager, IModule Inheritance object ResManager Implements IResManager IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething() public void DoSomething() InitModule() public void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.ServiceLocatorBasicUsageExample.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.ServiceLocatorBasicUsageExample.html",
    "title": "Class ServiceLocatorBasicUsageExample | Capstone documentation",
    "keywords": "Class ServiceLocatorBasicUsageExample Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class ServiceLocatorBasicUsageExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ServiceLocatorBasicUsageExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.ServiceLocator.UIManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.UIManager.html",
    "title": "Class UIManager | Capstone documentation",
    "keywords": "Class UIManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class UIManager : IUIManager, IModule Inheritance object UIManager Implements IUIManager IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomething() public void DoSomething() InitModule() public void InitModule()"
  },
  "api/MikroFramework.Examples.ServiceLocator.UserInputManager.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.UserInputManager.html",
    "title": "Class UserInputManager | Capstone documentation",
    "keywords": "Class UserInputManager Namespace MikroFramework.Examples.ServiceLocator Assembly MikroFramework.dll public class UserInputManager : IUserInputManager, ILogicController Inheritance object UserInputManager Implements IUserInputManager ILogicController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnInput(KeyCode) public void OnInput(KeyCode keyCode) Parameters keyCode KeyCode"
  },
  "api/MikroFramework.Examples.ServiceLocator.html": {
    "href": "api/MikroFramework.Examples.ServiceLocator.html",
    "title": "Namespace MikroFramework.Examples.ServiceLocator | Capstone documentation",
    "keywords": "Namespace MikroFramework.Examples.ServiceLocator Classes AccountSystem ArchitectureConfig BluetoothService BusinessModuleLayer EventManager FSM InitialContext LayeredArchitectureExample LogicLayer LoginController ModuleManagementConfig PoolManager QuestSystem ResManager ServiceLocatorBasicUsageExample UIManager UserInputManager Interfaces IAccountSystem IEventManager IFSM ILogicController ILoginController IModule IPoolManager IQuestSystem IResManager ISystem IUIManager IUserInputManager"
  },
  "api/MikroFramework.Examples.SimpleRCExample.html": {
    "href": "api/MikroFramework.Examples.SimpleRCExample.html",
    "title": "Class SimpleRCExample | Capstone documentation",
    "keywords": "Class SimpleRCExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SimpleRCExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SimpleRCExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.SimpleTableSearchExample.html": {
    "href": "api/MikroFramework.Examples.SimpleTableSearchExample.html",
    "title": "Class SimpleTableSearchExample | Capstone documentation",
    "keywords": "Class SimpleTableSearchExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SimpleTableSearchExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SimpleTableSearchExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.SingletonBestPractice.html": {
    "href": "api/MikroFramework.Examples.SingletonBestPractice.html",
    "title": "Class SingletonBestPractice | Capstone documentation",
    "keywords": "Class SingletonBestPractice Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SingletonBestPractice : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SingletonBestPractice Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.SingletonExample.html": {
    "href": "api/MikroFramework.Examples.SingletonExample.html",
    "title": "Class SingletonExample | Capstone documentation",
    "keywords": "Class SingletonExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SingletonExample : MikroSingleton<SingletonExample>, ISingleton Inheritance object MikroSingleton<SingletonExample> SingletonExample Implements ISingleton Inherited Members MikroSingleton<SingletonExample>.instance MikroSingleton<SingletonExample>.Singleton MikroSingleton<SingletonExample>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.Examples.SingletonPropertyExample.html": {
    "href": "api/MikroFramework.Examples.SingletonPropertyExample.html",
    "title": "Class SingletonPropertyExample | Capstone documentation",
    "keywords": "Class SingletonPropertyExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SingletonPropertyExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SingletonPropertyExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.SpawnExample.html": {
    "href": "api/MikroFramework.Examples.SpawnExample.html",
    "title": "Class SpawnExample | Capstone documentation",
    "keywords": "Class SpawnExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class SpawnExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SpawnExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.Subject.html": {
    "href": "api/MikroFramework.Examples.Subject.html",
    "title": "Class Subject | Capstone documentation",
    "keywords": "Class Subject Namespace MikroFramework.Examples Assembly MikroFramework.dll public class Subject Inheritance object Subject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoSomethingThatInterestsObservers() public void DoSomethingThatInterestsObservers()"
  },
  "api/MikroFramework.Examples.TestAdvancedDataTable.html": {
    "href": "api/MikroFramework.Examples.TestAdvancedDataTable.html",
    "title": "Class TestAdvancedDataTable | Capstone documentation",
    "keywords": "Class TestAdvancedDataTable Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TestAdvancedDataTable : Table<TestDataItem>, IEnumerable<TestDataItem>, IEnumerable Inheritance object Table<TestDataItem> TestAdvancedDataTable Implements IEnumerable<TestDataItem> IEnumerable Inherited Members Table<TestDataItem>.Items Table<TestDataItem>.Add(TestDataItem) Table<TestDataItem>.Add(IEnumerable<TestDataItem>) Table<TestDataItem>.Remove(TestDataItem) Table<TestDataItem>.Update() Table<TestDataItem>.Clear() Table<TestDataItem>.Get(Func<TestDataItem, bool>) Table<TestDataItem>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestAdvancedDataTable() public TestAdvancedDataTable() Properties AgeIndex public TableIndex<int, TestDataItem> AgeIndex { get; } Property Value TableIndex<int, TestDataItem> NameIndex public TableIndex<string, TestDataItem> NameIndex { get; } Property Value TableIndex<string, TestDataItem> Methods OnAdd(TestDataItem) Add your logic for adding your customized index here public override void OnAdd(TestDataItem item) Parameters item TestDataItem OnClear() Triggered when the table is cleared protected override void OnClear() OnRemove(TestDataItem) Add your logic for removing your customized index here public override void OnRemove(TestDataItem item) Parameters item TestDataItem"
  },
  "api/MikroFramework.Examples.TestDataItem.html": {
    "href": "api/MikroFramework.Examples.TestDataItem.html",
    "title": "Class TestDataItem | Capstone documentation",
    "keywords": "Class TestDataItem Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TestDataItem Inheritance object TestDataItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Age public int Age { get; set; } Property Value int Name public string Name { get; set; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/MikroFramework.Examples.TestSimpleDataTable.html": {
    "href": "api/MikroFramework.Examples.TestSimpleDataTable.html",
    "title": "Class TestSimpleDataTable | Capstone documentation",
    "keywords": "Class TestSimpleDataTable Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TestSimpleDataTable : Table<TestDataItem>, IEnumerable<TestDataItem>, IEnumerable Inheritance object Table<TestDataItem> TestSimpleDataTable Implements IEnumerable<TestDataItem> IEnumerable Inherited Members Table<TestDataItem>.Items Table<TestDataItem>.Add(TestDataItem) Table<TestDataItem>.Add(IEnumerable<TestDataItem>) Table<TestDataItem>.Remove(TestDataItem) Table<TestDataItem>.Update() Table<TestDataItem>.Clear() Table<TestDataItem>.Get(Func<TestDataItem, bool>) Table<TestDataItem>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnAdd(TestDataItem) Add your logic for adding your customized index here public override void OnAdd(TestDataItem item) Parameters item TestDataItem OnClear() Triggered when the table is cleared protected override void OnClear() OnRemove(TestDataItem) Add your logic for removing your customized index here public override void OnRemove(TestDataItem item) Parameters item TestDataItem"
  },
  "api/MikroFramework.Examples.TimeSystemBasicUsage.html": {
    "href": "api/MikroFramework.Examples.TimeSystemBasicUsage.html",
    "title": "Class TimeSystemBasicUsage | Capstone documentation",
    "keywords": "Class TimeSystemBasicUsage Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TimeSystemBasicUsage : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TimeSystemBasicUsage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.TimelineExample.html": {
    "href": "api/MikroFramework.Examples.TimelineExample.html",
    "title": "Class TimelineExample | Capstone documentation",
    "keywords": "Class TimelineExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TimelineExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TimelineExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.TypeEventExample.EventA.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.EventA.html",
    "title": "Struct TypeEventExample.EventA | Capstone documentation",
    "keywords": "Struct TypeEventExample.EventA Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct TypeEventExample.EventA Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/MikroFramework.Examples.TypeEventExample.EventB.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.EventB.html",
    "title": "Struct TypeEventExample.EventB | Capstone documentation",
    "keywords": "Struct TypeEventExample.EventB Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct TypeEventExample.EventB Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ParamB public int ParamB Field Value int"
  },
  "api/MikroFramework.Examples.TypeEventExample.EventC.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.EventC.html",
    "title": "Struct TypeEventExample.EventC | Capstone documentation",
    "keywords": "Struct TypeEventExample.EventC Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct TypeEventExample.EventC : TypeEventExample.IEventGroup Implements TypeEventExample.IEventGroup Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ParamC public int ParamC Field Value int"
  },
  "api/MikroFramework.Examples.TypeEventExample.EventD.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.EventD.html",
    "title": "Struct TypeEventExample.EventD | Capstone documentation",
    "keywords": "Struct TypeEventExample.EventD Namespace MikroFramework.Examples Assembly MikroFramework.dll public struct TypeEventExample.EventD : TypeEventExample.IEventGroup Implements TypeEventExample.IEventGroup Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/MikroFramework.Examples.TypeEventExample.IEventGroup.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.IEventGroup.html",
    "title": "Interface TypeEventExample.IEventGroup | Capstone documentation",
    "keywords": "Interface TypeEventExample.IEventGroup Namespace MikroFramework.Examples Assembly MikroFramework.dll public interface TypeEventExample.IEventGroup"
  },
  "api/MikroFramework.Examples.TypeEventExample.html": {
    "href": "api/MikroFramework.Examples.TypeEventExample.html",
    "title": "Class TypeEventExample | Capstone documentation",
    "keywords": "Class TypeEventExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class TypeEventExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TypeEventExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.UIXXXPanelExample.html": {
    "href": "api/MikroFramework.Examples.UIXXXPanelExample.html",
    "title": "Class UIXXXPanelExample | Capstone documentation",
    "keywords": "Class UIXXXPanelExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UIXXXPanelExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIXXXPanelExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.UIYYYPanel.html": {
    "href": "api/MikroFramework.Examples.UIYYYPanel.html",
    "title": "Class UIYYYPanel | Capstone documentation",
    "keywords": "Class UIYYYPanel Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UIYYYPanel : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIYYYPanel Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.UniRxBasicUsage.html": {
    "href": "api/MikroFramework.Examples.UniRxBasicUsage.html",
    "title": "Class UniRxBasicUsage | Capstone documentation",
    "keywords": "Class UniRxBasicUsage Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UniRxBasicUsage : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxBasicUsage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.UniRxTimerExample.html": {
    "href": "api/MikroFramework.Examples.UniRxTimerExample.html",
    "title": "Class UniRxTimerExample | Capstone documentation",
    "keywords": "Class UniRxTimerExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UniRxTimerExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxTimerExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Examples.UseBindablePropertyExample.html": {
    "href": "api/MikroFramework.Examples.UseBindablePropertyExample.html",
    "title": "Class UseBindablePropertyExample | Capstone documentation",
    "keywords": "Class UseBindablePropertyExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UseBindablePropertyExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UseBindablePropertyExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields health public BindableProperty<int> health Field Value BindableProperty<int>"
  },
  "api/MikroFramework.Examples.UseIOnEventExample.html": {
    "href": "api/MikroFramework.Examples.UseIOnEventExample.html",
    "title": "Class UseIOnEventExample | Capstone documentation",
    "keywords": "Class UseIOnEventExample Namespace MikroFramework.Examples Assembly MikroFramework.dll public class UseIOnEventExample : MonoBehaviour, IOnEvent<OnEventA>, IOnEvent<OnEventB> Inheritance object Object Component Behaviour MonoBehaviour UseIOnEventExample Implements IOnEvent<OnEventA> IOnEvent<OnEventB> Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnEvent(OnEventA) public void OnEvent(OnEventA e) Parameters e OnEventA OnEvent(OnEventB) public void OnEvent(OnEventB e) Parameters e OnEventB"
  },
  "api/MikroFramework.Examples.User.html": {
    "href": "api/MikroFramework.Examples.User.html",
    "title": "Class User | Capstone documentation",
    "keywords": "Class User Namespace MikroFramework.Examples Assembly MikroFramework.dll public class User : ISingleton Inheritance object User Implements ISingleton Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Age public int Age Field Value int Name public string Name Field Value string Properties Singleton public static User Singleton { get; } Property Value User"
  },
  "api/MikroFramework.Examples.html": {
    "href": "api/MikroFramework.Examples.html",
    "title": "Namespace MikroFramework.Examples | Capstone documentation",
    "keywords": "Namespace MikroFramework.Examples Namespaces MikroFramework.Examples.ClassicObserverPattern MikroFramework.Examples.CounterApp MikroFramework.Examples.ServiceLocator Classes AchievementItem AchievementSystem AssetBundleExample AudioManagerExample BindablePropertySerializationExample BindablePropertySerializationExample.Info BlueToothManager BuyLifeCommand CanDoEverything CountDownSystem CustomizedActionExample CustomizedActionExample.DEFAction DelayExample DelaySequenceExample DelayWithCoroutineExample Enemy EnumFSMSimplifiedExample ErrorArea EventSystemExample EventSystemInMikroBehavior FSMSimplified GameManager GameModel GameModule GameObjectPoolsManagerExample GamePanel GameWinPanel HomeModule HotUpdateEntranceManagerExample ICanDoSomething1Extension ICanDoSomething2Extension ICanDoSomething3Extension IOCExample IndexSearchExample InterfaceDesignExample InterfaceRuleExample InterfaceRuleExample.OnlyCanDo1 InterfaceRuleExample.OnlyCanDo23 InterfaceStructExample InterfaceStructExample.CustomScript InterfaceStructExample.MyScript KillEnemyCommand LevelManagerExample MissCommand MonoMikroSingletonExample MonoObject MonoSafeObjectPoolExample MonoSingletonPathExample MonoSingletonPathExample.ConfigManager MonoSingletonPathExample.GameManager MonoSingletonPathExample.NetworkManager MonoSingletonPathExample.ResManager MonoSingletonPathExample.SingletonPathSingletonProperty MonoSingletonPathExample.SoundManager MonoSingletonPathExample.UIManager MonoSingletonPropertyExample MySQLConnectorBasicUsage NestedActionExample NotifyEvent Observer ObserverPatternWithTypeEventSystemExplanation OnCountdownEndEvent PlayerInfo PlayerPrefsStorage PlayerState PointGame PooledGameObjectExample ResManagerExample SafeObjectPoolExample ScoreSystem SequenceExample SimpleRCExample SimpleTableSearchExample SingletonBestPractice SingletonExample SingletonPropertyExample SpawnExample Subject TestAdvancedDataTable TestDataItem TestSimpleDataTable TimeSystemBasicUsage TimelineExample TypeEventExample UIXXXPanelExample UIYYYPanel UniRxBasicUsage UniRxTimerExample UseBindablePropertyExample UseIOnEventExample User Structs OnEventA OnEventB TypeEventExample.EventA TypeEventExample.EventB TypeEventExample.EventC TypeEventExample.EventD Interfaces IAchievementSystem IBluetoothManager ICanDoSomething1 ICanDoSomething2 ICanDoSomething3 ICanSayHello ICountDownSystem IGameModel IHasEverything IScoreSystem IStorage InterfaceStructExample.ICustomScript TypeEventExample.IEventGroup"
  },
  "api/MikroFramework.Extensions.GameObjectExtension.html": {
    "href": "api/MikroFramework.Extensions.GameObjectExtension.html",
    "title": "Class GameObjectExtension | Capstone documentation",
    "keywords": "Class GameObjectExtension Namespace MikroFramework.Extensions Assembly MikroFramework.dll public static class GameObjectExtension Inheritance object GameObjectExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Hide(GameObject) Set the target GameObject to inactive public static void Hide(this GameObject obj) Parameters obj GameObject target gameobject Hide(MonoBehaviour) Set the GameObject of the target Transform component to inactive public static void Hide(this MonoBehaviour transform) Parameters transform MonoBehaviour Hide(Transform) Set the GameObject of the target Transform component to inactive public static void Hide(this Transform transform) Parameters transform Transform Show(GameObject) Set the target gameobject to active public static void Show(this GameObject obj) Parameters obj GameObject target gameobject Show(MonoBehaviour) Set the GameObject of the target Transform component to active public static void Show(this MonoBehaviour transform) Parameters transform MonoBehaviour Show(Transform) Set the GameObject of the target Transform component to active public static void Show(this Transform transform) Parameters transform Transform"
  },
  "api/MikroFramework.Extensions.TransformExtension.html": {
    "href": "api/MikroFramework.Extensions.TransformExtension.html",
    "title": "Class TransformExtension | Capstone documentation",
    "keywords": "Class TransformExtension Namespace MikroFramework.Extensions Assembly MikroFramework.dll public static class TransformExtension Inheritance object TransformExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddChild(Transform, Transform) Add a gameobject to the child of another gameobject public static void AddChild(this Transform parentTransform, Transform childTransform) Parameters parentTransform Transform The Transform component of the parent GameObject childTransform Transform The Transform component of the child GameObject Identity(MonoBehaviour) Reset the Transform component public static void Identity(this MonoBehaviour monoBehaviour) Parameters monoBehaviour MonoBehaviour Identity(Transform) Reset the Transform component public static void Identity(this Transform transform) Parameters transform Transform Transform component to reset SetLocalPosX(Transform, float) public static void SetLocalPosX(this Transform transform, float x) Parameters transform Transform x float SetLocalPosXY(Transform, float, float) public static void SetLocalPosXY(this Transform transform, float x, float y) Parameters transform Transform x float y float SetLocalPosXZ(Transform, float, float) public static void SetLocalPosXZ(this Transform transform, float x, float z) Parameters transform Transform x float z float SetLocalPosY(Transform, float) public static void SetLocalPosY(this Transform transform, float y) Parameters transform Transform y float SetLocalPosYZ(Transform, float, float) public static void SetLocalPosYZ(this Transform transform, float y, float z) Parameters transform Transform y float z float SetLocalPosZ(Transform, float) public static void SetLocalPosZ(this Transform transform, float z) Parameters transform Transform z float SetPosX(Transform, float) public static void SetPosX(this Transform transform, float x) Parameters transform Transform x float SetPosXY(Transform, float, float) public static void SetPosXY(this Transform transform, float x, float y) Parameters transform Transform x float y float SetPosXZ(Transform, float, float) public static void SetPosXZ(this Transform transform, float x, float z) Parameters transform Transform x float z float SetPosY(Transform, float) public static void SetPosY(this Transform transform, float y) Parameters transform Transform y float SetPosYZ(Transform, float, float) public static void SetPosYZ(this Transform transform, float y, float z) Parameters transform Transform y float z float SetPosZ(Transform, float) public static void SetPosZ(this Transform transform, float z) Parameters transform Transform z float"
  },
  "api/MikroFramework.Extensions.html": {
    "href": "api/MikroFramework.Extensions.html",
    "title": "Namespace MikroFramework.Extensions | Capstone documentation",
    "keywords": "Namespace MikroFramework.Extensions Classes GameObjectExtension TransformExtension"
  },
  "api/MikroFramework.FSM.FSM.FSMTranslationCallback.html": {
    "href": "api/MikroFramework.FSM.FSM.FSMTranslationCallback.html",
    "title": "Delegate FSM.FSMTranslationCallback | Capstone documentation",
    "keywords": "Delegate FSM.FSMTranslationCallback Namespace MikroFramework.FSM Assembly MikroFramework.dll public delegate void FSM.FSMTranslationCallback()"
  },
  "api/MikroFramework.FSM.FSM.html": {
    "href": "api/MikroFramework.FSM.FSM.html",
    "title": "Class FSM | Capstone documentation",
    "keywords": "Class FSM Namespace MikroFramework.FSM Assembly MikroFramework.dll FSM (Finite state machine). Support both string and enum based states public class FSM : IFSM Inheritance object FSM Implements IFSM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FSMJsonExtension.ToJson(IFSM, string) Fields OnStateChanged public EventProperty<string, string> OnStateChanged Field Value EventProperty<string, string> Properties StateDict public Dictionary<string, FSMState> StateDict { get; } Property Value Dictionary<string, FSMState> Methods AddState(FSMState) Add a state using a FSMState object public IFSM AddState(FSMState state) Parameters state FSMState Returns IFSM AddState(string) Add a new state using state name public IFSM AddState(string stateName) Parameters stateName string Returns IFSM AddState<StateEnum>(StateEnum) Add a new state using a state enum public FSM AddState<StateEnum>(StateEnum stateEnum) where StateEnum : Enum Parameters stateEnum StateEnum Returns FSM Type Parameters StateEnum AddTranslation(FSMTranslation) Add a translation to a state. If the \"fromState\" of the translation is null, the translation to be added to all states by default public IFSM AddTranslation(FSMTranslation translation) Parameters translation FSMTranslation Returns IFSM AddTranslation(string, string, string, FSMTranslationCallback) Add a new translation to the state machine, given state names and translation name. If the corresponding state name could not be fount in the state machine, the machine will auto create a new one. public IFSM AddTranslation(string fromStateName, string translationName, string toStateName, FSM.FSMTranslationCallback callback) Parameters fromStateName string translationName string toStateName string callback FSM.FSMTranslationCallback Returns IFSM AddTranslation<StateEnum, EventEnum>(StateEnum, EventEnum, StateEnum, FSMTranslationCallback) Add a new translation to the state machine, given state enum and translation (event) enum. If the corresponding state could not be fount in the state machine, the machine will auto create a new one. public FSM AddTranslation<StateEnum, EventEnum>(StateEnum fromState, EventEnum translationEnum, StateEnum toState, FSM.FSMTranslationCallback callback) where StateEnum : Enum where EventEnum : Enum Parameters fromState StateEnum If the state enum is \"Any\", any state in this state machine can translate to the target state translationEnum EventEnum toState StateEnum callback FSM.FSMTranslationCallback Returns FSM Type Parameters StateEnum EventEnum Clear() public void Clear() HandleEvent(string) Trigger the event that switch the current state public void HandleEvent(string name) Parameters name string HandleEvent<EventEnum>(EventEnum) Trigger the event that switch the current state, given the event enum public void HandleEvent<EventEnum>(EventEnum eventEnum) where EventEnum : Enum Parameters eventEnum EventEnum Type Parameters EventEnum Start(FSMState) Start the state machine with a initial state public void Start(FSMState state) Parameters state FSMState Start(string) public void Start(string stateName) Parameters stateName string Start<StateEnum>(StateEnum) Start the state machine with a initial state enum public void Start<StateEnum>(StateEnum state) where StateEnum : Enum Parameters state StateEnum The enum could not be \"Any\" Type Parameters StateEnum"
  },
  "api/MikroFramework.FSM.FSMJsonExtension.html": {
    "href": "api/MikroFramework.FSM.FSMJsonExtension.html",
    "title": "Class FSMJsonExtension | Capstone documentation",
    "keywords": "Class FSMJsonExtension Namespace MikroFramework.FSM Assembly MikroFramework.dll public static class FSMJsonExtension Inheritance object FSMJsonExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadJson(string) public static FSM ReadJson(string jsonPath) Parameters jsonPath string Returns FSM ToJson(IFSM, string) public static void ToJson(this IFSM fsm, string path) Parameters fsm IFSM path string"
  },
  "api/MikroFramework.FSM.FSMJsonInfo.html": {
    "href": "api/MikroFramework.FSM.FSMJsonInfo.html",
    "title": "Class FSMJsonInfo | Capstone documentation",
    "keywords": "Class FSMJsonInfo Namespace MikroFramework.FSM Assembly MikroFramework.dll [Serializable] public class FSMJsonInfo Inheritance object FSMJsonInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FsmJsonInfos public List<FSMStateJsonInfo> FsmJsonInfos Field Value List<FSMStateJsonInfo>"
  },
  "api/MikroFramework.FSM.FSMState.html": {
    "href": "api/MikroFramework.FSM.FSMState.html",
    "title": "Class FSMState | Capstone documentation",
    "keywords": "Class FSMState Namespace MikroFramework.FSM Assembly MikroFramework.dll public class FSMState : IPoolable Inheritance object FSMState Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FSMState() public FSMState() FSMState(string) public FSMState(string name) Parameters name string Fields name public string name Field Value string Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool TranslationDictionary Translation for this state. \"name\" is translation's name (or the event name that switch from this state to next state) public Dictionary<string, FSMTranslation> TranslationDictionary { get; } Property Value Dictionary<string, FSMTranslation> Methods AddTranslation(FSMTranslation) Add a translation for this state public void AddTranslation(FSMTranslation translation) Parameters translation FSMTranslation Allocate(string) Allocate a new FSM State public static FSMState Allocate(string name) Parameters name string Name of this state Returns FSMState OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.FSM.FSMStateJsonInfo.html": {
    "href": "api/MikroFramework.FSM.FSMStateJsonInfo.html",
    "title": "Class FSMStateJsonInfo | Capstone documentation",
    "keywords": "Class FSMStateJsonInfo Namespace MikroFramework.FSM Assembly MikroFramework.dll [Serializable] public class FSMStateJsonInfo Inheritance object FSMStateJsonInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name public string Name Field Value string Translations public Dictionary<string, string> Translations Field Value Dictionary<string, string>"
  },
  "api/MikroFramework.FSM.FSMTranslation.html": {
    "href": "api/MikroFramework.FSM.FSMTranslation.html",
    "title": "Class FSMTranslation | Capstone documentation",
    "keywords": "Class FSMTranslation Namespace MikroFramework.FSM Assembly MikroFramework.dll public class FSMTranslation : IPoolable Inheritance object FSMTranslation Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FSMTranslation() public FSMTranslation() Fields callback Callback function public FSM.FSMTranslationCallback callback Field Value FSM.FSMTranslationCallback fromState public FSMState fromState Field Value FSMState name public string name Field Value string toState public FSMState toState Field Value FSMState Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods Allocate(FSMState, string, FSMState, FSMTranslationCallback) Allocate a FSMTranslation object public static FSMTranslation Allocate(FSMState fromState, string name, FSMState toState, FSM.FSMTranslationCallback callback) Parameters fromState FSMState Previous state name string Translation name (or the event name that switch from the previous state to the new state) toState FSMState new state callback FSM.FSMTranslationCallback callback function when switched Returns FSMTranslation OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.FSM.IFSM.html": {
    "href": "api/MikroFramework.FSM.IFSM.html",
    "title": "Interface IFSM | Capstone documentation",
    "keywords": "Interface IFSM Namespace MikroFramework.FSM Assembly MikroFramework.dll public interface IFSM Extension Methods FSMJsonExtension.ToJson(IFSM, string) Properties StateDict Dictionary<string, FSMState> StateDict { get; } Property Value Dictionary<string, FSMState> Methods AddState(FSMState) IFSM AddState(FSMState state) Parameters state FSMState Returns IFSM AddState(string) IFSM AddState(string stateName) Parameters stateName string Returns IFSM AddTranslation(FSMTranslation) IFSM AddTranslation(FSMTranslation translation) Parameters translation FSMTranslation Returns IFSM AddTranslation(string, string, string, FSMTranslationCallback) IFSM AddTranslation(string fromStateName, string translationName, string toStateName, FSM.FSMTranslationCallback callback) Parameters fromStateName string translationName string toStateName string callback FSM.FSMTranslationCallback Returns IFSM Clear() void Clear() HandleEvent(string) void HandleEvent(string name) Parameters name string Start(FSMState) void Start(FSMState state) Parameters state FSMState Start(string) void Start(string stateName) Parameters stateName string"
  },
  "api/MikroFramework.FSM.html": {
    "href": "api/MikroFramework.FSM.html",
    "title": "Namespace MikroFramework.FSM | Capstone documentation",
    "keywords": "Namespace MikroFramework.FSM Classes FSM FSM (Finite state machine). Support both string and enum based states FSMJsonExtension FSMJsonInfo FSMState FSMStateJsonInfo FSMTranslation Interfaces IFSM Delegates FSM.FSMTranslationCallback"
  },
  "api/MikroFramework.FSMBasicExample.html": {
    "href": "api/MikroFramework.FSMBasicExample.html",
    "title": "Class FSMBasicExample | Capstone documentation",
    "keywords": "Class FSMBasicExample Namespace MikroFramework Assembly MikroFramework.dll public class FSMBasicExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FSMBasicExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.FSMSerializationExample.html": {
    "href": "api/MikroFramework.FSMSerializationExample.html",
    "title": "Class FSMSerializationExample | Capstone documentation",
    "keywords": "Class FSMSerializationExample Namespace MikroFramework Assembly MikroFramework.dll public class FSMSerializationExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FSMSerializationExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Factory.CustomObjectFactory-1.html": {
    "href": "api/MikroFramework.Factory.CustomObjectFactory-1.html",
    "title": "Class CustomObjectFactory<T> | Capstone documentation",
    "keywords": "Class CustomObjectFactory<T> Namespace MikroFramework.Factory Assembly MikroFramework.dll public class CustomObjectFactory<T> : IObjectFactory<T> Type Parameters T Inheritance object CustomObjectFactory<T> Implements IObjectFactory<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomObjectFactory(Func<T>) The method that can create or get the Object of type T public CustomObjectFactory(Func<T> factoryMethod) Parameters factoryMethod Func<T> Methods Create() Create an object from the Object's Factory public T Create() Returns T created object"
  },
  "api/MikroFramework.Factory.DefaultGameObjectFactory.html": {
    "href": "api/MikroFramework.Factory.DefaultGameObjectFactory.html",
    "title": "Class DefaultGameObjectFactory | Capstone documentation",
    "keywords": "Class DefaultGameObjectFactory Namespace MikroFramework.Factory Assembly MikroFramework.dll A default factory for creating unity GameObjects. Prefab will be instantiated to the origin of the game public class DefaultGameObjectFactory : IObjectFactory<GameObject> Inheritance object DefaultGameObjectFactory Implements IObjectFactory<GameObject> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultGameObjectFactory(GameObject) public DefaultGameObjectFactory(GameObject prefab) Parameters prefab GameObject Methods Create() Create an object from the Object's Factory public GameObject Create() Returns GameObject created object"
  },
  "api/MikroFramework.Factory.DefaultObjectFactory-1.html": {
    "href": "api/MikroFramework.Factory.DefaultObjectFactory-1.html",
    "title": "Class DefaultObjectFactory<T> | Capstone documentation",
    "keywords": "Class DefaultObjectFactory<T> Namespace MikroFramework.Factory Assembly MikroFramework.dll Default Object Factory: Objects are created by new() public class DefaultObjectFactory<T> : IObjectFactory<T> where T : new() Type Parameters T Inheritance object DefaultObjectFactory<T> Implements IObjectFactory<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create() Create an object from the Object's Factory public T Create() Returns T created object"
  },
  "api/MikroFramework.Factory.IObjectFactory-1.html": {
    "href": "api/MikroFramework.Factory.IObjectFactory-1.html",
    "title": "Interface IObjectFactory<T> | Capstone documentation",
    "keywords": "Interface IObjectFactory<T> Namespace MikroFramework.Factory Assembly MikroFramework.dll public interface IObjectFactory<T> Type Parameters T Methods Create() Create an object from the Object's Factory T Create() Returns T created object"
  },
  "api/MikroFramework.Factory.html": {
    "href": "api/MikroFramework.Factory.html",
    "title": "Namespace MikroFramework.Factory | Capstone documentation",
    "keywords": "Namespace MikroFramework.Factory Classes CustomObjectFactory<T> DefaultGameObjectFactory A default factory for creating unity GameObjects. Prefab will be instantiated to the origin of the game DefaultObjectFactory<T> Default Object Factory: Objects are created by new() Interfaces IObjectFactory<T>"
  },
  "api/MikroFramework.Game.html": {
    "href": "api/MikroFramework.Game.html",
    "title": "Class Game | Capstone documentation",
    "keywords": "Class Game Namespace MikroFramework Assembly MikroFramework.dll public class Game : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> Game Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.GameObjectPoolManager.html": {
    "href": "api/MikroFramework.GameObjectPoolManager.html",
    "title": "Class GameObjectPoolManager | Capstone documentation",
    "keywords": "Class GameObjectPoolManager Namespace MikroFramework Assembly MikroFramework.dll public class GameObjectPoolManager : MonoMikroSingleton<GameObjectPoolManager>, ISingleton, IGameObjectPoolManager<SafeGameObjectPool> Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<GameObjectPoolManager> GameObjectPoolManager Implements ISingleton IGameObjectPoolManager<SafeGameObjectPool> Inherited Members MonoMikroSingleton<GameObjectPoolManager>.instance MonoMikroSingleton<GameObjectPoolManager>.Exists MonoMikroSingleton<GameObjectPoolManager>.Singleton MonoMikroSingleton<GameObjectPoolManager>.OnSingletonInit() MonoMikroSingleton<GameObjectPoolManager>.onApplicationQuit MonoMikroSingleton<GameObjectPoolManager>.IsApplicationQuit MonoMikroSingleton<GameObjectPoolManager>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields AutoAddDefaultPoolableGameObject If the pooled gameobject does not contain a component that inherits from PoolableGameObject class, will the manager auto add a default PoolableGameObject component to it? If not, an error will be thrown if the pooled gameobject does not have the component. (Default: false) public static bool AutoAddDefaultPoolableGameObject Field Value bool AutoCreatePoolWhenAllocating When requesting the manager to allocate a prefab, if the Manager does not contain a GameObjectPool for that prefab, will the Manager auto create one for it? If not, an error will be thrown if the Manager does not contain it. (Default: false) public static bool AutoCreatePoolWhenAllocating Field Value bool Properties GameObjectPools A dictionary of all pools in the current scene public Dictionary<string, SafeGameObjectPool> GameObjectPools { get; } Property Value Dictionary<string, SafeGameObjectPool> Methods AddNewPool(SafeGameObjectPool) Join a new pool to the existing PoolManager. Return false if the pool already exist public bool AddNewPool(SafeGameObjectPool newPool) Parameters newPool SafeGameObjectPool Returns bool Allocate(GameObject) Allocate a GameObject from its corresponding pool. Throw error if the pool does not exist public GameObject Allocate(GameObject prefab) Parameters prefab GameObject Returns GameObject CreatePool(GameObject, int, int) Create a new GameObject pool, given a prefab public SafeGameObjectPool CreatePool(GameObject prefab, int initialCount, int maxCount) Parameters prefab GameObject initialCount int maxCount int The max number of objects in the pool. Objects will be destroyed when recycling if the pool is full Returns SafeGameObjectPool CreatePoolFromAB(string, string, int, int, out GameObject) Create a new GameObject pool, in which its prefab is loaded from AssetBundle. Out Returns the prefab from the AB public SafeGameObjectPool CreatePoolFromAB(string prefabAssetName, string ownerBundleName, int initialCount, int maxCount, out GameObject prefab) Parameters prefabAssetName string ownerBundleName string initialCount int maxCount int prefab GameObject Returns SafeGameObjectPool GetOrCreatePool(GameObject) Get or Create a GameObject Pool, given a prefab. The default pool created will have 10 initial objects, and 50 as its max count. public SafeGameObjectPool GetOrCreatePool(GameObject prefab) Parameters prefab GameObject Returns SafeGameObjectPool GetOrCreatePoolFromAB(string, string, out GameObject) Get or Create a GameObject pool, in which its prefab is loaded from AssetBundle. Out returns the prefab from the AB public SafeGameObjectPool GetOrCreatePoolFromAB(string prefabAssetName, string ownerBundleName, out GameObject prefab) Parameters prefabAssetName string ownerBundleName string prefab GameObject Returns SafeGameObjectPool OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy() Recycle(GameObject) Recycle the GameObject back to its pool. Throw error if the pool does not exist public bool Recycle(GameObject recycledObject) Parameters recycledObject GameObject Returns bool"
  },
  "api/MikroFramework.GameStartEvent.html": {
    "href": "api/MikroFramework.GameStartEvent.html",
    "title": "Class GameStartEvent | Capstone documentation",
    "keywords": "Class GameStartEvent Namespace MikroFramework Assembly MikroFramework.dll public class GameStartEvent Inheritance object GameStartEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.GameStartPanel.html": {
    "href": "api/MikroFramework.GameStartPanel.html",
    "title": "Class GameStartPanel | Capstone documentation",
    "keywords": "Class GameStartPanel Namespace MikroFramework Assembly MikroFramework.dll public class GameStartPanel : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> GameStartPanel Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.GameWInEvent.html": {
    "href": "api/MikroFramework.GameWInEvent.html",
    "title": "Class GameWInEvent | Capstone documentation",
    "keywords": "Class GameWInEvent Namespace MikroFramework Assembly MikroFramework.dll public class GameWInEvent Inheritance object GameWInEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.HotUpdateExample.html": {
    "href": "api/MikroFramework.HotUpdateExample.html",
    "title": "Class HotUpdateExample | Capstone documentation",
    "keywords": "Class HotUpdateExample Namespace MikroFramework Assembly MikroFramework.dll public class HotUpdateExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HotUpdateExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields downloadText public Text downloadText Field Value Text Methods HotUpdateSimpleTest(Action) public IEnumerator HotUpdateSimpleTest(Action onHotUpdateFinished) Parameters onHotUpdateFinished Action Returns IEnumerator"
  },
  "api/MikroFramework.ICanSendQuery.html": {
    "href": "api/MikroFramework.ICanSendQuery.html",
    "title": "Interface ICanSendQuery | Capstone documentation",
    "keywords": "Interface ICanSendQuery Namespace MikroFramework Assembly MikroFramework.dll public interface ICanSendQuery : IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Extension Methods CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>)"
  },
  "api/MikroFramework.IOC.IIOCContainer.html": {
    "href": "api/MikroFramework.IOC.IIOCContainer.html",
    "title": "Interface IIOCContainer | Capstone documentation",
    "keywords": "Interface IIOCContainer Namespace MikroFramework.IOC Assembly MikroFramework.dll public interface IIOCContainer Methods Clear() void Clear() GetInstance<T>() Get a singleton from the container T GetInstance<T>() where T : class Returns T Type Parameters T Get<T>() Get a new instance of a registered object from the container T Get<T>() where T : class Returns T Type Parameters T Inject(object) Inject all dependency properties of an object. Those properties should be marked attributes [IOCInject], and the instances of those properties be registered into the IOC Container void Inject(object obj) Parameters obj object RegisterInstance(object) Register an existing singleton to the container void RegisterInstance(object instance) Parameters instance object RegisterInstance<T>(object) Register an existing singleton of type T to the container void RegisterInstance<T>(object instance) Parameters instance object Type Parameters T RegisterInstance<TBase, TConcrete>() void RegisterInstance<TBase, TConcrete>() where TConcrete : TBase Type Parameters TBase TConcrete Register<T>() RegisterInstance a object (not singleton) of type T to the container void Register<T>() Type Parameters T"
  },
  "api/MikroFramework.IOC.IOCContainer.html": {
    "href": "api/MikroFramework.IOC.IOCContainer.html",
    "title": "Class IOCContainer | Capstone documentation",
    "keywords": "Class IOCContainer Namespace MikroFramework.IOC Assembly MikroFramework.dll public class IOCContainer : IIOCContainer Inheritance object IOCContainer Implements IIOCContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clear() public void Clear() GetInstance<T>() Get a singleton from the container public T GetInstance<T>() where T : class Returns T Type Parameters T Get<T>() Get a new instance of a registered object from the container public T Get<T>() where T : class Returns T Type Parameters T Inject(object) Inject all dependency properties of an object. Those properties should be marked attributes [IOCInject], and the instances of those properties be registered into the IOC Container public void Inject(object obj) Parameters obj object RegisterInstance(object) Register an existing singleton to the container public void RegisterInstance(object instance) Parameters instance object RegisterInstance<T>(object) RegisterInstance a singleton to the IOC Container public void RegisterInstance<T>(object instance) Parameters instance object Type Parameters T RegisterInstance<TBase, TConcrete>() public void RegisterInstance<TBase, TConcrete>() where TConcrete : TBase Type Parameters TBase TConcrete Register<T>() RegisterInstance a object (not singleton) of type T to the container public void Register<T>() Type Parameters T"
  },
  "api/MikroFramework.IOC.IOCInject.html": {
    "href": "api/MikroFramework.IOC.IOCInject.html",
    "title": "Class IOCInject | Capstone documentation",
    "keywords": "Class IOCInject Namespace MikroFramework.IOC Assembly MikroFramework.dll public class IOCInject : Attribute, _Attribute Inheritance object Attribute IOCInject Implements _Attribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.IOC.html": {
    "href": "api/MikroFramework.IOC.html",
    "title": "Namespace MikroFramework.IOC | Capstone documentation",
    "keywords": "Namespace MikroFramework.IOC Classes IOCContainer IOCInject Interfaces IIOCContainer"
  },
  "api/MikroFramework.IQuery-1.html": {
    "href": "api/MikroFramework.IQuery-1.html",
    "title": "Interface IQuery<T> | Capstone documentation",
    "keywords": "Interface IQuery<T> Namespace MikroFramework Assembly MikroFramework.dll public interface IQuery<T> : ICanSetArchitecture, ICanGetModel, ICanGetSystem, ICanGetUtility, IBelongToArchitecture Type Parameters T Inherited Members ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) Methods Do() T Do() Returns T"
  },
  "api/MikroFramework.LevelManagementKit.LevelManager.html": {
    "href": "api/MikroFramework.LevelManagementKit.LevelManager.html",
    "title": "Class LevelManager | Capstone documentation",
    "keywords": "Class LevelManager Namespace MikroFramework.LevelManagementKit Assembly MikroFramework.dll [MonoSingletonPath(\"[FrameworkPersistent]/LevelManager\")] public class LevelManager : ManagerBehavior, IManager, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior LevelManager Implements IManager ISingleton Inherited Members ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Index public int Index { get; set; } Property Value int Methods Init(List<string>) public static void Init(List<string> levelNames) Parameters levelNames List<string> LoadCurrent() public static void LoadCurrent() LoadNext() public static void LoadNext()"
  },
  "api/MikroFramework.LevelManagementKit.html": {
    "href": "api/MikroFramework.LevelManagementKit.html",
    "title": "Namespace MikroFramework.LevelManagementKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.LevelManagementKit Classes LevelManager"
  },
  "api/MikroFramework.LoadABAssetExample.html": {
    "href": "api/MikroFramework.LoadABAssetExample.html",
    "title": "Class LoadABAssetExample | Capstone documentation",
    "keywords": "Class LoadABAssetExample Namespace MikroFramework Assembly MikroFramework.dll public class LoadABAssetExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadABAssetExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.LoadAssetWithoutABNameExampleWithHotUpdate.html": {
    "href": "api/MikroFramework.LoadAssetWithoutABNameExampleWithHotUpdate.html",
    "title": "Class LoadAssetWithoutABNameExampleWithHotUpdate | Capstone documentation",
    "keywords": "Class LoadAssetWithoutABNameExampleWithHotUpdate Namespace MikroFramework Assembly MikroFramework.dll public class LoadAssetWithoutABNameExampleWithHotUpdate : HotUpdateEntranceManager, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager HotUpdateEntranceManager LoadAssetWithoutABNameExampleWithHotUpdate Implements IManager Inherited Members HotUpdateEntranceManager.resLoader HotUpdateEntranceManager.LaunchInReleasedMode() HotUpdateEntranceManager.StartHotUpdate() HotUpdateEntranceManager.InitializeHotUpdateManager() HotUpdateEntranceManager.CheckNewVersionRes() HotUpdateEntranceManager.UpdateResources() HotUpdateEntranceManager.ValidateResourceCompleteness() HotUpdateEntranceManager.DeleteRedundantFiles() HotUpdateEntranceManager.Update() HotUpdateEntranceManager.EnableUpdateDownloadSpeed() HotUpdateEntranceManager.OnHotUpdateError(HotUpdateError) HotUpdateEntranceManager.OnHotUpdateManagerInitialized() HotUpdateEntranceManager.OnHotUpdateVersionChecked(bool, ResVersion) HotUpdateEntranceManager.OnHotUpdateResourcesDownloading(float, float, float, float, float) HotUpdateEntranceManager.OnHotUpdateResourceDownloadedAndUpdated() HotUpdateEntranceManager.OnResourceCompletenessValidated(List<ABMD5Base>) HotUpdateEntranceManager.OnRedundantFilesDeleted() EntranceManager.environmentMode EntranceManager.EnvironmentMode ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods LaunchInDevelopingMode() Code in Developing Mode will only run at the development phrase of the project protected override void LaunchInDevelopingMode() LaunchInTestingMode() Code in Testing Mode will only run at the testing phrase of the project protected override void LaunchInTestingMode() OnHotUpdateComplete() Invoked after the complete hot-update cycle has completed protected override void OnHotUpdateComplete()"
  },
  "api/MikroFramework.LoadPanel.html": {
    "href": "api/MikroFramework.LoadPanel.html",
    "title": "Class LoadPanel | Capstone documentation",
    "keywords": "Class LoadPanel Namespace MikroFramework Assembly MikroFramework.dll public class LoadPanel : AbstractPanelContainer, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer LoadPanel Implements IPanelContainer IPanel Inherited Members AbstractPanelContainer.Parent AbstractPanelContainer.Children AbstractPanelContainer.GetTopChild() AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.LoadSceneABExample.html": {
    "href": "api/MikroFramework.LoadSceneABExample.html",
    "title": "Class LoadSceneABExample | Capstone documentation",
    "keywords": "Class LoadSceneABExample Namespace MikroFramework Assembly MikroFramework.dll public class LoadSceneABExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadSceneABExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Managers.HotUpdateEntranceManager.html": {
    "href": "api/MikroFramework.Managers.HotUpdateEntranceManager.html",
    "title": "Class HotUpdateEntranceManager | Capstone documentation",
    "keywords": "Class HotUpdateEntranceManager Namespace MikroFramework.Managers Assembly MikroFramework.dll A convenient Entrance that integrates the complete process of hot-update (initialize Hot-update manager- check new version-download updated files-validate completeness-delete redundant files). The complete cycle will automatically start at the beginning of the released mode, with callback functions for each phrase public abstract class HotUpdateEntranceManager : EntranceManager, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager HotUpdateEntranceManager Implements IManager Derived HotUpdateEntranceManagerExample LoadAssetWithoutABNameExampleWithHotUpdate Inherited Members EntranceManager.environmentMode EntranceManager.EnvironmentMode EntranceManager.LaunchInDevelopingMode() EntranceManager.LaunchInTestingMode() ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields resLoader protected ResLoader resLoader Field Value ResLoader Methods CheckNewVersionRes() protected virtual void CheckNewVersionRes() DeleteRedundantFiles() protected virtual void DeleteRedundantFiles() EnableUpdateDownloadSpeed() To disable updating download speed, override this function and call HotUpdateManager.DisableUpdateDownloadSpeed() protected virtual void EnableUpdateDownloadSpeed() InitializeHotUpdateManager() protected virtual void InitializeHotUpdateManager() LaunchInReleasedMode() The complete cycle of hot-updating will always run in the released mode protected override void LaunchInReleasedMode() OnHotUpdateComplete() Invoked after the complete hot-update cycle has completed protected abstract void OnHotUpdateComplete() OnHotUpdateError(HotUpdateError) Callback function invoked when any error occurs during the hot-updating phrase protected virtual void OnHotUpdateError(HotUpdateError error) Parameters error HotUpdateError OnHotUpdateManagerInitialized() Callback function invoked when the hot-update manager is initialized protected virtual void OnHotUpdateManagerInitialized() OnHotUpdateResourceDownloadedAndUpdated() Invoked when resources are successfully downloaded and updated on the local device protected virtual void OnHotUpdateResourceDownloadedAndUpdated() OnHotUpdateResourcesDownloading(float, float, float, float, float) Callback invoked every frame when resources are downloading and updating protected virtual void OnHotUpdateResourcesDownloading(float downloadProgress, float totalDownloadSize, float alreadyDownloadedFileSize, float downloadingFileDownloadedSize, float downloadSpeed) Parameters downloadProgress float The overall progress of the current download queue totalDownloadSize float The total size of all files combined of the current download queue alreadyDownloadedFileSize float The combined size of all files that have completely downloaded (not including files that are downloading) of the current download queue downloadingFileDownloadedSize float The downloaded size of the current downloading file (not complete) downloadSpeed float Current download speed OnHotUpdateVersionChecked(bool, ResVersion) Callback invoked when the Hot-update version is checked protected virtual void OnHotUpdateVersionChecked(bool needUpdate, ResVersion localResVersion) Parameters needUpdate bool Does the current game need to be updated? localResVersion ResVersion The local ResVersion (contains local AB file infos) file OnRedundantFilesDeleted() Invoked when redundant files are deleted from the local device protected virtual void OnRedundantFilesDeleted() OnResourceCompletenessValidated(List<ABMD5Base>) Invoked when the completeness of all local resources has been validated protected virtual void OnResourceCompletenessValidated(List<ABMD5Base> updatedResourceInfos) Parameters updatedResourceInfos List<ABMD5Base> Infos of files that have been updated (null if all original files are complete) StartHotUpdate() Start the complete hot update process, called by LaunchInReleasedMode() by default protected void StartHotUpdate() Update() Extend this update method public virtual void Update() UpdateResources() protected virtual void UpdateResources() ValidateResourceCompleteness() protected virtual void ValidateResourceCompleteness()"
  },
  "api/MikroFramework.Managers.IManager.html": {
    "href": "api/MikroFramework.Managers.IManager.html",
    "title": "Interface IManager | Capstone documentation",
    "keywords": "Interface IManager Namespace MikroFramework.Managers Assembly MikroFramework.dll public interface IManager Methods AddListener(EventType, Action<MikroMessage>) void AddListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType callBack Action<MikroMessage> Broadcast(EventType, MikroMessage) void Broadcast(EventType eventType, MikroMessage data) Parameters eventType EventType data MikroMessage RemoveListener(EventType) void RemoveListener(EventType eventType) Parameters eventType EventType RemoveListener(EventType, Action<MikroMessage>) void RemoveListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType callBack Action<MikroMessage>"
  },
  "api/MikroFramework.Managers.ManagerBehavior.html": {
    "href": "api/MikroFramework.Managers.ManagerBehavior.html",
    "title": "Class ManagerBehavior | Capstone documentation",
    "keywords": "Class ManagerBehavior Namespace MikroFramework.Managers Assembly MikroFramework.dll public class ManagerBehavior : MikroBehavior, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior Implements IManager Derived AudioManager LevelManager HotUpdateManager EntranceManager UIManager Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy()"
  },
  "api/MikroFramework.Managers.html": {
    "href": "api/MikroFramework.Managers.html",
    "title": "Namespace MikroFramework.Managers | Capstone documentation",
    "keywords": "Namespace MikroFramework.Managers Classes HotUpdateEntranceManager A convenient Entrance that integrates the complete process of hot-update (initialize Hot-update manager- check new version-download updated files-validate completeness-delete redundant files). The complete cycle will automatically start at the beginning of the released mode, with callback functions for each phrase ManagerBehavior Interfaces IManager"
  },
  "api/MikroFramework.MenuPanel.html": {
    "href": "api/MikroFramework.MenuPanel.html",
    "title": "Class MenuPanel | Capstone documentation",
    "keywords": "Class MenuPanel Namespace MikroFramework Assembly MikroFramework.dll public class MenuPanel : AbstractPanelContainer, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer MenuPanel Implements IPanelContainer IPanel Inherited Members AbstractPanelContainer.Parent AbstractPanelContainer.Children AbstractPanelContainer.GetTopChild() AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.MikroBehavior.html": {
    "href": "api/MikroFramework.MikroBehavior.html",
    "title": "Class MikroBehavior | Capstone documentation",
    "keywords": "Class MikroBehavior Namespace MikroFramework Assembly MikroFramework.dll public abstract class MikroBehavior : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior Derived AudioManagerExample DelayWithCoroutineExample EventSystemExample EventSystemInMikroBehavior LevelManagerExample ManagerBehavior MonoMikroSingleton<T> Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods AddListener(EventType, Action<MikroMessage>) Add a listener to the corresponding event type, which must have at least one callback function The listener is auto removed after the gameobject is destroyed public void AddListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function Broadcast(EventType, MikroMessage) Broadcast an event public void Broadcast(EventType eventType, MikroMessage data) Parameters eventType EventType data MikroMessage data included in the event Delay(float, EventType, MikroMessage) public void Delay(float seconds, EventType eventType, MikroMessage data) Parameters seconds float eventType EventType data MikroMessage Delay(float, Action) Trigger an event after some seconds public void Delay(float seconds, Action onFinished) Parameters seconds float onFinished Action triggered event OnBeforeDestroy() Use this method instead of Destroy() protected abstract void OnBeforeDestroy() RemoveListener(EventType) Remove all callback function of this object from the corresponding event type, which must have at least one callback function public void RemoveListener(EventType eventType) Parameters eventType EventType The type of the event (create it in the EventType class) RemoveListener(EventType, Action<MikroMessage>) Remove a callback function from the corresponding event type, which must have at least one callback function public void RemoveListener(EventType eventType, Action<MikroMessage> callBack) Parameters eventType EventType The type of the event (create it in the EventType class) callBack Action<MikroMessage> A callback function"
  },
  "api/MikroFramework.ModuleSearchKeys.html": {
    "href": "api/MikroFramework.ModuleSearchKeys.html",
    "title": "Class ModuleSearchKeys | Capstone documentation",
    "keywords": "Class ModuleSearchKeys Namespace MikroFramework Assembly MikroFramework.dll public class ModuleSearchKeys : IPoolable Inheritance object ModuleSearchKeys Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ModuleSearchKeys() public ModuleSearchKeys() Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Name public string Name { get; set; } Property Value string Type public Type Type { get; set; } Property Value Type Methods Allocate(Type, string) public static ModuleSearchKeys Allocate(Type type, string name) Parameters type Type name string Returns ModuleSearchKeys OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.NHibernate.Examples.NHibernateBasicExample.html": {
    "href": "api/MikroFramework.NHibernate.Examples.NHibernateBasicExample.html",
    "title": "Class NHibernateBasicExample | Capstone documentation",
    "keywords": "Class NHibernateBasicExample Namespace MikroFramework.NHibernate.Examples Assembly MikroFramework.dll public class NHibernateBasicExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NHibernateBasicExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.NHibernate.Examples.UserTableManagerExtension.html": {
    "href": "api/MikroFramework.NHibernate.Examples.UserTableManagerExtension.html",
    "title": "Class UserTableManagerExtension | Capstone documentation",
    "keywords": "Class UserTableManagerExtension Namespace MikroFramework.NHibernate.Examples Assembly MikroFramework.dll public static class UserTableManagerExtension Inheritance object UserTableManagerExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AuthenticateUsernamePlayfabid(NHibernateTableManager<User>, string, string, string) Authenticate the username, playfabid, and password of a player. Add them to the database if not found. Return the added User database object. Return null if username and playfabid do not match the same user. public static Task<User> AuthenticateUsernamePlayfabid(this NHibernateTableManager<User> table, string username, string playfabid, string password) Parameters table NHibernateTableManager<User> username string playfabid string password string Returns Task<User> SearchPlayfabid(NHibernateTableManager<User>, string) Search the User object from the database, given the playfabid. (Null of not found) public static Task<User> SearchPlayfabid(this NHibernateTableManager<User> table, string playfabid) Parameters table NHibernateTableManager<User> playfabid string Returns Task<User> SearchUsername(NHibernateTableManager<User>, string) Search the User object from the database, given the username. (Null of not found) public static Task<User> SearchUsername(this NHibernateTableManager<User> table, string username) Parameters table NHibernateTableManager<User> username string Returns Task<User>"
  },
  "api/MikroFramework.NHibernate.Examples.html": {
    "href": "api/MikroFramework.NHibernate.Examples.html",
    "title": "Namespace MikroFramework.NHibernate.Examples | Capstone documentation",
    "keywords": "Namespace MikroFramework.NHibernate.Examples Classes NHibernateBasicExample UserTableManagerExtension"
  },
  "api/MikroFramework.OnKillEvent.html": {
    "href": "api/MikroFramework.OnKillEvent.html",
    "title": "Class OnKillEvent | Capstone documentation",
    "keywords": "Class OnKillEvent Namespace MikroFramework Assembly MikroFramework.dll public class OnKillEvent Inheritance object OnKillEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.OnMissEvent.html": {
    "href": "api/MikroFramework.OnMissEvent.html",
    "title": "Class OnMissEvent | Capstone documentation",
    "keywords": "Class OnMissEvent Namespace MikroFramework Assembly MikroFramework.dll public class OnMissEvent Inheritance object OnMissEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MikroFramework.OpenFilePanelMsg.html": {
    "href": "api/MikroFramework.OpenFilePanelMsg.html",
    "title": "Struct OpenFilePanelMsg | Capstone documentation",
    "keywords": "Struct OpenFilePanelMsg Namespace MikroFramework Assembly MikroFramework.dll public struct OpenFilePanelMsg : UIMsg Implements UIMsg Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FileCount public int FileCount Field Value int"
  },
  "api/MikroFramework.OpenFilesPanel.html": {
    "href": "api/MikroFramework.OpenFilesPanel.html",
    "title": "Class OpenFilesPanel | Capstone documentation",
    "keywords": "Class OpenFilesPanel Namespace MikroFramework Assembly MikroFramework.dll public class OpenFilesPanel : AbstractPanelContainer, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer OpenFilesPanel Implements IPanelContainer IPanel Inherited Members AbstractPanelContainer.Parent AbstractPanelContainer.Children AbstractPanelContainer.GetTopChild() AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.OrthographicCameraScaler.html": {
    "href": "api/MikroFramework.OrthographicCameraScaler.html",
    "title": "Class OrthographicCameraScaler | Capstone documentation",
    "keywords": "Class OrthographicCameraScaler Namespace MikroFramework Assembly MikroFramework.dll [ExecuteInEditMode] [RequireComponent(typeof(Camera))] public class OrthographicCameraScaler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour OrthographicCameraScaler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.PanelCloseButton.html": {
    "href": "api/MikroFramework.PanelCloseButton.html",
    "title": "Class PanelCloseButton | Capstone documentation",
    "keywords": "Class PanelCloseButton Namespace MikroFramework Assembly MikroFramework.dll public class PanelCloseButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PanelCloseButton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Pool.GameObjectPool.GameObjectPoolState.html": {
    "href": "api/MikroFramework.Pool.GameObjectPool.GameObjectPoolState.html",
    "title": "Enum GameObjectPool.GameObjectPoolState | Capstone documentation",
    "keywords": "Enum GameObjectPool.GameObjectPoolState Namespace MikroFramework.Pool Assembly MikroFramework.dll public enum GameObjectPool.GameObjectPoolState Fields Inited = 2 Initializing = 1 NotInited = 0"
  },
  "api/MikroFramework.Pool.GameObjectPool.html": {
    "href": "api/MikroFramework.Pool.GameObjectPool.html",
    "title": "Class GameObjectPool | Capstone documentation",
    "keywords": "Class GameObjectPool Namespace MikroFramework.Pool Assembly MikroFramework.dll public abstract class GameObjectPool : MonoBehaviour, IPool<GameObject> Inheritance object Object Component Behaviour MonoBehaviour GameObjectPool Implements IPool<GameObject> Derived SafeGameObjectPool Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields cachedStack protected Stack<GameObject> cachedStack Field Value Stack<GameObject> poolState protected GameObjectPool.GameObjectPoolState poolState Field Value GameObjectPool.GameObjectPoolState pooledPrefab [SerializeField] protected GameObject pooledPrefab Field Value GameObject prefabFactory protected IObjectFactory<GameObject> prefabFactory Field Value IObjectFactory<GameObject> Properties CurrentCount public int CurrentCount { get; } Property Value int PooledPrefab public GameObject PooledPrefab { get; set; } Property Value GameObject Methods Allocate() Allocate an object from the ObjectPool public virtual GameObject Allocate() Returns GameObject allocated object Create(GameObject) Create a new SafeGameObject Pool. public static SafeGameObjectPool Create(GameObject pooledPrefab) Parameters pooledPrefab GameObject Returns SafeGameObjectPool Create<T>(GameObject) Create a new GameObject Pool, given the type of the GameObject Pool public static T Create<T>(GameObject pooledPrefab) where T : GameObjectPool Parameters pooledPrefab GameObject Returns T Type Parameters T Init(GameObject) protected abstract void Init(GameObject pooledPrefab) Parameters pooledPrefab GameObject Recycle(GameObject) Recycle the object back to its pool. public abstract bool Recycle(GameObject obj) Parameters obj GameObject Returns bool If recycle success"
  },
  "api/MikroFramework.Pool.IGameObjectPoolManager-1.html": {
    "href": "api/MikroFramework.Pool.IGameObjectPoolManager-1.html",
    "title": "Interface IGameObjectPoolManager<T> | Capstone documentation",
    "keywords": "Interface IGameObjectPoolManager<T> Namespace MikroFramework.Pool Assembly MikroFramework.dll public interface IGameObjectPoolManager<T> where T : GameObjectPool Type Parameters T Properties GameObjectPools A dictionary of all pools in the current scene Dictionary<string, T> GameObjectPools { get; } Property Value Dictionary<string, T> Methods AddNewPool(T) Join a new pool to the existing PoolManager. Return false if the pool already exist bool AddNewPool(T newPool) Parameters newPool T Returns bool Allocate(GameObject) Allocate a GameObject from its corresponding pool. Throw error if the pool does not exist GameObject Allocate(GameObject prefab) Parameters prefab GameObject Returns GameObject CreatePool(GameObject, int, int) Create a new GameObject pool, given a prefab T CreatePool(GameObject prefab, int initialCount, int maxCount) Parameters prefab GameObject initialCount int maxCount int The max number of objects in the pool. Objects will be destroyed when recycling if the pool is full Returns T CreatePoolFromAB(string, string, int, int, out GameObject) Create a new GameObject pool, in which its prefab is loaded from AssetBundle. Out Returns the prefab from the AB T CreatePoolFromAB(string prefabAssetName, string ownerBundleName, int initialCount, int maxCount, out GameObject prefab) Parameters prefabAssetName string ownerBundleName string initialCount int maxCount int prefab GameObject Returns T GetOrCreatePool(GameObject) Get or Create a GameObject Pool, given a prefab. The default pool created will have 10 initial objects, and 50 as its max count. T GetOrCreatePool(GameObject prefab) Parameters prefab GameObject Returns T GetOrCreatePoolFromAB(string, string, out GameObject) Get or Create a GameObject pool, in which its prefab is loaded from AssetBundle. Out returns the prefab from the AB T GetOrCreatePoolFromAB(string prefabAssetName, string ownerBundleName, out GameObject prefab) Parameters prefabAssetName string ownerBundleName string prefab GameObject Returns T Recycle(GameObject) Recycle the GameObject back to its pool. Throw error if the pool does not exist bool Recycle(GameObject recycledObject) Parameters recycledObject GameObject Returns bool"
  },
  "api/MikroFramework.Pool.IPool-1.html": {
    "href": "api/MikroFramework.Pool.IPool-1.html",
    "title": "Interface IPool<T> | Capstone documentation",
    "keywords": "Interface IPool<T> Namespace MikroFramework.Pool Assembly MikroFramework.dll public interface IPool<T> Type Parameters T Methods Allocate() Allocate an object from the ObjectPool T Allocate() Returns T allocated object Recycle(T) Recycle the object back to its pool. bool Recycle(T obj) Parameters obj T Returns bool If recycle success"
  },
  "api/MikroFramework.Pool.IPoolable.html": {
    "href": "api/MikroFramework.Pool.IPoolable.html",
    "title": "Interface IPoolable | Capstone documentation",
    "keywords": "Interface IPoolable Namespace MikroFramework.Pool Assembly MikroFramework.dll public interface IPoolable Properties IsRecycled bool IsRecycled { get; set; } Property Value bool Methods OnRecycled() void OnRecycled() RecycleToCache() void RecycleToCache()"
  },
  "api/MikroFramework.Pool.ObjectPool-1.html": {
    "href": "api/MikroFramework.Pool.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | Capstone documentation",
    "keywords": "Class ObjectPool<T> Namespace MikroFramework.Pool Assembly MikroFramework.dll public abstract class ObjectPool<T> : IPool<T> Type Parameters T Inheritance object ObjectPool<T> Implements IPool<T> Derived SafeObjectPool<T> SimpleObjectPool<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields cachedStack protected Stack<T> cachedStack Field Value Stack<T> factory protected IObjectFactory<T> factory Field Value IObjectFactory<T> Properties CurrentCount public int CurrentCount { get; } Property Value int Methods Allocate() Allocate an object from the ObjectPool public virtual T Allocate() Returns T allocated object Recycle(T) Recycle the object back to its pool. public abstract bool Recycle(T obj) Parameters obj T Returns bool If recycle success"
  },
  "api/MikroFramework.Pool.OnPoolValueChanged.html": {
    "href": "api/MikroFramework.Pool.OnPoolValueChanged.html",
    "title": "Class OnPoolValueChanged | Capstone documentation",
    "keywords": "Class OnPoolValueChanged Namespace MikroFramework.Pool Assembly MikroFramework.dll public class OnPoolValueChanged Inheritance object OnPoolValueChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MaxValue public int MaxValue Field Value int PoolName public string PoolName Field Value string Value public int Value Field Value int"
  },
  "api/MikroFramework.Pool.PoolableGameObject.html": {
    "href": "api/MikroFramework.Pool.PoolableGameObject.html",
    "title": "Class PoolableGameObject | Capstone documentation",
    "keywords": "Class PoolableGameObject Namespace MikroFramework.Pool Assembly MikroFramework.dll public abstract class PoolableGameObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject Derived SlotResourceDescriptionPanel PooledGameObjectExample DefaultPoolableGameObject AbstractBulletViewController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields Pool The pool that belongs to this object [HideInInspector] public GameObjectPool Pool Field Value GameObjectPool Properties IsRecycled public virtual bool IsRecycled { get; set; } Property Value bool Methods OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public virtual void OnRecycled() OnStartOrAllocate() public virtual void OnStartOrAllocate() RecycleToCache() Call this method to recycle this gameobject back to its pool public void RecycleToCache() RegisterOnAllocateEvent(UnityAction) public void RegisterOnAllocateEvent(UnityAction action) Parameters action UnityAction RegisterOnRecycledEvent(UnityAction) public void RegisterOnRecycledEvent(UnityAction action) Parameters action UnityAction"
  },
  "api/MikroFramework.Pool.SafeGameObjectPool.html": {
    "href": "api/MikroFramework.Pool.SafeGameObjectPool.html",
    "title": "Class SafeGameObjectPool | Capstone documentation",
    "keywords": "Class SafeGameObjectPool Namespace MikroFramework.Pool Assembly MikroFramework.dll public class SafeGameObjectPool : GameObjectPool, IPool<GameObject> Inheritance object Object Component Behaviour MonoBehaviour GameObjectPool SafeGameObjectPool Implements IPool<GameObject> Inherited Members GameObjectPool.poolState GameObjectPool.cachedStack GameObjectPool.prefabFactory GameObjectPool.pooledPrefab GameObjectPool.PooledPrefab GameObjectPool.Create<T>(GameObject) GameObjectPool.CurrentCount MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields NumObjDestroyPerFrame Number of Object Destroyed from the Object pool per frame public float NumObjDestroyPerFrame Field Value float NumObjInitPerFrame Number of Object Instantitated to the Object pool per frame at the initialization process of the object pool public float NumObjInitPerFrame Field Value float destroyedObjectInQueue protected Queue<GameObject> destroyedObjectInQueue Field Value Queue<GameObject> initCount [SerializeField] protected int initCount Field Value int maxCount [SerializeField] protected int maxCount Field Value int Properties MaxCount public int MaxCount { get; set; } Property Value int Methods Allocate() Allocate a gameobject from the pool and set active public override GameObject Allocate() Returns GameObject Create(GameObject) Create a new SafeGameObject Pool. public static SafeGameObjectPool Create(GameObject pooledPrefab) Parameters pooledPrefab GameObject Returns SafeGameObjectPool Init(int, int) Initialize the initial count and max count of the pool. public SafeGameObjectPool Init(int initCount = 0, int maxCount = 50) Parameters initCount int maxCount int Returns SafeGameObjectPool Init(GameObject) protected override void Init(GameObject pooledPrefab) Parameters pooledPrefab GameObject Init(GameObject, int, int) protected void Init(GameObject pooledPrefab, int initCount = 0, int maxCount = 50) Parameters pooledPrefab GameObject initCount int maxCount int Recycle(GameObject) Recycle and disactive the gameobject. public override bool Recycle(GameObject obj) Parameters obj GameObject Returns bool"
  },
  "api/MikroFramework.Pool.SafeObjectPool-1.html": {
    "href": "api/MikroFramework.Pool.SafeObjectPool-1.html",
    "title": "Class SafeObjectPool<T> | Capstone documentation",
    "keywords": "Class SafeObjectPool<T> Namespace MikroFramework.Pool Assembly MikroFramework.dll A safer Object ObjectPool, which is a singleton pool for the type of poolable object. The number of objects in the pool will not exceed the MaxCount. Object of the pool must inherit IPoolable interface. public class SafeObjectPool<T> : ObjectPool<T>, IPool<T>, ISingleton where T : class, IPoolable, new() Type Parameters T Inheritance object ObjectPool<T> SafeObjectPool<T> Implements IPool<T> ISingleton Inherited Members ObjectPool<T>.cachedStack ObjectPool<T>.factory ObjectPool<T>.CurrentCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SafeObjectPool() protected SafeObjectPool() Properties MaxCount public int MaxCount { get; set; } Property Value int NumActiveObject Return the number of allocated active object of this pool public ReactiveProperty<int> NumActiveObject { get; } Property Value ReactiveProperty<int> Singleton public static SafeObjectPool<T> Singleton { get; } Property Value SafeObjectPool<T> Methods Allocate() Allocare an instance from the SafeObjectPool. public override T Allocate() Returns T Init(int, int) public void Init(int initialCount = 0, int maxCount = 50) Parameters initialCount int maxCount int Recycle(T) Recycle the IPoolable object back to the ObjectPool, and trigger its OnRecycled Function. If the ObjectPool is full, it will not return to the pool public override bool Recycle(T obj) Parameters obj T Returns bool"
  },
  "api/MikroFramework.Pool.SimpleObjectPool-1.html": {
    "href": "api/MikroFramework.Pool.SimpleObjectPool-1.html",
    "title": "Class SimpleObjectPool<T> | Capstone documentation",
    "keywords": "Class SimpleObjectPool<T> Namespace MikroFramework.Pool Assembly MikroFramework.dll public class SimpleObjectPool<T> : ObjectPool<T>, IPool<T> Type Parameters T Inheritance object ObjectPool<T> SimpleObjectPool<T> Implements IPool<T> Inherited Members ObjectPool<T>.cachedStack ObjectPool<T>.factory ObjectPool<T>.CurrentCount ObjectPool<T>.Allocate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimpleObjectPool(Func<T>, Action<T>, int) public SimpleObjectPool(Func<T> createMethod, Action<T> resetMethod = null, int initialCount = 0) Parameters createMethod Func<T> resetMethod Action<T> initialCount int Methods Recycle(T) Recycle the object back to its pool. public override bool Recycle(T obj) Parameters obj T Returns bool If recycle success"
  },
  "api/MikroFramework.Pool.html": {
    "href": "api/MikroFramework.Pool.html",
    "title": "Namespace MikroFramework.Pool | Capstone documentation",
    "keywords": "Namespace MikroFramework.Pool Classes GameObjectPool ObjectPool<T> OnPoolValueChanged PoolableGameObject SafeGameObjectPool SafeObjectPool<T> A safer Object ObjectPool, which is a singleton pool for the type of poolable object. The number of objects in the pool will not exceed the MaxCount. Object of the pool must inherit IPoolable interface. SimpleObjectPool<T> Interfaces IGameObjectPoolManager<T> IPool<T> IPoolable Enums GameObjectPool.GameObjectPoolState"
  },
  "api/MikroFramework.PoolManagerWithResLoader.html": {
    "href": "api/MikroFramework.PoolManagerWithResLoader.html",
    "title": "Class PoolManagerWithResLoader | Capstone documentation",
    "keywords": "Class PoolManagerWithResLoader Namespace MikroFramework Assembly MikroFramework.dll public class PoolManagerWithResLoader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PoolManagerWithResLoader Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods AllocateAB() public void AllocateAB() AllocateSphere() public void AllocateSphere() RecycleAB() public void RecycleAB() RecycleSphere() public void RecycleSphere()"
  },
  "api/MikroFramework.ReflectionUtility.html": {
    "href": "api/MikroFramework.ReflectionUtility.html",
    "title": "Class ReflectionUtility | Capstone documentation",
    "keywords": "Class ReflectionUtility Namespace MikroFramework Assembly MikroFramework.dll public static class ReflectionUtility Inheritance object ReflectionUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EditorAssembly Return the Assembly object of assembly \"Assembly-CSharp-Editor\" public static Assembly EditorAssembly { get; } Property Value Assembly Methods GetNamespaceForClass(string) public static List<string> GetNamespaceForClass(string className) Parameters className string Returns List<string> GetSubTypesInAssemblies(Type) Get all subtypes of the type public static IEnumerable<Type> GetSubTypesInAssemblies(this Type self) Parameters self Type Returns IEnumerable<Type> GetSubTypesInAssemblies<TAttribute>(Type) Get all subtypes of the type whose attribute is TAttribute public static IEnumerable<Type> GetSubTypesInAssemblies<TAttribute>(this Type self) where TAttribute : Attribute Parameters self Type Returns IEnumerable<Type> Type Parameters TAttribute"
  },
  "api/MikroFramework.RepeatExample.html": {
    "href": "api/MikroFramework.RepeatExample.html",
    "title": "Class RepeatExample | Capstone documentation",
    "keywords": "Class RepeatExample Namespace MikroFramework Assembly MikroFramework.dll public class RepeatExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RepeatExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.RepeatSequence.html": {
    "href": "api/MikroFramework.RepeatSequence.html",
    "title": "Class RepeatSequence | Capstone documentation",
    "keywords": "Class RepeatSequence Namespace MikroFramework Assembly MikroFramework.dll public class RepeatSequence : ActionContainer, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable, IExtensible<RepeatSequence> Inheritance object MikroAction ActionContainer RepeatSequence Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable IExtensible<RepeatSequence> Inherited Members ActionContainer.SetAutoRecycle(bool) ActionContainer.OnExecuting() MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Finish() MikroAction.OnEnd() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.CustomizedAction<T, CustomizedAction>(IExtensible<T>) MikroActionExtensions.Delay<T>(IExtensible<T>, float) MikroActionExtensions.Event<T>(IExtensible<T>, Action) MikroActionExtensions.ResetSelf<T>(IExtensible<T>) MikroActionExtensions.Until<T>(IExtensible<T>, Func<bool>, Action) MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties ActionRecorder public override IEnumerable ActionRecorder { get; } Property Value IEnumerable Methods AddAction(MikroAction) public RepeatSequence AddAction(MikroAction action) Parameters action MikroAction Returns RepeatSequence Allocate(int) public static RepeatSequence Allocate(int repeatTime = 1) Parameters repeatTime int Returns RepeatSequence OnBegin() OnBegin is called right after executing this action, and will be only called once protected override void OnBegin() OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() RecycleBackToPool() protected override void RecycleBackToPool() Reset() Reset is different from Dispose. Reset means reset certain properties back to its initial value, but not dispose properties to null. When AutoRecycle is turned off, you can Reset this action and Execute it again. public override void Reset() SetAutoRecycleForRecordedActions(bool) protected override void SetAutoRecycleForRecordedActions(bool autoRecycle) Parameters autoRecycle bool Update() public override void Update()"
  },
  "api/MikroFramework.ResKit.ABMD5Base.html": {
    "href": "api/MikroFramework.ResKit.ABMD5Base.html",
    "title": "Class ABMD5Base | Capstone documentation",
    "keywords": "Class ABMD5Base Namespace MikroFramework.ResKit Assembly MikroFramework.dll [Serializable] public class ABMD5Base Inheritance object ABMD5Base Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssetName public string AssetName Field Value string FileSize public float FileSize Field Value float MD5 public string MD5 Field Value string assetDatas public List<AssetData> assetDatas Field Value List<AssetData>"
  },
  "api/MikroFramework.ResKit.AssetBundleData.html": {
    "href": "api/MikroFramework.ResKit.AssetBundleData.html",
    "title": "Class AssetBundleData | Capstone documentation",
    "keywords": "Class AssetBundleData Namespace MikroFramework.ResKit Assembly MikroFramework.dll Data of an AssetBundle public class AssetBundleData Inheritance object AssetBundleData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssetDataList public List<AssetData> AssetDataList Field Value List<AssetData> DependencyBundleNames public string[] DependencyBundleNames Field Value string[] LoadOption public AssetBundleLoadOption LoadOption Field Value AssetBundleLoadOption MD5 public string MD5 Field Value string Name public string Name Field Value string"
  },
  "api/MikroFramework.ResKit.AssetBundleLoadOption.html": {
    "href": "api/MikroFramework.ResKit.AssetBundleLoadOption.html",
    "title": "Enum AssetBundleLoadOption | Capstone documentation",
    "keywords": "Enum AssetBundleLoadOption Namespace MikroFramework.ResKit Assembly MikroFramework.dll public enum AssetBundleLoadOption Fields FromHotUpdateFolder = 3 FromLocalFolder = 2 Simulation = 1 UnKnown = 0"
  },
  "api/MikroFramework.ResKit.AssetBundleRes.html": {
    "href": "api/MikroFramework.ResKit.AssetBundleRes.html",
    "title": "Class AssetBundleRes | Capstone documentation",
    "keywords": "Class AssetBundleRes Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class AssetBundleRes : Res, IRefCounter, IPoolable Inheritance object SimpleRC Res AssetBundleRes Implements IRefCounter IPoolable Inherited Members Res.State Res.Asset Res.Name Res.AssetPath Res.ResType Res.OnZeroRef() Res.MatchResSearchKeysWithoutName(ResSearchKeys) Res.RegisterOnLoadedEvent(Action<Res>) Res.UnRegisterOnLoadedEvent(Action<Res>) Res.OnRecycled() Res.IsRecycled SimpleRC.RefCount SimpleRC.Release(object) SimpleRC.Retain(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AssetBundle public AssetBundle AssetBundle { get; set; } Property Value AssetBundle Methods Allocate(string) Allocate a new AssetBundleRes from the Object pool public static AssetBundleRes Allocate(string assetName) Parameters assetName string Returns AssetBundleRes LoadAsync() Load the resource asynchronously public override void LoadAsync() LoadSync() Load the resource public override bool LoadSync() Returns bool OnReleaseRes() Unload this resource protected override void OnReleaseRes() RecycleToCache() public override void RecycleToCache()"
  },
  "api/MikroFramework.ResKit.AssetData.html": {
    "href": "api/MikroFramework.ResKit.AssetData.html",
    "title": "Class AssetData | Capstone documentation",
    "keywords": "Class AssetData Namespace MikroFramework.ResKit Assembly MikroFramework.dll Data of an asset in an AssetBundle [Serializable] public class AssetData Inheritance object AssetData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssetType public string AssetType Field Value string Name public string Name Field Value string OwnerBundleName public string OwnerBundleName Field Value string"
  },
  "api/MikroFramework.ResKit.AssetRes.html": {
    "href": "api/MikroFramework.ResKit.AssetRes.html",
    "title": "Class AssetRes | Capstone documentation",
    "keywords": "Class AssetRes Namespace MikroFramework.ResKit Assembly MikroFramework.dll Single resource that loaded from a AssetBundle. public class AssetRes : Res, IRefCounter, IPoolable Inheritance object SimpleRC Res AssetRes Implements IRefCounter IPoolable Inherited Members Res.State Res.Asset Res.Name Res.AssetPath Res.ResType Res.OnZeroRef() Res.RegisterOnLoadedEvent(Action<Res>) Res.UnRegisterOnLoadedEvent(Action<Res>) Res.OnRecycled() Res.IsRecycled SimpleRC.RefCount SimpleRC.Release(object) SimpleRC.Retain(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Allocate(string, string, Type) Allocate a AssetRes Object from the object pool public static AssetRes Allocate(string assetName, string ownerBundleName, Type resType) Parameters assetName string ownerBundleName string resType Type Returns AssetRes LoadAsync() Load the resource asynchronously public override void LoadAsync() LoadSync() Load the resource public override bool LoadSync() Returns bool MatchResSearchKeysWithoutName(ResSearchKeys) public override bool MatchResSearchKeysWithoutName(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns bool OnReleaseRes() Unload this resource protected override void OnReleaseRes() RecycleToCache() public override void RecycleToCache()"
  },
  "api/MikroFramework.ResKit.DefaultPoolableGameObject.html": {
    "href": "api/MikroFramework.ResKit.DefaultPoolableGameObject.html",
    "title": "Class DefaultPoolableGameObject | Capstone documentation",
    "keywords": "Class DefaultPoolableGameObject Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class DefaultPoolableGameObject : PoolableGameObject Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject Derived DefaultPoolableGameObjectSaved Inherited Members PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartOrAllocate() public override void OnStartOrAllocate()"
  },
  "api/MikroFramework.ResKit.HotUpdateConfig.html": {
    "href": "api/MikroFramework.ResKit.HotUpdateConfig.html",
    "title": "Class HotUpdateConfig | Capstone documentation",
    "keywords": "Class HotUpdateConfig Namespace MikroFramework.ResKit Assembly MikroFramework.dll public static class HotUpdateConfig Inheritance object HotUpdateConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HotUpdateAssetBundlesFolder Path that hot update asset bundles are saved public static string HotUpdateAssetBundlesFolder { get; } Property Value string LocalAssetBundleFolder Path that the local AssetBundle files saved public static string LocalAssetBundleFolder { get; } Property Value string LocalResVersionFilePath Path that the local Res Version file saved public static string LocalResVersionFilePath { get; } Property Value string RemoteAssetBundleBaseURL URL in which Asset Bundles are saved on the remote server public static string RemoteAssetBundleBaseURL { get; } Property Value string RemoteResVersionURL URL for ResVersion file that saved on the remote server public static string RemoteResVersionURL { get; } Property Value string Methods LoadHotUpdateAssetBundlesFolderResVersion() Get HotUpdate ResVersion from HotUpdate folder public static ResVersion LoadHotUpdateAssetBundlesFolderResVersion() Returns ResVersion"
  },
  "api/MikroFramework.ResKit.HotUpdateDownloader.html": {
    "href": "api/MikroFramework.ResKit.HotUpdateDownloader.html",
    "title": "Class HotUpdateDownloader | Capstone documentation",
    "keywords": "Class HotUpdateDownloader Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class HotUpdateDownloader : MonoBehaviour, IHotUpdateDownloader Inheritance object Object Component Behaviour MonoBehaviour HotUpdateDownloader Implements IHotUpdateDownloader Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods DisableUpdateDownloadSpeed() Disable the hot-update manager to update real-time download speed public void DisableUpdateDownloadSpeed() DoDownloadRemoteABs(List<ABMD5Base>, Action<List<ABMD5Base>>, Action<HotUpdateError>) Download Asset Bundles from the remote server to the temp folder, given a list of ABMD5 infos. public IEnumerator DoDownloadRemoteABs(List<ABMD5Base> downloadList, Action<List<ABMD5Base>> onDownloadDone, Action<HotUpdateError> onDownloadFailed) Parameters downloadList List<ABMD5Base> onDownloadDone Action<List<ABMD5Base>> Event triggered after download. If download failed, the bool parameter will be false onDownloadFailed Action<HotUpdateError> Returns IEnumerator DoDownloadResVersion(ResVersion) Download all resources from remote server. public void DoDownloadResVersion(ResVersion remoteResVersion) Parameters remoteResVersion ResVersion EnableUpdateDownloadSpeed(float) Enable the hot-update manager to update real-time download speed (this may cost extra memory). public void EnableUpdateDownloadSpeed(float updateInterval = 1) Parameters updateInterval float Update time interval (seconds) GetAlreadyDownloadedFileSize() Return the total size (kb) of all the files that have already downloaded in the current downloading progress public float GetAlreadyDownloadedFileSize() Returns float GetDownloadProgress() Get the download progress (between 0-1) of all the current downloading files public float GetDownloadProgress() Returns float GetDownloadSpeed() Get the current download speed (kb/s). You must also call EnableUpdateDownloadSpeed() method before to update real-time download speed. It will return -1 if EnableUpdateDownloadSpeed hasn't been called public float GetDownloadSpeed() Returns float GetDownloadingFileSize() Get the file size that has already been downloaded of the currently downloading single file return 0 if nothing is downloading public float GetDownloadingFileSize() Returns float GetLocalAssetResVersion(Action<ResVersion>, Action<HotUpdateError>) Get Local AssetBundle ResVersion from local AB folder. Return null if not found public IEnumerator GetLocalAssetResVersion(Action<ResVersion> getResVersion, Action<HotUpdateError> onGetFailed) Parameters getResVersion Action<ResVersion> onGetFailed Action<HotUpdateError> Returns IEnumerator GetTotalDownloadFileSize() Return the total size (kb) of all the files need to be downloaded currently public float GetTotalDownloadFileSize() Returns float RequestGetRemoteResVersion(Action<ResVersion>, Action<HotUpdateError>) Get the ResVersion file from remote server public IEnumerator RequestGetRemoteResVersion(Action<ResVersion> onResDownloaded, Action<HotUpdateError> onError) Parameters onResDownloaded Action<ResVersion> onError Action<HotUpdateError> Returns IEnumerator"
  },
  "api/MikroFramework.ResKit.HotUpdateError.html": {
    "href": "api/MikroFramework.ResKit.HotUpdateError.html",
    "title": "Enum HotUpdateError | Capstone documentation",
    "keywords": "Enum HotUpdateError Namespace MikroFramework.ResKit Assembly MikroFramework.dll public enum HotUpdateError Fields DeleteRedundentFilesFailed = 3 DownloadRemoeResVersionFailed = 2 DownloadRemoteABFailed = 1 LocalResVersionNotExist = 0 Unknown = 4"
  },
  "api/MikroFramework.ResKit.HotUpdateManager.html": {
    "href": "api/MikroFramework.ResKit.HotUpdateManager.html",
    "title": "Class HotUpdateManager | Capstone documentation",
    "keywords": "Class HotUpdateManager Namespace MikroFramework.ResKit Assembly MikroFramework.dll [MonoSingletonPath(\"[FrameworkPersistent]/[ResKit]/HotUpdate/HotUpdateManager\")] public class HotUpdateManager : ManagerBehavior, IManager, IHotUpdateManager, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior HotUpdateManager Implements IManager IHotUpdateManager ISingleton Inherited Members ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Downloader The downloader of the current hot-update manager public IHotUpdateDownloader Downloader { get; } Property Value IHotUpdateDownloader Singleton public static HotUpdateManager Singleton { get; } Property Value HotUpdateManager State The hot-update state of the current game public HotUpdateState State { get; } Property Value HotUpdateState Methods DeleteRedundantFiles(Action, Action<HotUpdateError>) Delete redundant AB files on the hot-update folder. Make sure to call it after hot-update It will not delete those on the local folder. public void DeleteRedundantFiles(Action onFinished, Action<HotUpdateError> onError) Parameters onFinished Action onError Action<HotUpdateError> DisableUpdateDownloadSpeed() Disable the hot-update manager to update real-time download speed public void DisableUpdateDownloadSpeed() EnableUpdateDownloadSpeed(float) Enable the hot-update manager to update real-time download speed (this may cost extra memory). public void EnableUpdateDownloadSpeed(float updateInterval = 1) Parameters updateInterval float Update time interval (seconds) Exists() Returns whether the HotUpdateManager exists public static bool Exists() Returns bool GetNativeResVersion(Action<ResVersion>, Action<HotUpdateError>) Get the ResVersion of the current game on the local computer public void GetNativeResVersion(Action<ResVersion> getNativeResVersion, Action<HotUpdateError> onError) Parameters getNativeResVersion Action<ResVersion> onError Action<HotUpdateError> GetRemoteResVersion(Action<ResVersion>, Action<HotUpdateError>) Download ResVersion file from the remote server public void GetRemoteResVersion(Action<ResVersion> onRemoteResVersionGet, Action<HotUpdateError> onError) Parameters onRemoteResVersionGet Action<ResVersion> onError Action<HotUpdateError> HasNewVersionRes(Action<bool, ResVersion>, Action<HotUpdateError>) Get if there's a new version on the remote server public void HasNewVersionRes(Action<bool, ResVersion> onResult, Action<HotUpdateError> onError) Parameters onResult Action<bool, ResVersion> returned result (including the native ResVersion file) onError Action<HotUpdateError> Init(Action, Action<HotUpdateError>) Init the HotUpdateManager (recommend to use before using any other APIs), and ValidareHotUpdateState public void Init(Action onInitFinished, Action<HotUpdateError> onInitFailed) Parameters onInitFinished Action onInitFailed Action<HotUpdateError> UpdateRes(Action, Action<HotUpdateError>) Download new resources from the remote server, and replace the local resource public void UpdateRes(Action onUpdateDone, Action<HotUpdateError> onUpdateFailed) Parameters onUpdateDone Action onUpdateFailed Action<HotUpdateError> ValidateHotUpdateCompleteness(Action<List<ABMD5Base>>, Action<HotUpdateError>) Check the completeness of hot updated files on both local and hot-update folder. Download them if they are incomplete return a list of abs that are updated if validate success (return null if nothing to update) public void ValidateHotUpdateCompleteness(Action<List<ABMD5Base>> onFinished, Action<HotUpdateError> onError) Parameters onFinished Action<List<ABMD5Base>> onError Action<HotUpdateError> ValidateHotUpdateState(Action, Action<HotUpdateError>) Check and update the current hot-update state of the game public void ValidateHotUpdateState(Action onCheckFinished, Action<HotUpdateError> onError) Parameters onCheckFinished Action onError Action<HotUpdateError>"
  },
  "api/MikroFramework.ResKit.HotUpdateState.html": {
    "href": "api/MikroFramework.ResKit.HotUpdateState.html",
    "title": "Enum HotUpdateState | Capstone documentation",
    "keywords": "Enum HotUpdateState Namespace MikroFramework.ResKit Assembly MikroFramework.dll public enum HotUpdateState Fields NeverUpdated = 1 Never hot-updated the game (just downloaded it) NotInited = 0 Never initialized HotUpdateState Overridden = 3 Updated = 2 Hot-updated the game before (but it doesn't mean it's up-to-dated) Resource version in PersistentDataPath > in StreamingAsset"
  },
  "api/MikroFramework.ResKit.IHotUpdateDownloader.html": {
    "href": "api/MikroFramework.ResKit.IHotUpdateDownloader.html",
    "title": "Interface IHotUpdateDownloader | Capstone documentation",
    "keywords": "Interface IHotUpdateDownloader Namespace MikroFramework.ResKit Assembly MikroFramework.dll public interface IHotUpdateDownloader Methods DisableUpdateDownloadSpeed() Disable the hot-update manager to update real-time download speed void DisableUpdateDownloadSpeed() DoDownloadRemoteABs(List<ABMD5Base>, Action<List<ABMD5Base>>, Action<HotUpdateError>) IEnumerator DoDownloadRemoteABs(List<ABMD5Base> downloadList, Action<List<ABMD5Base>> onDownloadDone, Action<HotUpdateError> onDownloadFailed) Parameters downloadList List<ABMD5Base> onDownloadDone Action<List<ABMD5Base>> onDownloadFailed Action<HotUpdateError> Returns IEnumerator DoDownloadResVersion(ResVersion) void DoDownloadResVersion(ResVersion remoteResVersion) Parameters remoteResVersion ResVersion EnableUpdateDownloadSpeed(float) Enable the hot-update manager to update real-time download speed (this may cost extra memory). void EnableUpdateDownloadSpeed(float updateInterval = 1) Parameters updateInterval float Update time interval (seconds) GetAlreadyDownloadedFileSize() Return the total size (kb) of all the files that have already downloaded in the current downloading progress float GetAlreadyDownloadedFileSize() Returns float GetDownloadProgress() Get the download progress (between 0-1) of all the current downloading files float GetDownloadProgress() Returns float GetDownloadSpeed() Get the current download speed (kb/s). You must also call EnableUpdateDownloadSpeed() method before to update real-time download speed. It will return -1 if EnableUpdateDownloadSpeed hasn't been called float GetDownloadSpeed() Returns float GetDownloadingFileSize() Get the file size that has already been downloaded of the currently downloading single file return 0 if nothing is downloading float GetDownloadingFileSize() Returns float GetLocalAssetResVersion(Action<ResVersion>, Action<HotUpdateError>) IEnumerator GetLocalAssetResVersion(Action<ResVersion> getResVersion, Action<HotUpdateError> onGetFailed) Parameters getResVersion Action<ResVersion> onGetFailed Action<HotUpdateError> Returns IEnumerator GetTotalDownloadFileSize() Return the total size (kb) of all the files need to be downloaded currently float GetTotalDownloadFileSize() Returns float RequestGetRemoteResVersion(Action<ResVersion>, Action<HotUpdateError>) IEnumerator RequestGetRemoteResVersion(Action<ResVersion> onResDownloaded, Action<HotUpdateError> onError) Parameters onResDownloaded Action<ResVersion> onError Action<HotUpdateError> Returns IEnumerator"
  },
  "api/MikroFramework.ResKit.IHotUpdateManager.html": {
    "href": "api/MikroFramework.ResKit.IHotUpdateManager.html",
    "title": "Interface IHotUpdateManager | Capstone documentation",
    "keywords": "Interface IHotUpdateManager Namespace MikroFramework.ResKit Assembly MikroFramework.dll public interface IHotUpdateManager : ISingleton Inherited Members ISingleton.OnSingletonInit() Methods DeleteRedundantFiles(Action, Action<HotUpdateError>) void DeleteRedundantFiles(Action onFinished, Action<HotUpdateError> onError) Parameters onFinished Action onError Action<HotUpdateError> GetNativeResVersion(Action<ResVersion>, Action<HotUpdateError>) void GetNativeResVersion(Action<ResVersion> getNativeResVersion, Action<HotUpdateError> onError) Parameters getNativeResVersion Action<ResVersion> onError Action<HotUpdateError> GetRemoteResVersion(Action<ResVersion>, Action<HotUpdateError>) void GetRemoteResVersion(Action<ResVersion> onRemoteResVersionGet, Action<HotUpdateError> onError) Parameters onRemoteResVersionGet Action<ResVersion> onError Action<HotUpdateError> HasNewVersionRes(Action<bool, ResVersion>, Action<HotUpdateError>) void HasNewVersionRes(Action<bool, ResVersion> onResult, Action<HotUpdateError> onError) Parameters onResult Action<bool, ResVersion> onError Action<HotUpdateError> Init(Action, Action<HotUpdateError>) void Init(Action onInitFinished, Action<HotUpdateError> onInitFailed) Parameters onInitFinished Action onInitFailed Action<HotUpdateError> UpdateRes(Action, Action<HotUpdateError>) void UpdateRes(Action onUpdateDone, Action<HotUpdateError> onUpdateFailed) Parameters onUpdateDone Action onUpdateFailed Action<HotUpdateError> ValidateHotUpdateCompleteness(Action<List<ABMD5Base>>, Action<HotUpdateError>) void ValidateHotUpdateCompleteness(Action<List<ABMD5Base>> onFinished, Action<HotUpdateError> onError) Parameters onFinished Action<List<ABMD5Base>> onError Action<HotUpdateError> ValidateHotUpdateState(Action, Action<HotUpdateError>) void ValidateHotUpdateState(Action onCheckFinished, Action<HotUpdateError> onError) Parameters onCheckFinished Action onError Action<HotUpdateError>"
  },
  "api/MikroFramework.ResKit.Res.html": {
    "href": "api/MikroFramework.ResKit.Res.html",
    "title": "Class Res | Capstone documentation",
    "keywords": "Class Res Namespace MikroFramework.ResKit Assembly MikroFramework.dll Class that Load and Unload a specific Resource, inherited by ResourceRes, Assetbundle Res and AssetRes Inherit this class to customize your resource loader. public abstract class Res : SimpleRC, IRefCounter, IPoolable Inheritance object SimpleRC Res Implements IRefCounter IPoolable Derived AssetBundleRes AssetRes ResourcesRes Inherited Members SimpleRC.RefCount SimpleRC.Release(object) SimpleRC.Retain(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Asset public Object Asset Field Value Object Properties AssetPath THe path of the asset public string AssetPath { get; protected set; } Property Value string IsRecycled public bool IsRecycled { get; set; } Property Value bool Name Name of the resource public string Name { get; protected set; } Property Value string ResType Type of this Res public Type ResType { get; set; } Property Value Type State public ResState State { get; protected set; } Property Value ResState Methods LoadAsync() Load the resource asynchronously public abstract void LoadAsync() LoadSync() Load the resource public abstract bool LoadSync() Returns bool MatchResSearchKeysWithoutName(ResSearchKeys) public virtual bool MatchResSearchKeysWithoutName(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns bool OnRecycled() public virtual void OnRecycled() OnReleaseRes() Unload this resource protected abstract void OnReleaseRes() OnZeroRef() Triggered when the reference counter reaches 0 protected override void OnZeroRef() RecycleToCache() public abstract void RecycleToCache() RegisterOnLoadedEvent(Action<Res>) RegisterInstance a listener to the event of this Resource that triggered when the resource is loaded public void RegisterOnLoadedEvent(Action<Res> onLoaded) Parameters onLoaded Action<Res> UnRegisterOnLoadedEvent(Action<Res>) Unregister the listener to the event of this Resource that triggered when the resource is loaded public void UnRegisterOnLoadedEvent(Action<Res> onLoaded) Parameters onLoaded Action<Res>"
  },
  "api/MikroFramework.ResKit.ResData.html": {
    "href": "api/MikroFramework.ResKit.ResData.html",
    "title": "Class ResData | Capstone documentation",
    "keywords": "Class ResData Namespace MikroFramework.ResKit Assembly MikroFramework.dll Class that manage Project AB Manifest and saves all AB's load path (from local or hot-update manager) public class ResData : MikroSingleton<ResData>, ISingleton Inheritance object MikroSingleton<ResData> ResData Implements ISingleton Inherited Members MikroSingleton<ResData>.instance MikroSingleton<ResData>.Singleton MikroSingleton<ResData>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssetBundleDatas Contains all native AB package datas, including names, MD5... public List<AssetBundleData> AssetBundleDatas Field Value List<AssetBundleData> Properties Exists public static bool Exists { get; } Property Value bool Methods GetAssetBundleDataFromABName(string) public AssetBundleData GetAssetBundleDataFromABName(string abName) Parameters abName string Returns AssetBundleData GetAssetData(ResSearchKeys) Get an AssetData only by its name and type, does not need ownerBundleName public AssetData GetAssetData(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns AssetData GetDirectDependencies(string) public string[] GetDirectDependencies(string bundleName) Parameters bundleName string Returns string[] GetLoadOptionFromABName(string) public AssetBundleLoadOption GetLoadOptionFromABName(string abName) Parameters abName string Returns AssetBundleLoadOption Init(Action, Action<HotUpdateError>) Initialize the ResData singleton for hot-update public void Init(Action onFinished, Action<HotUpdateError> onInitError) Parameters onFinished Action onInitError Action<HotUpdateError> UpdateManifest() Re-update the manifest variable of ResData (called in HotUpdateManager, considered that some players may delete it) public void UpdateManifest()"
  },
  "api/MikroFramework.ResKit.ResDebugger.html": {
    "href": "api/MikroFramework.ResKit.ResDebugger.html",
    "title": "Class ResDebugger | Capstone documentation",
    "keywords": "Class ResDebugger Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResDebugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ResDebugger Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.ResKit.ResFactory.html": {
    "href": "api/MikroFramework.ResKit.ResFactory.html",
    "title": "Class ResFactory | Capstone documentation",
    "keywords": "Class ResFactory Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResFactory Inheritance object ResFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateRes(ResSearchKeys) Create a proper Res Object depends on assetName and assetBundleName For Resources asset: start with \"resources://\" For AssetBundle and its single asset: simply write AB file (asset) name For customized Res Class Object: Customize its create method by calling RegisterCustomRes() public static Res CreateRes(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns Res RegisterCustomRes(Func<ResSearchKeys, Res>) Register a customized resource creator in ResFactory public static void RegisterCustomRes(Func<ResSearchKeys, Res> customResCreator) Parameters customResCreator Func<ResSearchKeys, Res>"
  },
  "api/MikroFramework.ResKit.ResLoader.html": {
    "href": "api/MikroFramework.ResKit.ResLoader.html",
    "title": "Class ResLoader | Capstone documentation",
    "keywords": "Class ResLoader Namespace MikroFramework.ResKit Assembly MikroFramework.dll Use ResLoader.Create() instead to avoid bugs public class ResLoader : IUtility, IPoolable Inheritance object ResLoader Implements IUtility IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResLoader() Use ResLoader.Create() instead to avoid bugs public ResLoader() Properties IsReady public bool IsReady { get; } Property Value bool IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods Allocate() public static ResLoader Allocate() Returns ResLoader Create(Action<ResLoader>) Init and create a resloader. This may take some time. public static void Create(Action<ResLoader> onInitFinished) Parameters onInitFinished Action<ResLoader> LoadAsync<T>(string, Action<T>) Load an asset (internal supported: Resources and AssetBundle) to the memory asynchronously. Return the loaded asset. If the asset is already loaded somewhere else, it will not load again but only return the asset public void LoadAsync<T>(string assetPathOrName, Action<T> onLoaded) where T : Object Parameters assetPathOrName string onLoaded Action<T> Event triggered when loaded success Type Parameters T LoadAsync<T>(string, string, Action<T>) Load an asset from AssetBundle asynchronously, as well as the AssetBundle itself. Return the loaded asset. If the asset is already loaded somewhere else, it will not load again but only return the asset public void LoadAsync<T>(string assetBundleName, string assetName, Action<T> onLoaded) where T : Object Parameters assetBundleName string assetName string onLoaded Action<T> Event triggered when loaded success Type Parameters T LoadSync<T>(string) Load an asset (internal supported: Resources and AssetBundle) folder to the memory. Return the loaded asset. If the asset is already loaded somewhere else, it will not load again but only return the asset public T LoadSync<T>(string assetPathOrName) where T : Object Parameters assetPathOrName string for Resources assets: assetPathOrName must start with header \"resources://\" for AssetBundle assets: assetPath do not need a header for other customized assets: define them in ResFactory Returns T Type Parameters T LoadSync<T>(string, string) Load an asset from AssetBundle, as well as the AssetBundle itself. Return the loaded asset. If the asset is already loaded somewhere else, it will not load again but only return the asset public T LoadSync<T>(string assetBundleName, string assetName) where T : Object Parameters assetBundleName string assetName string Returns T Type Parameters T ReleaseAllAssets() Release all assets of this Resource Loader. This will not unload the same assets on other Resource Loaders public void ReleaseAllAssets()"
  },
  "api/MikroFramework.ResKit.ResManager.html": {
    "href": "api/MikroFramework.ResKit.ResManager.html",
    "title": "Class ResManager | Capstone documentation",
    "keywords": "Class ResManager Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResManager : ISingleton Inheritance object ResManager Implements ISingleton Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSimulationModeLogic get if the current project is in simulation mode it will always return false in RunTime build. SimulationMode makes you to \"load\" AssetBundles in UnityEditor without actually build AssetBundles public static bool IsSimulationModeLogic { get; } Property Value bool SharedLoadedResource public ResTable SharedLoadedResource { get; } Property Value ResTable singleton public static ResManager singleton { get; } Property Value ResManager Methods AddRes(Res) public static void AddRes(Res res) Parameters res Res GetRes(ResSearchKeys) public static Res GetRes(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns Res GetRes(string) Get a Res object from the manager by name public static Res GetRes(string resName) Parameters resName string Returns Res GetSharedLoadedRes() Get Global resource pool public static ResTable GetSharedLoadedRes() Returns ResTable RemoveSharedRes(Res) public static void RemoveSharedRes(Res res) Parameters res Res"
  },
  "api/MikroFramework.ResKit.ResRecycleHelper.html": {
    "href": "api/MikroFramework.ResKit.ResRecycleHelper.html",
    "title": "Class ResRecycleHelper | Capstone documentation",
    "keywords": "Class ResRecycleHelper Namespace MikroFramework.ResKit Assembly MikroFramework.dll public static class ResRecycleHelper Inheritance object ResRecycleHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RecycleToPool(Res) public static void RecycleToPool(Res res) Parameters res Res"
  },
  "api/MikroFramework.ResKit.ResSearchKeys.html": {
    "href": "api/MikroFramework.ResKit.ResSearchKeys.html",
    "title": "Class ResSearchKeys | Capstone documentation",
    "keywords": "Class ResSearchKeys Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResSearchKeys : IPoolable Inheritance object ResSearchKeys Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResSearchKeys() public ResSearchKeys() Properties Address Res Address (prefix + path) public string Address { get; } Property Value string IsRecycled public bool IsRecycled { get; set; } Property Value bool OwnerBundleName public string OwnerBundleName { get; } Property Value string ResType public Type ResType { get; } Property Value Type Methods Allocate(string, Type, string) public static ResSearchKeys Allocate(string address, Type resType, string ownerBundleName = null) Parameters address string resType Type ownerBundleName string Returns ResSearchKeys OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache()"
  },
  "api/MikroFramework.ResKit.ResState.html": {
    "href": "api/MikroFramework.ResKit.ResState.html",
    "title": "Enum ResState | Capstone documentation",
    "keywords": "Enum ResState Namespace MikroFramework.ResKit Assembly MikroFramework.dll public enum ResState Fields Loaded = 2 Asset loading success Loading = 1 Loading the asset Waiting = 0 Just created Res object, haven't loaded the asset yet"
  },
  "api/MikroFramework.ResKit.ResTable.html": {
    "href": "api/MikroFramework.ResKit.ResTable.html",
    "title": "Class ResTable | Capstone documentation",
    "keywords": "Class ResTable Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResTable : Table<Res>, IEnumerable<Res>, IEnumerable Inheritance object Table<Res> ResTable Implements IEnumerable<Res> IEnumerable Inherited Members Table<Res>.Items Table<Res>.Add(Res) Table<Res>.Add(IEnumerable<Res>) Table<Res>.Remove(Res) Table<Res>.Update() Table<Res>.Clear() Table<Res>.Get(Func<Res, bool>) Table<Res>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResTable() public ResTable() Properties NameIndex public TableIndex<string, Res> NameIndex { get; } Property Value TableIndex<string, Res> Methods GetResWithSearchKeys(ResSearchKeys) public Res GetResWithSearchKeys(ResSearchKeys resSearchKeys) Parameters resSearchKeys ResSearchKeys Returns Res OnAdd(Res) Add your logic for adding your customized index here public override void OnAdd(Res item) Parameters item Res OnClear() Triggered when the table is cleared protected override void OnClear() OnRemove(Res) Add your logic for removing your customized index here public override void OnRemove(Res item) Parameters item Res"
  },
  "api/MikroFramework.ResKit.ResVersion.html": {
    "href": "api/MikroFramework.ResKit.ResVersion.html",
    "title": "Class ResVersion | Capstone documentation",
    "keywords": "Class ResVersion Namespace MikroFramework.ResKit Assembly MikroFramework.dll [Serializable] public class ResVersion Inheritance object ResVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ABMD5List public List<ABMD5Base> ABMD5List Field Value List<ABMD5Base> Version public string Version Field Value string"
  },
  "api/MikroFramework.ResKit.ResourcesRes.html": {
    "href": "api/MikroFramework.ResKit.ResourcesRes.html",
    "title": "Class ResourcesRes | Capstone documentation",
    "keywords": "Class ResourcesRes Namespace MikroFramework.ResKit Assembly MikroFramework.dll public class ResourcesRes : Res, IRefCounter, IPoolable Inheritance object SimpleRC Res ResourcesRes Implements IRefCounter IPoolable Inherited Members Res.State Res.Asset Res.Name Res.AssetPath Res.ResType Res.OnZeroRef() Res.MatchResSearchKeysWithoutName(ResSearchKeys) Res.RegisterOnLoadedEvent(Action<Res>) Res.UnRegisterOnLoadedEvent(Action<Res>) Res.OnRecycled() Res.IsRecycled SimpleRC.RefCount SimpleRC.Release(object) SimpleRC.Retain(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Allocate(string, Type) Allocate a ResourceRes object from the object pool public static ResourcesRes Allocate(string assetPath, Type resType) Parameters assetPath string resType Type Returns ResourcesRes LoadAsync() Load the resource asynchronously public override void LoadAsync() LoadSync() Load the resource public override bool LoadSync() Returns bool OnReleaseRes() Unload this resource protected override void OnReleaseRes() RecycleToCache() public override void RecycleToCache()"
  },
  "api/MikroFramework.ResKit.html": {
    "href": "api/MikroFramework.ResKit.html",
    "title": "Namespace MikroFramework.ResKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.ResKit Classes ABMD5Base AssetBundleData Data of an AssetBundle AssetBundleRes AssetData Data of an asset in an AssetBundle AssetRes Single resource that loaded from a AssetBundle. DefaultPoolableGameObject HotUpdateConfig HotUpdateDownloader HotUpdateManager Res Class that Load and Unload a specific Resource, inherited by ResourceRes, Assetbundle Res and AssetRes Inherit this class to customize your resource loader. ResData Class that manage Project AB Manifest and saves all AB's load path (from local or hot-update manager) ResDebugger ResFactory ResLoader Use ResLoader.Create() instead to avoid bugs ResManager ResRecycleHelper ResSearchKeys ResTable ResVersion ResourcesRes Interfaces IHotUpdateDownloader IHotUpdateManager Enums AssetBundleLoadOption HotUpdateError HotUpdateState ResState"
  },
  "api/MikroFramework.ResetAction.html": {
    "href": "api/MikroFramework.ResetAction.html",
    "title": "Class ResetAction | Capstone documentation",
    "keywords": "Class ResetAction Namespace MikroFramework Assembly MikroFramework.dll public class ResetAction : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction ResetAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.OnDispose() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(MikroAction, Action) public static ResetAction Allocate(MikroAction resetAction, Action onReset = null) Parameters resetAction MikroAction onReset Action Returns ResetAction OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool()"
  },
  "api/MikroFramework.ResetExample.html": {
    "href": "api/MikroFramework.ResetExample.html",
    "title": "Class ResetExample | Capstone documentation",
    "keywords": "Class ResetExample Namespace MikroFramework Assembly MikroFramework.dll public class ResetExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ResetExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.SceneEntranceKit.EntranceManager.html": {
    "href": "api/MikroFramework.SceneEntranceKit.EntranceManager.html",
    "title": "Class EntranceManager | Capstone documentation",
    "keywords": "Class EntranceManager Namespace MikroFramework.SceneEntranceKit Assembly MikroFramework.dll public abstract class EntranceManager : ManagerBehavior, IManager Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior EntranceManager Implements IManager Derived GameModule HomeModule HotUpdateEntranceManager Inherited Members ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields environmentMode [SerializeField] protected EnvironmentMode environmentMode Field Value EnvironmentMode Properties EnvironmentMode public EnvironmentMode EnvironmentMode { get; } Property Value EnvironmentMode Methods LaunchInDevelopingMode() Code in Developing Mode will only run at the development phrase of the project protected abstract void LaunchInDevelopingMode() LaunchInReleasedMode() Code in Released Mode will only run at the released phrase of the project protected abstract void LaunchInReleasedMode() LaunchInTestingMode() Code in Testing Mode will only run at the testing phrase of the project protected abstract void LaunchInTestingMode()"
  },
  "api/MikroFramework.SceneEntranceKit.EnvironmentMode.html": {
    "href": "api/MikroFramework.SceneEntranceKit.EnvironmentMode.html",
    "title": "Enum EnvironmentMode | Capstone documentation",
    "keywords": "Enum EnvironmentMode Namespace MikroFramework.SceneEntranceKit Assembly MikroFramework.dll public enum EnvironmentMode Fields Developing = 0 Released = 2 Testing = 1"
  },
  "api/MikroFramework.SceneEntranceKit.html": {
    "href": "api/MikroFramework.SceneEntranceKit.html",
    "title": "Namespace MikroFramework.SceneEntranceKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.SceneEntranceKit Classes EntranceManager Enums EnvironmentMode"
  },
  "api/MikroFramework.Serializer.AdvancedJsonSerializer.html": {
    "href": "api/MikroFramework.Serializer.AdvancedJsonSerializer.html",
    "title": "Class AdvancedJsonSerializer | Capstone documentation",
    "keywords": "Class AdvancedJsonSerializer Namespace MikroFramework.Serializer Assembly MikroFramework.dll AdvancedJsonSerializer is based on Newtonsoft.Json. It works well with List, Dictionary, and Generic types public class AdvancedJsonSerializer : MikroSingleton<AdvancedJsonSerializer>, ISingleton, IJsonSerializer, IUtility Inheritance object MikroSingleton<AdvancedJsonSerializer> AdvancedJsonSerializer Implements ISingleton IJsonSerializer IUtility Inherited Members MikroSingleton<AdvancedJsonSerializer>.instance MikroSingleton<AdvancedJsonSerializer>.Singleton MikroSingleton<AdvancedJsonSerializer>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Deserialize<T>(string) Deserialize an object from Json public T Deserialize<T>(string json) where T : class Parameters json string Returns T Type Parameters T Serialize<T>(T) Serialize an object to Json public string Serialize<T>(T obj) where T : class Parameters obj T Returns string Type Parameters T"
  },
  "api/MikroFramework.Serializer.DefaultJsonSerializer.html": {
    "href": "api/MikroFramework.Serializer.DefaultJsonSerializer.html",
    "title": "Class DefaultJsonSerializer | Capstone documentation",
    "keywords": "Class DefaultJsonSerializer Namespace MikroFramework.Serializer Assembly MikroFramework.dll Default Json Serializer uses JsonUtility to serialize objects. This can accomplish most Serialization task, but it does not work well with classes that contains List, Dictionary, or Generic types. Use AdvanceJsonSerializer if you want to serialize those types. public class DefaultJsonSerializer : MikroSingleton<DefaultJsonSerializer>, ISingleton, IJsonSerializer, IUtility Inheritance object MikroSingleton<DefaultJsonSerializer> DefaultJsonSerializer Implements ISingleton IJsonSerializer IUtility Inherited Members MikroSingleton<DefaultJsonSerializer>.instance MikroSingleton<DefaultJsonSerializer>.Singleton MikroSingleton<DefaultJsonSerializer>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Deserialize<T>(string) Deserialize an object from Json public T Deserialize<T>(string json) where T : class Parameters json string Returns T Type Parameters T Serialize<T>(T) Serialize an object to Json public string Serialize<T>(T obj) where T : class Parameters obj T Returns string Type Parameters T"
  },
  "api/MikroFramework.Serializer.IJsonSerializer.html": {
    "href": "api/MikroFramework.Serializer.IJsonSerializer.html",
    "title": "Interface IJsonSerializer | Capstone documentation",
    "keywords": "Interface IJsonSerializer Namespace MikroFramework.Serializer Assembly MikroFramework.dll public interface IJsonSerializer : IUtility Methods Deserialize<T>(string) Deserialize an object from Json T Deserialize<T>(string json) where T : class Parameters json string Returns T Type Parameters T Serialize<T>(T) Serialize an object to Json string Serialize<T>(T obj) where T : class Parameters obj T Returns string Type Parameters T"
  },
  "api/MikroFramework.Serializer.html": {
    "href": "api/MikroFramework.Serializer.html",
    "title": "Namespace MikroFramework.Serializer | Capstone documentation",
    "keywords": "Namespace MikroFramework.Serializer Classes AdvancedJsonSerializer AdvancedJsonSerializer is based on Newtonsoft.Json. It works well with List, Dictionary, and Generic types DefaultJsonSerializer Default Json Serializer uses JsonUtility to serialize objects. This can accomplish most Serialization task, but it does not work well with classes that contains List, Dictionary, or Generic types. Use AdvanceJsonSerializer if you want to serialize those types. Interfaces IJsonSerializer"
  },
  "api/MikroFramework.ServiceLocator.AbstractInitialContext.html": {
    "href": "api/MikroFramework.ServiceLocator.AbstractInitialContext.html",
    "title": "Class AbstractInitialContext | Capstone documentation",
    "keywords": "Class AbstractInitialContext Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public abstract class AbstractInitialContext Inheritance object AbstractInitialContext Derived InitialContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LookUp(string) Try to find a service public abstract IService LookUp(string name) Parameters name string Returns IService"
  },
  "api/MikroFramework.ServiceLocator.AbstractModuleLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.AbstractModuleLayer.html",
    "title": "Class AbstractModuleLayer | Capstone documentation",
    "keywords": "Class AbstractModuleLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public abstract class AbstractModuleLayer : IModuleLayer Inheritance object AbstractModuleLayer Implements IModuleLayer Derived BusinessModuleLayer LogicLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbstractModuleLayer() public AbstractModuleLayer() Properties factory protected abstract AssemblyModuleFactory factory { get; } Property Value AssemblyModuleFactory Methods GetModule<T>() public T GetModule<T>() where T : class Returns T Type Parameters T"
  },
  "api/MikroFramework.ServiceLocator.AssemblyModuleFactory.html": {
    "href": "api/MikroFramework.ServiceLocator.AssemblyModuleFactory.html",
    "title": "Class AssemblyModuleFactory | Capstone documentation",
    "keywords": "Class AssemblyModuleFactory Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll A default assembly module factory. Elements in this module must inherit a baseModuleType (like an interface). This factory ONLY create module elements by type public class AssemblyModuleFactory : IModuleFactory Inheritance object AssemblyModuleFactory Implements IModuleFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AssemblyModuleFactory(Assembly, Type) public AssemblyModuleFactory(Assembly assembly, Type baseModuleType) Parameters assembly Assembly baseModuleType Type Methods CreateAllModules() Returns all modules of Type concreteTypeCache public object CreateAllModules() Returns object CreateModule(ModuleSearchKeys) public object CreateModule(ModuleSearchKeys keys) Parameters keys ModuleSearchKeys Returns object"
  },
  "api/MikroFramework.ServiceLocator.Cache.html": {
    "href": "api/MikroFramework.ServiceLocator.Cache.html",
    "title": "Class Cache | Capstone documentation",
    "keywords": "Class Cache Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public class Cache Inheritance object Cache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddService(IService) public void AddService(IService service) Parameters service IService GetService(string) public IService GetService(string serviceName) Parameters serviceName string Returns IService"
  },
  "api/MikroFramework.ServiceLocator.DefaultModuleCache.html": {
    "href": "api/MikroFramework.ServiceLocator.DefaultModuleCache.html",
    "title": "Class DefaultModuleCache | Capstone documentation",
    "keywords": "Class DefaultModuleCache Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public class DefaultModuleCache : IModuleCache Inheritance object DefaultModuleCache Implements IModuleCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddModule(ModuleSearchKeys, object) Add a module, given the module and its search keys public void AddModule(ModuleSearchKeys keys, object module) Parameters keys ModuleSearchKeys module object GetAllModules() Get all modules public object GetAllModules() Returns object GetModule(ModuleSearchKeys) Get a module from search keys public object GetModule(ModuleSearchKeys keys) Parameters keys ModuleSearchKeys Returns object"
  },
  "api/MikroFramework.ServiceLocator.IArchitecture.html": {
    "href": "api/MikroFramework.ServiceLocator.IArchitecture.html",
    "title": "Interface IArchitecture | Capstone documentation",
    "keywords": "Interface IArchitecture Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IArchitecture Properties BasicModuleLayer Basic Modules, such as Log and third-party plugins, such as DOTween and BestHTTP IBasicModuleLayer BasicModuleLayer { get; } Property Value IBasicModuleLayer BusinessModuleLayer IBusinessModuleLayer BusinessModuleLayer { get; } Property Value IBusinessModuleLayer LogicLayer ILogicLayer LogicLayer { get; } Property Value ILogicLayer PublicModuleLayer Modules that serve as solutions for specific problems. Such as UIManager, ResManager... IPublicModuleLayer PublicModuleLayer { get; } Property Value IPublicModuleLayer UtilityLayer Tools that do not need to manage data. Such as JsonSerializer IUtilityLayer UtilityLayer { get; } Property Value IUtilityLayer"
  },
  "api/MikroFramework.ServiceLocator.IBasicModuleLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.IBasicModuleLayer.html",
    "title": "Interface IBasicModuleLayer | Capstone documentation",
    "keywords": "Interface IBasicModuleLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IBasicModuleLayer : IModuleLayer Inherited Members IModuleLayer.GetModule<T>()"
  },
  "api/MikroFramework.ServiceLocator.IBusinessModuleLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.IBusinessModuleLayer.html",
    "title": "Interface IBusinessModuleLayer | Capstone documentation",
    "keywords": "Interface IBusinessModuleLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IBusinessModuleLayer : IModuleLayer Inherited Members IModuleLayer.GetModule<T>()"
  },
  "api/MikroFramework.ServiceLocator.ILogicLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.ILogicLayer.html",
    "title": "Interface ILogicLayer | Capstone documentation",
    "keywords": "Interface ILogicLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface ILogicLayer : IModuleLayer Inherited Members IModuleLayer.GetModule<T>()"
  },
  "api/MikroFramework.ServiceLocator.IModuleCache.html": {
    "href": "api/MikroFramework.ServiceLocator.IModuleCache.html",
    "title": "Interface IModuleCache | Capstone documentation",
    "keywords": "Interface IModuleCache Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IModuleCache Methods AddModule(ModuleSearchKeys, object) Add a module, given the module and its search keys void AddModule(ModuleSearchKeys keys, object module) Parameters keys ModuleSearchKeys module object GetAllModules() Get all modules object GetAllModules() Returns object GetModule(ModuleSearchKeys) Get a module from search keys object GetModule(ModuleSearchKeys keys) Parameters keys ModuleSearchKeys Returns object"
  },
  "api/MikroFramework.ServiceLocator.IModuleFactory.html": {
    "href": "api/MikroFramework.ServiceLocator.IModuleFactory.html",
    "title": "Interface IModuleFactory | Capstone documentation",
    "keywords": "Interface IModuleFactory Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IModuleFactory Methods CreateAllModules() object CreateAllModules() Returns object CreateModule(ModuleSearchKeys) object CreateModule(ModuleSearchKeys keys) Parameters keys ModuleSearchKeys Returns object"
  },
  "api/MikroFramework.ServiceLocator.IModuleLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.IModuleLayer.html",
    "title": "Interface IModuleLayer | Capstone documentation",
    "keywords": "Interface IModuleLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IModuleLayer Methods GetModule<T>() T GetModule<T>() where T : class Returns T Type Parameters T"
  },
  "api/MikroFramework.ServiceLocator.IPublicModuleLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.IPublicModuleLayer.html",
    "title": "Interface IPublicModuleLayer | Capstone documentation",
    "keywords": "Interface IPublicModuleLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IPublicModuleLayer : IModuleLayer Inherited Members IModuleLayer.GetModule<T>()"
  },
  "api/MikroFramework.ServiceLocator.IService.html": {
    "href": "api/MikroFramework.ServiceLocator.IService.html",
    "title": "Interface IService | Capstone documentation",
    "keywords": "Interface IService Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IService Properties Name string Name { get; } Property Value string Methods Execute() void Execute()"
  },
  "api/MikroFramework.ServiceLocator.IUtilityLayer.html": {
    "href": "api/MikroFramework.ServiceLocator.IUtilityLayer.html",
    "title": "Interface IUtilityLayer | Capstone documentation",
    "keywords": "Interface IUtilityLayer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public interface IUtilityLayer : IModuleLayer Inherited Members IModuleLayer.GetModule<T>()"
  },
  "api/MikroFramework.ServiceLocator.ModuleContainer.html": {
    "href": "api/MikroFramework.ServiceLocator.ModuleContainer.html",
    "title": "Class ModuleContainer | Capstone documentation",
    "keywords": "Class ModuleContainer Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public class ModuleContainer Inheritance object ModuleContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ModuleContainer(IModuleCache, IModuleFactory) public ModuleContainer(IModuleCache cache, IModuleFactory factory) Parameters cache IModuleCache factory IModuleFactory Methods GetAllModules<T>() Get or create all modules by its type from the container, return those modules public IEnumerable<T> GetAllModules<T>() where T : class Returns IEnumerable<T> Type Parameters T GetModule<T>() Get or Create a module by its type from the container, return the module public T GetModule<T>() where T : class Returns T Type Parameters T"
  },
  "api/MikroFramework.ServiceLocator.ServiceLocator.html": {
    "href": "api/MikroFramework.ServiceLocator.ServiceLocator.html",
    "title": "Class ServiceLocator | Capstone documentation",
    "keywords": "Class ServiceLocator Namespace MikroFramework.ServiceLocator Assembly MikroFramework.dll public class ServiceLocator Inheritance object ServiceLocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ServiceLocator(AbstractInitialContext) public ServiceLocator(AbstractInitialContext context) Parameters context AbstractInitialContext Methods GetService(string) Get a service from cache or create and get the service by the InitialContext public IService GetService(string name) Parameters name string Returns IService"
  },
  "api/MikroFramework.ServiceLocator.html": {
    "href": "api/MikroFramework.ServiceLocator.html",
    "title": "Namespace MikroFramework.ServiceLocator | Capstone documentation",
    "keywords": "Namespace MikroFramework.ServiceLocator Classes AbstractInitialContext AbstractModuleLayer AssemblyModuleFactory A default assembly module factory. Elements in this module must inherit a baseModuleType (like an interface). This factory ONLY create module elements by type Cache DefaultModuleCache ModuleContainer ServiceLocator Interfaces IArchitecture IBasicModuleLayer IBusinessModuleLayer ILogicLayer IModuleCache IModuleFactory IModuleLayer IPublicModuleLayer IService IUtilityLayer"
  },
  "api/MikroFramework.SettingsPanel.html": {
    "href": "api/MikroFramework.SettingsPanel.html",
    "title": "Class SettingsPanel | Capstone documentation",
    "keywords": "Class SettingsPanel Namespace MikroFramework Assembly MikroFramework.dll public class SettingsPanel : AbstractPanelContainer, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer SettingsPanel Implements IPanelContainer IPanel Inherited Members AbstractPanelContainer.Parent AbstractPanelContainer.Children AbstractPanelContainer.GetTopChild() AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.SimplifiedChainActionsExample.html": {
    "href": "api/MikroFramework.SimplifiedChainActionsExample.html",
    "title": "Class SimplifiedChainActionsExample | Capstone documentation",
    "keywords": "Class SimplifiedChainActionsExample Namespace MikroFramework Assembly MikroFramework.dll public class SimplifiedChainActionsExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SimplifiedChainActionsExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Singletons.ISingleton.html": {
    "href": "api/MikroFramework.Singletons.ISingleton.html",
    "title": "Interface ISingleton | Capstone documentation",
    "keywords": "Interface ISingleton Namespace MikroFramework.Singletons Assembly MikroFramework.dll public interface ISingleton Methods OnSingletonInit() void OnSingletonInit()"
  },
  "api/MikroFramework.Singletons.MikroSingleton-1.html": {
    "href": "api/MikroFramework.Singletons.MikroSingleton-1.html",
    "title": "Class MikroSingleton<T> | Capstone documentation",
    "keywords": "Class MikroSingleton<T> Namespace MikroFramework.Singletons Assembly MikroFramework.dll Inherit MikroSingleton for singletons that do not need to inherit MonoBehavior; Use MonoMikroSingleton for singletons to inherit MonoBehavior public abstract class MikroSingleton<T> : ISingleton where T : MikroSingleton<T> Type Parameters T Inheritance object MikroSingleton<T> Implements ISingleton Derived ActionPlayer MySQLDatabaseManager MySQLExecuter NHibernateTableManager<T> SingletonExample ResData AdvancedJsonSerializer DefaultJsonSerializer ControlInfoFactory ResourceVCFactory ConfigDatas SerializationFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields instance protected static T instance Field Value T Properties Singleton public static T Singleton { get; } Property Value T Methods OnSingletonInit() public virtual void OnSingletonInit()"
  },
  "api/MikroFramework.Singletons.MonoMikroSingleton-1.html": {
    "href": "api/MikroFramework.Singletons.MonoMikroSingleton-1.html",
    "title": "Class MonoMikroSingleton<T> | Capstone documentation",
    "keywords": "Class MonoMikroSingleton<T> Namespace MikroFramework.Singletons Assembly MikroFramework.dll Use MonoMikroSingleton for singletons to inherit MonoBehavior public abstract class MonoMikroSingleton<T> : MikroBehavior, ISingleton where T : MonoMikroSingleton<T> Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<T> Implements ISingleton Derived SlotItemDragCanvas MonoMikroSingletonExample MonoSingletonPathExample.ConfigManager MonoSingletonPathExample.GameManager MonoSingletonPathExample.ResManager MonoSingletonPathExample.SoundManager GameObjectPoolManager MonoPersistentMikroSingleton<T> ClientInput CoroutineRunner Crosshair Inherited Members MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields instance protected static T instance Field Value T onApplicationQuit protected static bool onApplicationQuit Field Value bool Properties Exists Get if the singleton exists in the game public static bool Exists { get; } Property Value bool IsApplicationQuit public static bool IsApplicationQuit { get; } Property Value bool Singleton public static T Singleton { get; } Property Value T Methods OnApplicationQuit() protected virtual void OnApplicationQuit() OnBeforeDestroy() Use this method instead of Destroy() protected override void OnBeforeDestroy() OnSingletonInit() public virtual void OnSingletonInit()"
  },
  "api/MikroFramework.Singletons.MonoPersistentMikroSingleton-1.html": {
    "href": "api/MikroFramework.Singletons.MonoPersistentMikroSingleton-1.html",
    "title": "Class MonoPersistentMikroSingleton<T> | Capstone documentation",
    "keywords": "Class MonoPersistentMikroSingleton<T> Namespace MikroFramework.Singletons Assembly MikroFramework.dll Use MonoMikroSingleton for persistent singletons to inherit MonoBehavior public abstract class MonoPersistentMikroSingleton<T> : MonoMikroSingleton<T>, ISingleton where T : MonoPersistentMikroSingleton<T> Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<T> MonoPersistentMikroSingleton<T> Implements ISingleton Derived UpdateActionExecutor.ActionKitUpdateTrigger AudioSystem MonoSingletonPathExample.NetworkManager MonoSingletonPathExample.UIManager CoroutineRunner Inherited Members MonoMikroSingleton<T>.Exists MonoMikroSingleton<T>.OnBeforeDestroy() MonoMikroSingleton<T>.OnSingletonInit() MonoMikroSingleton<T>.onApplicationQuit MonoMikroSingleton<T>.IsApplicationQuit MonoMikroSingleton<T>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields instance protected static T instance Field Value T Properties Singleton public static T Singleton { get; } Property Value T"
  },
  "api/MikroFramework.Singletons.MonoSingletonPath.html": {
    "href": "api/MikroFramework.Singletons.MonoSingletonPath.html",
    "title": "Class MonoSingletonPath | Capstone documentation",
    "keywords": "Class MonoSingletonPath Namespace MikroFramework.Singletons Assembly MikroFramework.dll public class MonoSingletonPath : Attribute, _Attribute Inheritance object Attribute MonoSingletonPath Implements _Attribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MonoSingletonPath(string) public MonoSingletonPath(string pathInHierarchy) Parameters pathInHierarchy string Properties PathInHierarchy public string PathInHierarchy { get; } Property Value string"
  },
  "api/MikroFramework.Singletons.SingletonCreator.html": {
    "href": "api/MikroFramework.Singletons.SingletonCreator.html",
    "title": "Class SingletonCreator | Capstone documentation",
    "keywords": "Class SingletonCreator Namespace MikroFramework.Singletons Assembly MikroFramework.dll Helper class, create non-mono and mono singletons public static class SingletonCreator Inheritance object SingletonCreator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateMonoSingleton<T>(bool) public static T CreateMonoSingleton<T>(bool dontDestroyOnLoad) where T : class, ISingleton Parameters dontDestroyOnLoad bool Returns T Type Parameters T CreateSingleton<T>() public static T CreateSingleton<T>() where T : class, ISingleton Returns T Type Parameters T"
  },
  "api/MikroFramework.Singletons.SingletonProperty-1.html": {
    "href": "api/MikroFramework.Singletons.SingletonProperty-1.html",
    "title": "Class SingletonProperty<T> | Capstone documentation",
    "keywords": "Class SingletonProperty<T> Namespace MikroFramework.Singletons Assembly MikroFramework.dll Declare a singleton property for a class if the class can't inherit MikroSingleton. (The created instance have DontDestroyOnLoad public static class SingletonProperty<T> where T : class, ISingleton Type Parameters T Inheritance object SingletonProperty<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Singleton public static T Singleton { get; } Property Value T"
  },
  "api/MikroFramework.Singletons.html": {
    "href": "api/MikroFramework.Singletons.html",
    "title": "Namespace MikroFramework.Singletons | Capstone documentation",
    "keywords": "Namespace MikroFramework.Singletons Classes MikroSingleton<T> Inherit MikroSingleton for singletons that do not need to inherit MonoBehavior; Use MonoMikroSingleton for singletons to inherit MonoBehavior MonoMikroSingleton<T> Use MonoMikroSingleton for singletons to inherit MonoBehavior MonoPersistentMikroSingleton<T> Use MonoMikroSingleton for persistent singletons to inherit MonoBehavior MonoSingletonPath SingletonCreator Helper class, create non-mono and mono singletons SingletonProperty<T> Declare a singleton property for a class if the class can't inherit MikroSingleton. (The created instance have DontDestroyOnLoad Interfaces ISingleton"
  },
  "api/MikroFramework.StartGameCommand.html": {
    "href": "api/MikroFramework.StartGameCommand.html",
    "title": "Class StartGameCommand | Capstone documentation",
    "keywords": "Class StartGameCommand Namespace MikroFramework Assembly MikroFramework.dll public class StartGameCommand : AbstractCommand<StartGameCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<StartGameCommand> StartGameCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<StartGameCommand>.AutoRecycle AbstractCommand<StartGameCommand>.OnRecycled() AbstractCommand<StartGameCommand>.IsRecycled AbstractCommand<StartGameCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/MikroFramework.SuperNestedActionsExample.html": {
    "href": "api/MikroFramework.SuperNestedActionsExample.html",
    "title": "Class SuperNestedActionsExample | Capstone documentation",
    "keywords": "Class SuperNestedActionsExample Namespace MikroFramework Assembly MikroFramework.dll public class SuperNestedActionsExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SuperNestedActionsExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields timer public float timer Field Value float"
  },
  "api/MikroFramework.TimeSystem.DelayTask.html": {
    "href": "api/MikroFramework.TimeSystem.DelayTask.html",
    "title": "Class DelayTask | Capstone documentation",
    "keywords": "Class DelayTask Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public class DelayTask Inheritance object DelayTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentLoopCount public int CurrentLoopCount { get; set; } Property Value int FinishSeconds public float FinishSeconds { get; set; } Property Value float MaxLoopCount public int MaxLoopCount { get; set; } Property Value int OnFinish public Action OnFinish { get; set; } Property Value Action Seconds public float Seconds { get; set; } Property Value float StartSeconds public float StartSeconds { get; set; } Property Value float State public DelayTaskState State { get; set; } Property Value DelayTaskState"
  },
  "api/MikroFramework.TimeSystem.DelayTaskState.html": {
    "href": "api/MikroFramework.TimeSystem.DelayTaskState.html",
    "title": "Enum DelayTaskState | Capstone documentation",
    "keywords": "Enum DelayTaskState Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public enum DelayTaskState Fields Finished = 2 NotStart = 0 Started = 1"
  },
  "api/MikroFramework.TimeSystem.ITimeSystem.html": {
    "href": "api/MikroFramework.TimeSystem.ITimeSystem.html",
    "title": "Interface ITimeSystem | Capstone documentation",
    "keywords": "Interface ITimeSystem Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public interface ITimeSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Properties CurrentSeconds float CurrentSeconds { get; } Property Value float Methods AddDelayTask(float, Action) ITimeSystem AddDelayTask(float seconds, Action onFinished) Parameters seconds float onFinished Action Returns ITimeSystem AddDelayTask(float, Action, TimerUnit, int) ITimeSystem AddDelayTask(float delay, Action onFinished, TimerUnit timerUnit = TimerUnit.Second, int loopCount = 1) Parameters delay float onFinished Action timerUnit TimerUnit loopCount int Returns ITimeSystem Pause() void Pause() Reset() Reset means clear all tasks associated with this timer. Timer will be reset to 0 as well void Reset() Restart() Restart means restart the timer as well as all tasks. Repeated tasks will also be reset void Restart() Start() If the timer is paused, resume it. If the timer is not paused, do nothing void Start()"
  },
  "api/MikroFramework.TimeSystem.TimeSystem.TimeSystemUpdate.html": {
    "href": "api/MikroFramework.TimeSystem.TimeSystem.TimeSystemUpdate.html",
    "title": "Class TimeSystem.TimeSystemUpdate | Capstone documentation",
    "keywords": "Class TimeSystem.TimeSystemUpdate Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public class TimeSystem.TimeSystemUpdate : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TimeSystem.TimeSystemUpdate Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Events OnUpdate public event Action OnUpdate Event Type Action"
  },
  "api/MikroFramework.TimeSystem.TimeSystem.html": {
    "href": "api/MikroFramework.TimeSystem.TimeSystem.html",
    "title": "Class TimeSystem | Capstone documentation",
    "keywords": "Class TimeSystem Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public class TimeSystem : AbstractSystem, ITimeSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem TimeSystem Implements ITimeSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Constructors TimeSystem() public TimeSystem() Properties CurrentSeconds public float CurrentSeconds { get; } Property Value float IsStart public bool IsStart { get; } Property Value bool Methods AddDelayTask(float, Action) [Obsolete(\"AddDelayTask() with two parameters is obsolete, use the one with three parameters instead\")] public ITimeSystem AddDelayTask(float seconds, Action onFinished) Parameters seconds float onFinished Action Returns ITimeSystem AddDelayTask(float, Action, TimerUnit, int) public ITimeSystem AddDelayTask(float delay, Action onFinished, TimerUnit timerUnit = TimerUnit.Second, int loopCount = 1) Parameters delay float onFinished Action timerUnit TimerUnit loopCount int Use -1 for infinite loop count Returns ITimeSystem OnInit() protected override void OnInit() Pause() Pause the timer public void Pause() Reset() Reset means clear all tasks associated with this timer. Timer will be reset to 0 as well public void Reset() Restart() Reset the timer public void Restart() Start() Start or resume the timer public void Start()"
  },
  "api/MikroFramework.TimeSystem.TimerUnit.html": {
    "href": "api/MikroFramework.TimeSystem.TimerUnit.html",
    "title": "Enum TimerUnit | Capstone documentation",
    "keywords": "Enum TimerUnit Namespace MikroFramework.TimeSystem Assembly MikroFramework.dll public enum TimerUnit Fields Day = 4 Hour = 3 Millisecond = 0 Minute = 2 Second = 1"
  },
  "api/MikroFramework.TimeSystem.html": {
    "href": "api/MikroFramework.TimeSystem.html",
    "title": "Namespace MikroFramework.TimeSystem | Capstone documentation",
    "keywords": "Namespace MikroFramework.TimeSystem Classes DelayTask TimeSystem TimeSystem.TimeSystemUpdate Interfaces ITimeSystem Enums DelayTaskState TimerUnit"
  },
  "api/MikroFramework.TimeSystemRepeatedExample.html": {
    "href": "api/MikroFramework.TimeSystemRepeatedExample.html",
    "title": "Class TimeSystemRepeatedExample | Capstone documentation",
    "keywords": "Class TimeSystemRepeatedExample Namespace MikroFramework Assembly MikroFramework.dll public class TimeSystemRepeatedExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TimeSystemRepeatedExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UI.html": {
    "href": "api/MikroFramework.UI.html",
    "title": "Class UI | Capstone documentation",
    "keywords": "Class UI Namespace MikroFramework Assembly MikroFramework.dll public class UI : AbstractMikroController<PointGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<PointGame> UI Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanRegisterEventExtension.RegisterEvent<T>(ICanRegisterEvent, Action<T>) CanRegisterEventExtension.UnRegisterEvent<T>(ICanRegisterEvent, Action<T>) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UIKit.AbstractPanel.html": {
    "href": "api/MikroFramework.UIKit.AbstractPanel.html",
    "title": "Class AbstractPanel | Capstone documentation",
    "keywords": "Class AbstractPanel Namespace MikroFramework.UIKit Assembly MikroFramework.dll public abstract class AbstractPanel : MonoBehaviour, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel Implements IPanel Derived AbstractPanelContainer InventoryUIViewController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties DefaultSelectedGameObjectWhenFocused For XBoxController and GamePads: use this to assign a default selected game object when the panel is changed to be the top panel. Can leave as null public GameObject DefaultSelectedGameObjectWhenFocused { get; set; } Property Value GameObject IsOpening public bool IsOpening { get; set; } Property Value bool PanelType public PanelType PanelType { get; set; } Property Value PanelType Parent Every panel has a parent. The parent of all panels are UIRoot public IPanelContainer Parent { get; set; } Property Value IPanelContainer Methods IsOnTop() Return true if the panel is on the highest level among all UI (at the top of the stack) public bool IsOnTop() Returns bool OnClosed() Called on the point when the panel is closed public abstract void OnClosed() OnFocused() Called at the point when the panel is on top public virtual void OnFocused() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public abstract void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public abstract void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.UIKit.AbstractPanelContainer.html": {
    "href": "api/MikroFramework.UIKit.AbstractPanelContainer.html",
    "title": "Class AbstractPanelContainer | Capstone documentation",
    "keywords": "Class AbstractPanelContainer Namespace MikroFramework.UIKit Assembly MikroFramework.dll public abstract class AbstractPanelContainer : AbstractPanel, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel AbstractPanelContainer Implements IPanelContainer IPanel Derived AboutPanel LoadPanel MenuPanel OpenFilesPanel SettingsPanel Inherited Members AbstractPanel.IsOnTop() AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() AbstractPanel.OnInit() AbstractPanel.OnOpen(UIMsg) AbstractPanel.OnClosed() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Children public List<IPanel> Children { get; } Property Value List<IPanel> Parent Every panel has a parent. The parent of all panels are UIRoot public IPanelContainer Parent { get; set; } Property Value IPanelContainer Methods GetTopChild() public IPanel GetTopChild() Returns IPanel"
  },
  "api/MikroFramework.UIKit.DefaultUISettings.html": {
    "href": "api/MikroFramework.UIKit.DefaultUISettings.html",
    "title": "Struct DefaultUISettings | Capstone documentation",
    "keywords": "Struct DefaultUISettings Namespace MikroFramework.UIKit Assembly MikroFramework.dll public struct DefaultUISettings Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors DefaultUISettings(Vector2, float) public DefaultUISettings(Vector2 referenceResolution, float matchWidthOrHeight) Parameters referenceResolution Vector2 matchWidthOrHeight float Fields MatchWidthOrHeight public float MatchWidthOrHeight Field Value float ReferenceResolution public Vector2 ReferenceResolution Field Value Vector2"
  },
  "api/MikroFramework.UIKit.IPanel.html": {
    "href": "api/MikroFramework.UIKit.IPanel.html",
    "title": "Interface IPanel | Capstone documentation",
    "keywords": "Interface IPanel Namespace MikroFramework.UIKit Assembly MikroFramework.dll public interface IPanel Properties DefaultSelectedGameObjectWhenFocused For XBoxController and GamePads: use this to assign a default selected game object when the panel is changed to be the top panel. Can leave as null GameObject DefaultSelectedGameObjectWhenFocused { get; } Property Value GameObject IsOpening bool IsOpening { get; set; } Property Value bool PanelType PanelType PanelType { get; } Property Value PanelType Parent Every panel has a parent. The parent of all panels are UIRoot IPanelContainer Parent { get; set; } Property Value IPanelContainer gameObject GameObject gameObject { get; } Property Value GameObject Methods IsOnTop() Return true if the panel is on the highest level among all UI (at the top of the stack) bool IsOnTop() Returns bool OnClosed() Called on the point when the panel is closed void OnClosed() OnFocused() Called at the point when the panel is on top void OnFocused() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/MikroFramework.UIKit.IPanelContainer.html": {
    "href": "api/MikroFramework.UIKit.IPanelContainer.html",
    "title": "Interface IPanelContainer | Capstone documentation",
    "keywords": "Interface IPanelContainer Namespace MikroFramework.UIKit Assembly MikroFramework.dll public interface IPanelContainer : IPanel Inherited Members IPanel.IsOnTop() IPanel.Parent IPanel.gameObject IPanel.PanelType IPanel.DefaultSelectedGameObjectWhenFocused IPanel.IsOpening IPanel.OnFocused() IPanel.OnInit() IPanel.OnOpen(UIMsg) IPanel.OnClosed() Properties Children List<IPanel> Children { get; } Property Value List<IPanel> Methods GetTopChild() IPanel GetTopChild() Returns IPanel"
  },
  "api/MikroFramework.UIKit.IUIRoot.html": {
    "href": "api/MikroFramework.UIKit.IUIRoot.html",
    "title": "Interface IUIRoot | Capstone documentation",
    "keywords": "Interface IUIRoot Namespace MikroFramework.UIKit Assembly MikroFramework.dll public interface IUIRoot : IPanelContainer, IPanel Inherited Members IPanelContainer.Children IPanelContainer.GetTopChild() IPanel.IsOnTop() IPanel.Parent IPanel.gameObject IPanel.PanelType IPanel.DefaultSelectedGameObjectWhenFocused IPanel.IsOpening IPanel.OnFocused() IPanel.OnInit() IPanel.OnOpen(UIMsg) IPanel.OnClosed() Methods ClosePanel(IPanel, bool) void ClosePanel(IPanel panel, bool alsoCloseChild = true) Parameters panel IPanel alsoCloseChild bool Open<T>(IPanelContainer, UIMsg, bool, string) T Open<T>(IPanelContainer parent, UIMsg message, bool createNewIfNotExist = true, string assetNameIfNotExist = \"\") where T : class, IPanel Parameters parent IPanelContainer message UIMsg createNewIfNotExist bool assetNameIfNotExist string Returns T Type Parameters T"
  },
  "api/MikroFramework.UIKit.PanelType.html": {
    "href": "api/MikroFramework.UIKit.PanelType.html",
    "title": "Enum PanelType | Capstone documentation",
    "keywords": "Enum PanelType Namespace MikroFramework.UIKit Assembly MikroFramework.dll public enum PanelType Fields MainPanel = 0 PopUp = 1 Root = 2"
  },
  "api/MikroFramework.UIKit.UILayer.html": {
    "href": "api/MikroFramework.UIKit.UILayer.html",
    "title": "Enum UILayer | Capstone documentation",
    "keywords": "Enum UILayer Namespace MikroFramework.UIKit Assembly MikroFramework.dll public enum UILayer Fields Bg = 0 Common = 1 Top = 2"
  },
  "api/MikroFramework.UIKit.UIManager.html": {
    "href": "api/MikroFramework.UIKit.UIManager.html",
    "title": "Class UIManager | Capstone documentation",
    "keywords": "Class UIManager Namespace MikroFramework.UIKit Assembly MikroFramework.dll public class UIManager : ManagerBehavior, IManager, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior ManagerBehavior UIManager Implements IManager ISingleton Inherited Members ManagerBehavior.OnBeforeDestroy() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties DefaultUISettings public static DefaultUISettings DefaultUISettings { get; } Property Value DefaultUISettings Singleton public static UIManager Singleton { get; } Property Value UIManager Methods ClosePanel(IPanel, bool) Close the current panel. If the current panel is the main panel, then it will return to the last opened main panel. public void ClosePanel(IPanel panel, bool alsoCloseChild = true) Parameters panel IPanel alsoCloseChild bool GetPanel<T>(bool) public T GetPanel<T>(bool isActive) where T : IPanel Parameters isActive bool Returns T Type Parameters T Open<T>(IPanelContainer, UIMsg, bool, string) Open a panel. This will always open a currently closed panel. If no closed panel exists or no pre-existing panel exists, it will try to create a new one (if createNewIfNotExist is true) public T Open<T>(IPanelContainer parent, UIMsg message, bool createNewIfNotExist = true, string assetNameIfNotExist = \"\") where T : class, IPanel Parameters parent IPanelContainer The parent of this panel. Can be root or any panel containers. If null, the parent will be a random root panel. Note that MainPanels can only have the root UI as its parent message UIMsg The message to be passed to the panel createNewIfNotExist bool assetNameIfNotExist string The asset name in the asset bundle for the panel. Used to create the panel if it doesn't exist in the scene Returns T Type Parameters T RegisterPanel(IPanel, IUIRoot) public void RegisterPanel(IPanel panel, IUIRoot root) Parameters panel IPanel root IUIRoot SetResolution(DefaultUISettings) public static void SetResolution(DefaultUISettings uiSettings) Parameters uiSettings DefaultUISettings"
  },
  "api/MikroFramework.UIKit.UIMsg.html": {
    "href": "api/MikroFramework.UIKit.UIMsg.html",
    "title": "Interface UIMsg | Capstone documentation",
    "keywords": "Interface UIMsg Namespace MikroFramework.UIKit Assembly MikroFramework.dll public interface UIMsg"
  },
  "api/MikroFramework.UIKit.UIRoot.html": {
    "href": "api/MikroFramework.UIKit.UIRoot.html",
    "title": "Class UIRoot | Capstone documentation",
    "keywords": "Class UIRoot Namespace MikroFramework.UIKit Assembly MikroFramework.dll public class UIRoot : MonoBehaviour, IUIRoot, IPanelContainer, IPanel Inheritance object Object Component Behaviour MonoBehaviour UIRoot Implements IUIRoot IPanelContainer IPanel Derived MainUI Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields currentMainPanel protected IPanel currentMainPanel Field Value IPanel Properties Children public List<IPanel> Children { get; } Property Value List<IPanel> DefaultSelectedGameObjectWhenFocused For XBoxController and GamePads: use this to assign a default selected game object when the panel is changed to be the top panel. Can leave as null public GameObject DefaultSelectedGameObjectWhenFocused { get; } Property Value GameObject IsOpening public bool IsOpening { get; set; } Property Value bool PanelType public PanelType PanelType { get; } Property Value PanelType Parent Every panel has a parent. The parent of all panels are UIRoot public IPanelContainer Parent { get; set; } Property Value IPanelContainer Methods Awake() protected virtual void Awake() ClosePanel(IPanel, bool) Close the current panel. If the current panel is the main panel, then it will return to the last opened main panel. public virtual void ClosePanel(IPanel panel, bool alsoCloseChild = true) Parameters panel IPanel alsoCloseChild bool GetTopChild() public IPanel GetTopChild() Returns IPanel IsOnTop() Return true if the panel is on the highest level among all UI (at the top of the stack) public bool IsOnTop() Returns bool Open<T>(IPanelContainer, UIMsg, bool, string) Open a panel. This will always open a currently closed panel. If no closed panel exists or no pre-existing panel exists, it will try to create a new one (if createNewIfNotExist is true) public virtual T Open<T>(IPanelContainer parent, UIMsg message, bool createNewIfNotExist = true, string assetNameIfNotExist = \"\") where T : class, IPanel Parameters parent IPanelContainer The parent of this panel. Leave null if the parent is the root UI. Note that MainPanels can only have the root UI as its parent message UIMsg The message to be passed to the panel createNewIfNotExist bool assetNameIfNotExist string The asset name in the asset bundle for the panel. Used to create the panel if it doesn't exist in the scene Returns T Type Parameters T"
  },
  "api/MikroFramework.UIKit.html": {
    "href": "api/MikroFramework.UIKit.html",
    "title": "Namespace MikroFramework.UIKit | Capstone documentation",
    "keywords": "Namespace MikroFramework.UIKit Classes AbstractPanel AbstractPanelContainer UIManager UIRoot Structs DefaultUISettings Interfaces IPanel IPanelContainer IUIRoot UIMsg Enums PanelType UILayer"
  },
  "api/MikroFramework.UniRxOnCompletedExample.html": {
    "href": "api/MikroFramework.UniRxOnCompletedExample.html",
    "title": "Class UniRxOnCompletedExample | Capstone documentation",
    "keywords": "Class UniRxOnCompletedExample Namespace MikroFramework Assembly MikroFramework.dll public class UniRxOnCompletedExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxOnCompletedExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UniRxReactiveProperty.html": {
    "href": "api/MikroFramework.UniRxReactiveProperty.html",
    "title": "Class UniRxReactiveProperty | Capstone documentation",
    "keywords": "Class UniRxReactiveProperty Namespace MikroFramework Assembly MikroFramework.dll public class UniRxReactiveProperty : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxReactiveProperty Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UniRxSubjectExample.html": {
    "href": "api/MikroFramework.UniRxSubjectExample.html",
    "title": "Class UniRxSubjectExample | Capstone documentation",
    "keywords": "Class UniRxSubjectExample Namespace MikroFramework Assembly MikroFramework.dll public class UniRxSubjectExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxSubjectExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UniRxTypeEventSystemTest.html": {
    "href": "api/MikroFramework.UniRxTypeEventSystemTest.html",
    "title": "Class UniRxTypeEventSystemTest | Capstone documentation",
    "keywords": "Class UniRxTypeEventSystemTest Namespace MikroFramework Assembly MikroFramework.dll public class UniRxTypeEventSystemTest : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UniRxTypeEventSystemTest Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UntilAction.html": {
    "href": "api/MikroFramework.UntilAction.html",
    "title": "Class UntilAction | Capstone documentation",
    "keywords": "Class UntilAction Namespace MikroFramework Assembly MikroFramework.dll public class UntilAction : MikroAction, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, ICanSendQuery, IBelongToArchitecture, IPoolable Inheritance object MikroAction UntilAction Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand ICanSendQuery IBelongToArchitecture IPoolable Inherited Members MikroAction.Finished MikroAction.OnEndedCallback MikroAction.OnBeginCallback MikroAction.Execute() MikroAction.Reset() MikroAction.Finish() MikroAction.OnBegin() MikroAction.OnEnd() MikroAction.AutoRecycle MikroAction.SetStopExecutingWhenTargetGameObjectDestroyed(GameObject) MikroAction.IsRecycled MikroAction.SetAutoRecycle(bool) MikroAction.RecycleToCache() MikroAction.GetArchitecture() MikroAction.SetArchitecture(IArchitecture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MikroActionExtensions.StopActionWhenGameObjectDestroyed(MikroAction, GameObject) CanGetModelExtension.GetModel<T>(ICanGetModel) CanGetSystemExtension.GetSystem<T>(ICanGetSystem, Action<T>) CanGetUtilityExtension.GetUtility<T>(ICanGetUtility) CanSendCommandExtension.SendCommand<T>(ICanSendCommand) CanSendCommandExtension.SendCommand<T>(ICanSendCommand, T) CanSendEventExtension.SendEvent<T>(ICanSendEvent) CanSendEventExtension.SendEvent<T>(ICanSendEvent, T) CanSendQueryExtension.SendQuery<T>(ICanSendQuery, IQuery<T>) Methods Allocate(Func<bool>) public static UntilAction Allocate(Func<bool> triggerCondition) Parameters triggerCondition Func<bool> Returns UntilAction OnDispose() OnDispose is called before this action is recycled back to the pool (before reset everything) protected override void OnDispose() OnExecuting() OnExecuting is called each frame after executing this action, until this action is finished protected override void OnExecuting() RecycleBackToPool() protected override void RecycleBackToPool()"
  },
  "api/MikroFramework.UntilActionExample.html": {
    "href": "api/MikroFramework.UntilActionExample.html",
    "title": "Class UntilActionExample | Capstone documentation",
    "keywords": "Class UntilActionExample Namespace MikroFramework Assembly MikroFramework.dll public class UntilActionExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UntilActionExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.UseEventCenterExample.html": {
    "href": "api/MikroFramework.UseEventCenterExample.html",
    "title": "Class UseEventCenterExample | Capstone documentation",
    "keywords": "Class UseEventCenterExample Namespace MikroFramework Assembly MikroFramework.dll public class UseEventCenterExample : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UseEventCenterExample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Utilities.CommonUtility.html": {
    "href": "api/MikroFramework.Utilities.CommonUtility.html",
    "title": "Class CommonUtility | Capstone documentation",
    "keywords": "Class CommonUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class CommonUtility Inheritance object CommonUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AreVersionsEqual(string, string) public static bool AreVersionsEqual(string version1, string version2) Parameters version1 string version2 string Returns bool CompareVersions(string, string) Return if the version version1 is bigger than the version version2 public static bool CompareVersions(string version1, string version2) Parameters version1 string version2 string Returns bool CopyText(string) Copy a specific text to the clipboard public static void CopyText(string text) Parameters text string text to copy DeleteCloneName(GameObject) Delete the \"(Clone)\" text on object's name if the object is cloned public static string DeleteCloneName(GameObject obj) Parameters obj GameObject Returns string"
  },
  "api/MikroFramework.Utilities.CoroutineRunner.html": {
    "href": "api/MikroFramework.Utilities.CoroutineRunner.html",
    "title": "Class CoroutineRunner | Capstone documentation",
    "keywords": "Class CoroutineRunner Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class CoroutineRunner : MonoPersistentMikroSingleton<CoroutineRunner>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<CoroutineRunner> MonoPersistentMikroSingleton<CoroutineRunner> CoroutineRunner Implements ISingleton Inherited Members MonoPersistentMikroSingleton<CoroutineRunner>.instance MonoPersistentMikroSingleton<CoroutineRunner>.Singleton MonoMikroSingleton<CoroutineRunner>.Exists MonoMikroSingleton<CoroutineRunner>.OnBeforeDestroy() MonoMikroSingleton<CoroutineRunner>.OnSingletonInit() MonoMikroSingleton<CoroutineRunner>.onApplicationQuit MonoMikroSingleton<CoroutineRunner>.IsApplicationQuit MonoMikroSingleton<CoroutineRunner>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/MikroFramework.Utilities.Debugger.PoolInfo.html": {
    "href": "api/MikroFramework.Utilities.Debugger.PoolInfo.html",
    "title": "Struct Debugger.PoolInfo | Capstone documentation",
    "keywords": "Struct Debugger.PoolInfo Namespace MikroFramework.Utilities Assembly MikroFramework.dll protected struct Debugger.PoolInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MaxValue public int MaxValue Field Value int Value public int Value Field Value int"
  },
  "api/MikroFramework.Utilities.Debugger.html": {
    "href": "api/MikroFramework.Utilities.Debugger.html",
    "title": "Class Debugger | Capstone documentation",
    "keywords": "Class Debugger Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class Debugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Debugger Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields safeObjectPoolDict protected Dictionary<string, Debugger.PoolInfo> safeObjectPoolDict Field Value Dictionary<string, Debugger.PoolInfo> Methods AddEventListeners() public virtual void AddEventListeners() AddNewDebugCatalogue(string, int, Color) Add a new catalogue to the debugger. Call this function in OnGUI() protected void AddNewDebugCatalogue(string name, int fontSize, Color catalogueColor) Parameters name string fontSize int catalogueColor Color OnGUI() public virtual void OnGUI()"
  },
  "api/MikroFramework.Utilities.EditorUtility.html": {
    "href": "api/MikroFramework.Utilities.EditorUtility.html",
    "title": "Class EditorUtility | Capstone documentation",
    "keywords": "Class EditorUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class EditorUtility Inheritance object EditorUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OpenInFolder(string) Open a specific folder public static void OpenInFolder(string folderPath) Parameters folderPath string path of the folder"
  },
  "api/MikroFramework.Utilities.FileUtility.html": {
    "href": "api/MikroFramework.Utilities.FileUtility.html",
    "title": "Class FileUtility | Capstone documentation",
    "keywords": "Class FileUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class FileUtility Inheritance object FileUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeleteFile(FileInfo) Delete a specific file at a specific path public static bool DeleteFile(FileInfo file) Parameters file FileInfo Returns bool If any error occurs GetAllDirectoryFiles(string, bool, bool) Get all files under a specific directory public static List<FileInfo> GetAllDirectoryFiles(string path, bool includeManifest, bool includeMeta) Parameters path string includeManifest bool do the results include manifest files (for ab)? includeMeta bool do the results include Unity .meta files? Returns List<FileInfo> GetParentDirectory(string) Return the root directory of a file, given the file path. E.g.: D://a/b/c/d.json -> D://a/b/c/ public static string GetParentDirectory(string filePath) Parameters filePath string Returns string"
  },
  "api/MikroFramework.Utilities.IRefCounter.html": {
    "href": "api/MikroFramework.Utilities.IRefCounter.html",
    "title": "Interface IRefCounter | Capstone documentation",
    "keywords": "Interface IRefCounter Namespace MikroFramework.Utilities Assembly MikroFramework.dll public interface IRefCounter Properties RefCount The count of the current reference counter int RefCount { get; } Property Value int Methods Release(object) Let the current RC-1. void Release(object refOwner = null) Parameters refOwner object Retain(object) Let the current RC+1 void Retain(object refOwner = null) Parameters refOwner object"
  },
  "api/MikroFramework.Utilities.InputUtility.html": {
    "href": "api/MikroFramework.Utilities.InputUtility.html",
    "title": "Class InputUtility | Capstone documentation",
    "keywords": "Class InputUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public static class InputUtility Inheritance object InputUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMouseMoveDirection(float) Return the move direction and length of the mouse in the current frame public static Vector2 GetMouseMoveDirection(float sensitivity = 1) Parameters sensitivity float Sensitivity of the mouse Returns Vector2"
  },
  "api/MikroFramework.Utilities.MathUtility.html": {
    "href": "api/MikroFramework.Utilities.MathUtility.html",
    "title": "Class MathUtility | Capstone documentation",
    "keywords": "Class MathUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class MathUtility Inheritance object MathUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRandomValueFrom<T>(params T[]) Get a random element from an array of objects. public static T GetRandomValueFrom<T>(params T[] values) Parameters values T[] Returns T Type Parameters T Percent(int) Given the possibility, return whether the random result hit this possibility public static bool Percent(int percent) Parameters percent int Possibility in percent (0~100) Returns bool"
  },
  "api/MikroFramework.Utilities.PhysicsUtility.html": {
    "href": "api/MikroFramework.Utilities.PhysicsUtility.html",
    "title": "Class PhysicsUtility | Capstone documentation",
    "keywords": "Class PhysicsUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class PhysicsUtility Inheritance object PhysicsUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsInLayerMask(GameObject, LayerMask) Return if the object is in a specific layer public static bool IsInLayerMask(GameObject obj, LayerMask layerMask) Parameters obj GameObject layerMask LayerMask Returns bool RigidbodyMoveForward(Rigidbody, float) Move the rigidibody forward (relative to itself) by setting its velocity public static void RigidbodyMoveForward(Rigidbody rigidbody, float speed) Parameters rigidbody Rigidbody speed float"
  },
  "api/MikroFramework.Utilities.RectHelper.html": {
    "href": "api/MikroFramework.Utilities.RectHelper.html",
    "title": "Class RectHelper | Capstone documentation",
    "keywords": "Class RectHelper Namespace MikroFramework.Utilities Assembly MikroFramework.dll public static class RectHelper Inheritance object RectHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RectForAnchorCenter(float, float, float, float) Return the rect, which is anchored at its center, given its x, y, width and height (anchored at center) public static Rect RectForAnchorCenter(float x, float y, float width, float height) Parameters x float y float width float height float Returns Rect RectForAnchorCenter(Vector2, Vector2) Return the rect, which is anchored at its center, given its pos and size (anchored at center) public static Rect RectForAnchorCenter(Vector2 pos, Vector2 size) Parameters pos Vector2 size Vector2 Returns Rect"
  },
  "api/MikroFramework.Utilities.ResKitUtility.html": {
    "href": "api/MikroFramework.Utilities.ResKitUtility.html",
    "title": "Class ResKitUtility | Capstone documentation",
    "keywords": "Class ResKitUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class ResKitUtility Inheritance object ResKitUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentPlatformName Get the name of the current platform (Applicable on both Unity Editor and Runtime builds). public static string CurrentPlatformName { get; } Property Value string HotUpdateAssetBundleFolder Get the folder for Asset Bundles' downloaded path (For hot-update) public static string HotUpdateAssetBundleFolder { get; } Property Value string TempAssetBundlesPath Get the temp folder that downloaded AB files are saved public static string TempAssetBundlesPath { get; } Property Value string Methods BuildFileMd5(string) Generate MD5 of the given file public static string BuildFileMd5(string filePath) Parameters filePath string Returns string FormatMD5(byte[]) public static string FormatMD5(byte[] data) Parameters data byte[] Returns string GetABFileInfo(string, bool) Get the FileInfo object of a specific AssetBundle file public static FileInfo GetABFileInfo(string abName, bool isLocalPath) Parameters abName string isLocalPath bool Is the bundle located at the local path? If not, it will get from the hot update folder. Return null if unable to find Returns FileInfo GetAllRawAssetNamesFromResVersion(ResVersion) Get all raw file names of a ResVersion file E.g. (AssetName=\"test/sprite.ab\", raw name=\"sprite.ab\") public static List<string> GetAllRawAssetNamesFromResVersion(ResVersion resVersion) Parameters resVersion ResVersion Returns List<string> GetAssetBundlePath(string) Returns the correct AB path (either local AB path or hot-update AB path) from AB name public static string GetAssetBundlePath(string assetBundleName) Parameters assetBundleName string Returns string LocalAssetBundlePath(string) Return the complete path for the local AssetBundle files public static string LocalAssetBundlePath(string assetBundleName) Parameters assetBundleName string Returns string"
  },
  "api/MikroFramework.Utilities.ResolutionCheck.html": {
    "href": "api/MikroFramework.Utilities.ResolutionCheck.html",
    "title": "Class ResolutionCheck | Capstone documentation",
    "keywords": "Class ResolutionCheck Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class ResolutionCheck : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ResolutionCheck Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties IsLandscape Is the current device landscape? public static bool IsLandscape { get; } Property Value bool Methods GetAspectRatio() Get the Aspect Ratio of the current device public static float GetAspectRatio() Returns float aspect ratio InAspectRange(float) Check if the current device's aspect ratio is in the range of the target aspect ratio public static bool InAspectRange(float targetAspectRatio) Parameters targetAspectRatio float The target aspect ratio to check Returns bool IsIPhone4SResolution() Returns if the current resolution is Iphone 4S resolution public static bool IsIPhone4SResolution() Returns bool IsIPhoneResolution16_9() Return if the current resolution is IPhone's (excluding IPhone 4S and IPhone X+) resolution (or 16:9). Including iPhone 5/5S/5C/SE, iPhone 6/6S/7/8, iPhone 6/6S/7/8 Plus public static bool IsIPhoneResolution16_9() Returns bool IsIphoneXR11Resolution() Return if the current resolution is IPhone XR or 11 resolution public static bool IsIphoneXR11Resolution() Returns bool IsIphoneXResolution() Return if the current resolution is IPhone X resolution public static bool IsIphoneXResolution() Returns bool IsIphoneXS11PResolution() Return if the current resolution is IPhone XS or 11 Pro resolution public static bool IsIphoneXS11PResolution() Returns bool IsIphoneXSMax11PMaxResolution() Return if the current resolution is IPhone XS Max or 11 Pro Max resolution public static bool IsIphoneXSMax11PMaxResolution() Returns bool IsPadResolution4_3() Return if the current resolution is IPad's resolution(4:3) public static bool IsPadResolution4_3() Returns bool"
  },
  "api/MikroFramework.Utilities.Serialization-1.html": {
    "href": "api/MikroFramework.Utilities.Serialization-1.html",
    "title": "Class Serialization<T> | Capstone documentation",
    "keywords": "Class Serialization<T> Namespace MikroFramework.Utilities Assembly MikroFramework.dll [Serializable] public class Serialization<T> Type Parameters T Inheritance object Serialization<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Serialization(List<T>) public Serialization(List<T> target) Parameters target List<T> Methods ToList() public List<T> ToList() Returns List<T>"
  },
  "api/MikroFramework.Utilities.Serialization-2.html": {
    "href": "api/MikroFramework.Utilities.Serialization-2.html",
    "title": "Class Serialization<TKey, TValue> | Capstone documentation",
    "keywords": "Class Serialization<TKey, TValue> Namespace MikroFramework.Utilities Assembly MikroFramework.dll [Serializable] public class Serialization<TKey, TValue> : ISerializationCallbackReceiver Type Parameters TKey TValue Inheritance object Serialization<TKey, TValue> Implements ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Serialization(Dictionary<TKey, TValue>) public Serialization(Dictionary<TKey, TValue> target) Parameters target Dictionary<TKey, TValue> Methods OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. public void OnAfterDeserialize() OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. public void OnBeforeSerialize() ToDictionary() public Dictionary<TKey, TValue> ToDictionary() Returns Dictionary<TKey, TValue>"
  },
  "api/MikroFramework.Utilities.SerializationUtility.html": {
    "href": "api/MikroFramework.Utilities.SerializationUtility.html",
    "title": "Class SerializationUtility | Capstone documentation",
    "keywords": "Class SerializationUtility Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class SerializationUtility : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SerializationUtility Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods BinaryDeserialize<T>(string) Deserialize a binary file to a serializable object public static T BinaryDeserialize<T>(string path) Parameters path string Returns T Type Parameters T BinarySerialize<T>(T, string) Serialize a serializable object to binary public static void BinarySerialize<T>(T serialize, string path) Parameters serialize T path string Path to save Type Parameters T BinaryToString(string) public static string BinaryToString(string str) Parameters str string Returns string DicFromJson<TKey, TValue>(string) Deserialize a dictionary from Json public static Dictionary<TKey, TValue> DicFromJson<TKey, TValue>(string str) Parameters str string Returns Dictionary<TKey, TValue> Type Parameters TKey TValue DicToJson<TKey, TValue>(Dictionary<TKey, TValue>) Serialize a Dictionary to Json public static string DicToJson<TKey, TValue>(Dictionary<TKey, TValue> dic) Parameters dic Dictionary<TKey, TValue> Returns string Type Parameters TKey TValue ListFromJson<T>(string) Deserialize a list from Json public static List<T> ListFromJson<T>(string str) Parameters str string Returns List<T> Type Parameters T ListToJson<T>(List<T>) Serialize a list to Json public static string ListToJson<T>(List<T> l) Parameters l List<T> Returns string Type Parameters T StringToBinary(string) public static string StringToBinary(string str) Parameters str string Returns string XmlDeserialize<T>(string) Deserialize a XML file to a XML serializable object public static T XmlDeserialize<T>(string path) Parameters path string Returns T Type Parameters T XmlSerialize<T>(T, string) Serialize a XML serializable object to XML file public static void XmlSerialize<T>(T serializedObject, string path) Parameters serializedObject T path string Type Parameters T"
  },
  "api/MikroFramework.Utilities.SimpleRC.html": {
    "href": "api/MikroFramework.Utilities.SimpleRC.html",
    "title": "Class SimpleRC | Capstone documentation",
    "keywords": "Class SimpleRC Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class SimpleRC : IRefCounter Inheritance object SimpleRC Implements IRefCounter Derived Res Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RefCount The count of the current reference counter public int RefCount { get; set; } Property Value int Methods OnZeroRef() Triggered when the reference counter reaches 0 protected virtual void OnZeroRef() Release(object) Let the current RC-1. If RC=0, trigger OnZeroRef function public void Release(object refOwner = null) Parameters refOwner object Retain(object) Let the current RC+1 public virtual void Retain(object refOwner = null) Parameters refOwner object"
  },
  "api/MikroFramework.Utilities.Trigger2DCheck.html": {
    "href": "api/MikroFramework.Utilities.Trigger2DCheck.html",
    "title": "Class Trigger2DCheck | Capstone documentation",
    "keywords": "Class Trigger2DCheck Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class Trigger2DCheck : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Trigger2DCheck Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields OnEnter public Action<Collider2D> OnEnter Field Value Action<Collider2D> OnExit public Action<Collider2D> OnExit Field Value Action<Collider2D> TargetLayers public LayerMask TargetLayers Field Value LayerMask Properties Colliders Get all 2D colliders that are in the current trigger of this object public HashSet<Collider2D> Colliders { get; } Property Value HashSet<Collider2D> Triggered If there are any collider in the trigger of this object public bool Triggered { get; } Property Value bool Methods Clear() public void Clear()"
  },
  "api/MikroFramework.Utilities.TriggerCheck.html": {
    "href": "api/MikroFramework.Utilities.TriggerCheck.html",
    "title": "Class TriggerCheck | Capstone documentation",
    "keywords": "Class TriggerCheck Namespace MikroFramework.Utilities Assembly MikroFramework.dll public class TriggerCheck : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TriggerCheck Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields OnEnter public Action<Collider> OnEnter Field Value Action<Collider> OnExit public Action<Collider> OnExit Field Value Action<Collider> TargetLayers public LayerMask TargetLayers Field Value LayerMask Properties Colliders Get all 2D colliders that are in the current trigger of this object public HashSet<Collider> Colliders { get; } Property Value HashSet<Collider> Triggered If there are any collider in the trigger of this object public bool Triggered { get; } Property Value bool Methods Clear() public void Clear()"
  },
  "api/MikroFramework.Utilities.html": {
    "href": "api/MikroFramework.Utilities.html",
    "title": "Namespace MikroFramework.Utilities | Capstone documentation",
    "keywords": "Namespace MikroFramework.Utilities Classes CommonUtility CoroutineRunner Debugger EditorUtility FileUtility InputUtility MathUtility PhysicsUtility RectHelper ResKitUtility ResolutionCheck SerializationUtility Serialization<T> Serialization<TKey, TValue> SimpleRC Trigger2DCheck TriggerCheck Structs Debugger.PoolInfo Interfaces IRefCounter"
  },
  "api/MikroFramework.html": {
    "href": "api/MikroFramework.html",
    "title": "Namespace MikroFramework | Capstone documentation",
    "keywords": "Namespace MikroFramework Namespaces MikroFramework.ActionKit MikroFramework.Architecture MikroFramework.AudioKit MikroFramework.BindableProperty MikroFramework.CodeGen MikroFramework.DataStructures MikroFramework.DatabaseKit MikroFramework.Event MikroFramework.Examples MikroFramework.Extensions MikroFramework.FSM MikroFramework.Factory MikroFramework.IOC MikroFramework.LevelManagementKit MikroFramework.Managers MikroFramework.NHibernate.Examples MikroFramework.Pool MikroFramework.ResKit MikroFramework.SceneEntranceKit MikroFramework.Serializer MikroFramework.ServiceLocator MikroFramework.Singletons MikroFramework.TimeSystem MikroFramework.UIKit MikroFramework.Utilities Classes AboutPanel AbstractQuery<T> AssetDataTable AudioSystemBasicExample AutoCreateUIExample AutoDeleteActionsExample CallbackRecord CanSendQueryExtension ComplexRepeatExample DelayAction DelayActionExtensions FSMBasicExample FSMSerializationExample Game GameObjectPoolManager GameStartEvent GameStartPanel GameWInEvent HotUpdateExample LoadABAssetExample LoadAssetWithoutABNameExampleWithHotUpdate LoadPanel LoadSceneABExample MenuPanel MikroBehavior ModuleSearchKeys OnKillEvent OnMissEvent OpenFilesPanel OrthographicCameraScaler PanelCloseButton PoolManagerWithResLoader ReflectionUtility RepeatExample RepeatSequence ResetAction ResetExample SettingsPanel SimplifiedChainActionsExample StartGameCommand SuperNestedActionsExample TimeSystemRepeatedExample UI UniRxOnCompletedExample UniRxReactiveProperty UniRxSubjectExample UniRxTypeEventSystemTest UntilAction UntilActionExample UseEventCenterExample Structs OpenFilePanelMsg Interfaces ICanSendQuery IQuery<T>"
  },
  "api/Mikrocosmos.KeepGlobalRotation.html": {
    "href": "api/Mikrocosmos.KeepGlobalRotation.html",
    "title": "Class KeepGlobalRotation | Capstone documentation",
    "keywords": "Class KeepGlobalRotation Namespace Mikrocosmos Assembly MikroFramework.dll public class KeepGlobalRotation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour KeepGlobalRotation Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties PositionOffset public Vector3 PositionOffset { get; set; } Property Value Vector3"
  },
  "api/Mikrocosmos.Rigidbody2DExt.html": {
    "href": "api/Mikrocosmos.Rigidbody2DExt.html",
    "title": "Class Rigidbody2DExt | Capstone documentation",
    "keywords": "Class Rigidbody2DExt Namespace Mikrocosmos Assembly MikroFramework.dll public static class Rigidbody2DExt Inheritance object Rigidbody2DExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddExplosionForce(Rigidbody2D, float, Vector2, float, float, ForceMode2D) public static void AddExplosionForce(this Rigidbody2D rb, float explosionForce, Vector2 explosionPosition, float explosionRadius, float upwardsModifier = 0, ForceMode2D mode = ForceMode2D.Impulse) Parameters rb Rigidbody2D explosionForce float explosionPosition Vector2 explosionRadius float upwardsModifier float mode ForceMode2D"
  },
  "api/Mikrocosmos.UIParticle.html": {
    "href": "api/Mikrocosmos.UIParticle.html",
    "title": "Class UIParticle | Capstone documentation",
    "keywords": "Class UIParticle Namespace Mikrocosmos Assembly MikroFramework.dll public class UIParticle : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIParticle Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Mikrocosmos.html": {
    "href": "api/Mikrocosmos.html",
    "title": "Namespace Mikrocosmos | Capstone documentation",
    "keywords": "Namespace Mikrocosmos Classes KeepGlobalRotation Rigidbody2DExt UIParticle"
  },
  "api/Runtime.BehaviorDesigner.Composite.StageBaseSelector.html": {
    "href": "api/Runtime.BehaviorDesigner.Composite.StageBaseSelector.html",
    "title": "Class StageBaseSelector | Capstone documentation",
    "keywords": "Class StageBaseSelector Namespace Runtime.BehaviorDesigner.Composite Assembly MainGame.dll [TaskDescription(\"Like RandomSelect except only selects moves for the current stage.\")] [TaskIcon(\"{SkinColor}RandomSelectorIcon.png\")] public class StageBaseSelector : Composite Inheritance object Task ParentTask Composite StageBaseSelector Inherited Members Composite.abortType Composite.OnReevaluationStarted() Composite.OnReevaluationEnded(TaskStatus) Composite.AbortType ParentTask.children ParentTask.MaxChildren() ParentTask.CanRunParallelChildren() ParentTask.Decorate(TaskStatus) ParentTask.CanReevaluate() ParentTask.OnChildExecuted(int, TaskStatus) ParentTask.OnChildStarted() ParentTask.OnChildStarted(int) ParentTask.OverrideStatus(TaskStatus) ParentTask.OverrideStatus() ParentTask.GetUtility() ParentTask.OnDrawGizmos() ParentTask.AddChild(Task, int) ParentTask.ReplaceAddChild(Task, int) ParentTask.Children Task.gameObject Task.transform Task.OnUpdate() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields currentStage public SharedInt currentStage Field Value SharedInt includedTasksPerStage public List<string> includedTasksPerStage Field Value List<string> seed [Tooltip(\"Seed the random number generator to make things easier to debug\")] public int seed Field Value int useSeed [Tooltip(\"Do we want to use the seed?\")] public bool useSeed Field Value bool Methods CanExecute() public override bool CanExecute() Returns bool CurrentChildIndex() public override int CurrentChildIndex() Returns int OnAwake() public override void OnAwake() OnChildExecuted(TaskStatus) public override void OnChildExecuted(TaskStatus childStatus) Parameters childStatus TaskStatus OnConditionalAbort(int) public override void OnConditionalAbort(int childIndex) Parameters childIndex int OnEnd() public override void OnEnd() OnReset() public override void OnReset() OnStart() public override void OnStart()"
  },
  "api/Runtime.BehaviorDesigner.Composite.html": {
    "href": "api/Runtime.BehaviorDesigner.Composite.html",
    "title": "Namespace Runtime.BehaviorDesigner.Composite | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner.Composite Classes StageBaseSelector"
  },
  "api/Runtime.BehaviorDesigner.Conditional.EnemyConditional.html": {
    "href": "api/Runtime.BehaviorDesigner.Conditional.EnemyConditional.html",
    "title": "Class EnemyConditional | Capstone documentation",
    "keywords": "Class EnemyConditional Namespace Runtime.BehaviorDesigner.Conditional Assembly MainGame.dll public class EnemyConditional : Conditional Inheritance object Task Conditional EnemyConditional Derived IsEnemyHealthUnder Inherited Members Task.gameObject Task.transform Task.OnStart() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields animator protected Animator animator Field Value Animator body protected Rigidbody2D body Field Value Rigidbody2D condition public SharedBool condition Field Value SharedBool Methods OnAwake() public override void OnAwake() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Conditional.IsAnimatorState.html": {
    "href": "api/Runtime.BehaviorDesigner.Conditional.IsAnimatorState.html",
    "title": "Class IsAnimatorState | Capstone documentation",
    "keywords": "Class IsAnimatorState Namespace Runtime.BehaviorDesigner.Conditional Assembly MainGame.dll [TaskCategory(\"Unity/Animator\")] [TaskDescription(\"Returns success if the specified short animation state name matches the name of the active state of an Animator.\")] public class IsAnimatorState : IsName Inheritance object Task Conditional IsName IsAnimatorState Inherited Members IsName.targetGameObject IsName.index IsName.name Task.gameObject Task.transform Task.OnAwake() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnReset() public override void OnReset() OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Conditional.IsEnemyHealthUnder.html": {
    "href": "api/Runtime.BehaviorDesigner.Conditional.IsEnemyHealthUnder.html",
    "title": "Class IsEnemyHealthUnder | Capstone documentation",
    "keywords": "Class IsEnemyHealthUnder Namespace Runtime.BehaviorDesigner.Conditional Assembly MainGame.dll public class IsEnemyHealthUnder : EnemyConditional Inheritance object Task Conditional EnemyConditional IsEnemyHealthUnder Inherited Members EnemyConditional.body EnemyConditional.animator EnemyConditional.condition EnemyConditional.OnAwake() Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EntityGameObject public SharedGameObject EntityGameObject Field Value SharedGameObject healthPercentage public SharedFloat healthPercentage Field Value SharedFloat Methods OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Conditional.WaitForAnimationChange.html": {
    "href": "api/Runtime.BehaviorDesigner.Conditional.WaitForAnimationChange.html",
    "title": "Class WaitForAnimationChange | Capstone documentation",
    "keywords": "Class WaitForAnimationChange Namespace Runtime.BehaviorDesigner.Conditional Assembly MainGame.dll public class WaitForAnimationChange : IsName Inheritance object Task Conditional IsName WaitForAnimationChange Inherited Members IsName.targetGameObject IsName.index IsName.name IsName.OnReset() Task.gameObject Task.transform Task.OnAwake() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Conditional.html": {
    "href": "api/Runtime.BehaviorDesigner.Conditional.html",
    "title": "Namespace Runtime.BehaviorDesigner.Conditional | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner.Conditional Classes EnemyConditional IsAnimatorState IsEnemyHealthUnder WaitForAnimationChange"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.ChangeShellStatus.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.ChangeShellStatus.html",
    "title": "Class ChangeShellStatus | Capstone documentation",
    "keywords": "Class ChangeShellStatus Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class ChangeShellStatus : EnemyAction<Boss1Entity> Inheritance object Task Action EnemyAction EnemyAction<Boss1Entity> ChangeShellStatus Inherited Members EnemyAction<Boss1Entity>.enemyEntity EnemyAction<Boss1Entity>.OnAwake() EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields closed public SharedBool closed Field Value SharedBool Methods OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyAction-1.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyAction-1.html",
    "title": "Class EnemyAction<T> | Capstone documentation",
    "keywords": "Class EnemyAction<T> Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public abstract class EnemyAction<T> : EnemyAction where T : class, IEnemyEntity Type Parameters T Inheritance object Task Action EnemyAction EnemyAction<T> Derived ChangeShellStatus RangedAOE RapidFire Roll Inherited Members EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnStart() Task.OnUpdate() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields enemyEntity protected T enemyEntity Field Value T Methods OnAwake() public override void OnAwake()"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyAction.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyAction.html",
    "title": "Class EnemyAction | Capstone documentation",
    "keywords": "Class EnemyAction Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public abstract class EnemyAction : Action Inheritance object Task Action EnemyAction Derived EnemyAction<T> GoToNextStage Howl Meteor Stun Inherited Members Task.gameObject Task.transform Task.OnStart() Task.OnUpdate() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields anim protected Animator anim Field Value Animator body protected Rigidbody body Field Value Rigidbody enemyViewController protected IEnemyViewController enemyViewController Field Value IEnemyViewController Methods OnAwake() public override void OnAwake()"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyBomb.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.EnemyBomb.html",
    "title": "Class EnemyBomb | Capstone documentation",
    "keywords": "Class EnemyBomb Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class EnemyBomb : ProjectileBehavior Inheritance object Object Component Behaviour MonoBehaviour ProjectileBehavior EnemyBomb Inherited Members ProjectileBehavior.targetPos ProjectileBehavior.travelTime ProjectileBehavior.target ProjectileBehavior.destWithOffset ProjectileBehavior.collisionTagsToCheck ProjectileBehavior.duration ProjectileBehavior.rotationSpeed ProjectileBehavior.beforeTurnSpeed ProjectileBehavior.afterTurnSpeed ProjectileBehavior.defaultDestinationDistance ProjectileBehavior.distanceBeforeTurn ProjectileBehavior.destroyDelay ProjectileBehavior.Explode() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields test public bool test Field Value bool Methods Init() protected override void Init() Init(Transform, float) public void Init(Transform target, float tTime) Parameters target Transform tTime float Start() protected override void Start()"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.GoToNextStage.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.GoToNextStage.html",
    "title": "Class GoToNextStage | Capstone documentation",
    "keywords": "Class GoToNextStage Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class GoToNextStage : EnemyAction Inheritance object Task Action EnemyAction GoToNextStage Inherited Members EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController EnemyAction.OnAwake() Task.gameObject Task.transform Task.OnStart() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields currentStage public SharedInt currentStage Field Value SharedInt Methods OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Howl.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Howl.html",
    "title": "Class Howl | Capstone documentation",
    "keywords": "Class Howl Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class Howl : EnemyAction Inheritance object Task Action EnemyAction Howl Inherited Members EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnStart() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields howlAnimationName public string howlAnimationName Field Value string howling public SharedBool howling Field Value SharedBool tigerAnimator public Animator tigerAnimator Field Value Animator Methods OnAwake() public override void OnAwake() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Meteor.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Meteor.html",
    "title": "Class Meteor | Capstone documentation",
    "keywords": "Class Meteor Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class Meteor : EnemyAction Inheritance object Task Action EnemyAction Meteor Inherited Members EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController EnemyAction.OnAwake() Task.gameObject Task.transform Task.OnStart() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields meteorPrefab public GameObject meteorPrefab Field Value GameObject spawnArea public BoxCollider spawnArea Field Value BoxCollider spawnCount public int spawnCount Field Value int spawnInterval public float spawnInterval Field Value float wait public Wait wait Field Value Wait Methods OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.ProjectileBehavior.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.ProjectileBehavior.html",
    "title": "Class ProjectileBehavior | Capstone documentation",
    "keywords": "Class ProjectileBehavior Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public abstract class ProjectileBehavior : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ProjectileBehavior Derived EnemyBomb Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields afterTurnSpeed public float afterTurnSpeed Field Value float beforeTurnSpeed public float beforeTurnSpeed Field Value float collisionTagsToCheck public string[] collisionTagsToCheck Field Value string[] defaultDestinationDistance public float defaultDestinationDistance Field Value float destWithOffset public Vector3 destWithOffset Field Value Vector3 destroyDelay public float destroyDelay Field Value float distanceBeforeTurn public float distanceBeforeTurn Field Value float duration public float duration Field Value float rotationSpeed public float rotationSpeed Field Value float target public Transform target Field Value Transform Properties targetPos public Vector3 targetPos { get; set; } Property Value Vector3 travelTime public float travelTime { get; set; } Property Value float Methods Explode() public void Explode() Init() protected abstract void Init() Start() protected virtual void Start()"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.RangedAOE.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.RangedAOE.html",
    "title": "Class RangedAOE | Capstone documentation",
    "keywords": "Class RangedAOE Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class RangedAOE : EnemyAction<Boss1Entity> Inheritance object Task Action EnemyAction EnemyAction<Boss1Entity> RangedAOE Inherited Members EnemyAction<Boss1Entity>.enemyEntity EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields bulletCount public int bulletCount Field Value int bulletPrefab public SharedGameObject bulletPrefab Field Value SharedGameObject bulletTravelTime public float bulletTravelTime Field Value float playerTrans public SharedTransform playerTrans Field Value SharedTransform spawnInterval public float spawnInterval Field Value float Methods OnAwake() public override void OnAwake() OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.RapidFire.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.RapidFire.html",
    "title": "Class RapidFire | Capstone documentation",
    "keywords": "Class RapidFire Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class RapidFire : EnemyAction<Boss1Entity> Inheritance object Task Action EnemyAction EnemyAction<Boss1Entity> RapidFire Inherited Members EnemyAction<Boss1Entity>.enemyEntity EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields boss1vc public Boss1 boss1vc Field Value Boss1 bulletCount public int bulletCount Field Value int bulletPrefab public SharedGameObject bulletPrefab Field Value SharedGameObject bulletSpeed public int bulletSpeed Field Value int playerTrans public SharedTransform playerTrans Field Value SharedTransform spawnInterval public float spawnInterval Field Value float Methods OnAwake() public override void OnAwake() OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Roll.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Roll.html",
    "title": "Class Roll | Capstone documentation",
    "keywords": "Class Roll Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class Roll : EnemyAction<Boss1Entity> Inheritance object Task Action EnemyAction EnemyAction<Boss1Entity> Roll Inherited Members EnemyAction<Boss1Entity>.enemyEntity EnemyAction<Boss1Entity>.OnAwake() EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields HitBox public HitBox HitBox Field Value HitBox abortDistance public float abortDistance Field Value float forceToPlayer public float forceToPlayer Field Value float maxRotationSpeed public float maxRotationSpeed Field Value float movementSpeed public float movementSpeed Field Value float pivot public GameObject pivot Field Value GameObject playerTrans public SharedTransform playerTrans Field Value SharedTransform shell public GameObject shell Field Value GameObject stun public bool stun Field Value bool Methods OnCollisionEnter(Collision) public override void OnCollisionEnter(Collision collision) Parameters collision Collision OnEnd() public override void OnEnd() OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Stun.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.Stun.html",
    "title": "Class Stun | Capstone documentation",
    "keywords": "Class Stun Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Assembly MainGame.dll public class Stun : EnemyAction Inheritance object Task Action EnemyAction Stun Inherited Members EnemyAction.body EnemyAction.anim EnemyAction.enemyViewController EnemyAction.OnAwake() Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnReset() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields duration public float duration Field Value float pivot public GameObject pivot Field Value GameObject Methods OnStart() public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.EnemyAction.html",
    "title": "Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner.Tasks.EnemyAction Classes ChangeShellStatus EnemyAction EnemyAction<T> EnemyBomb GoToNextStage Howl Meteor ProjectileBehavior RangedAOE RapidFire Roll Stun"
  },
  "api/Runtime.BehaviorDesigner.Tasks.Movement.CycleMovement.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.Movement.CycleMovement.html",
    "title": "Class CycleMovement | Capstone documentation",
    "keywords": "Class CycleMovement Namespace Runtime.BehaviorDesigner.Tasks.Movement Assembly MainGame.dll [TaskDescription(\"Move around the area in a circle\")] [TaskCategory(\"Movement\")] public class CycleMovement : NavMeshMovement Inheritance object Task Action Movement NavMeshMovement CycleMovement Inherited Members NavMeshMovement.m_Speed NavMeshMovement.m_AngularSpeed NavMeshMovement.m_ArriveDistance NavMeshMovement.m_StopOnTaskEnd NavMeshMovement.m_UpdateRotation NavMeshMovement.m_NavMeshAgent NavMeshMovement.OnAwake() NavMeshMovement.SetDestination(Vector3) NavMeshMovement.UpdateRotation(bool) NavMeshMovement.HasPath() NavMeshMovement.Velocity() NavMeshMovement.SamplePosition(ref Vector3) NavMeshMovement.HasArrived() NavMeshMovement.Stop() NavMeshMovement.OnBehaviorComplete() Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields radius public SharedFloat radius Field Value SharedFloat speed public SharedFloat speed Field Value SharedFloat Methods OnEnd() The task has ended. Stop moving. public override void OnEnd() OnReset() Reset the values back to their defaults. public override void OnReset() OnStart() Allow pathfinding to resume. public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.Movement.MoveTowardsWithLimit.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.Movement.MoveTowardsWithLimit.html",
    "title": "Class MoveTowardsWithLimit | Capstone documentation",
    "keywords": "Class MoveTowardsWithLimit Namespace Runtime.BehaviorDesigner.Tasks.Movement Assembly MainGame.dll [TaskDescription(\"Move towards the specified position with certain range limit. The position can either be specified by a transform or position. If the transform is used then the position will not be used.\")] [TaskCategory(\"Movement\")] [TaskIcon(\"c8e612848487a184f9090d416c932c47\", \"812dc79fe1e417548959f61845528372\")] public class MoveTowardsWithLimit : Action Inheritance object Task Action MoveTowardsWithLimit Inherited Members Task.gameObject Task.transform Task.OnAwake() Task.OnStart() Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnEnd() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnBehaviorComplete() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields limit public float limit Field Value float m_ArriveDistance [Tooltip(\"The agent has arrived when the magnitude is less than this value\")] [FormerlySerializedAs(\"arriveDistance\")] public SharedFloat m_ArriveDistance Field Value SharedFloat m_LookAtTarget [Tooltip(\"Should the agent be looking at the target position?\")] [FormerlySerializedAs(\"lookAtTarget\")] public SharedBool m_LookAtTarget Field Value SharedBool m_MaxLookAtRotationDelta [Tooltip(\"Max rotation delta if lookAtTarget is enabled\")] [FormerlySerializedAs(\"maxLookAtRotationDelta\")] public SharedFloat m_MaxLookAtRotationDelta Field Value SharedFloat m_Speed [Tooltip(\"The speed of the agent\")] [FormerlySerializedAs(\"speed\")] public SharedFloat m_Speed Field Value SharedFloat m_Target [Tooltip(\"The GameObject that the agent is moving towards\")] [FormerlySerializedAs(\"target\")] public SharedGameObject m_Target Field Value SharedGameObject m_TargetPosition [Tooltip(\"If target is null then use the target position\")] [FormerlySerializedAs(\"targetPosition\")] public SharedVector3 m_TargetPosition Field Value SharedVector3 Methods OnReset() public override void OnReset() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.Movement.NavMesh_MoveTowards.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.Movement.NavMesh_MoveTowards.html",
    "title": "Class NavMesh_MoveTowards | Capstone documentation",
    "keywords": "Class NavMesh_MoveTowards Namespace Runtime.BehaviorDesigner.Tasks.Movement Assembly MainGame.dll [TaskCategory(\"Unity/NavMeshAgent\")] [TaskDescription(\"Like other MoveTowards but uses the NavMesh.\")] public class NavMesh_MoveTowards : NavMeshMovement Inheritance object Task Action Movement NavMeshMovement NavMesh_MoveTowards Inherited Members NavMeshMovement.m_Speed NavMeshMovement.m_AngularSpeed NavMeshMovement.m_StopOnTaskEnd NavMeshMovement.m_UpdateRotation NavMeshMovement.m_NavMeshAgent NavMeshMovement.OnAwake() NavMeshMovement.SetDestination(Vector3) NavMeshMovement.UpdateRotation(bool) NavMeshMovement.HasPath() NavMeshMovement.Velocity() NavMeshMovement.SamplePosition(ref Vector3) NavMeshMovement.HasArrived() NavMeshMovement.Stop() NavMeshMovement.OnEnd() NavMeshMovement.OnBehaviorComplete() Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields m_ArriveDistance [Tooltip(\"The agent has arrived when the magnitude is less than this value\")] [FormerlySerializedAs(\"arriveDistance\")] public SharedFloat m_ArriveDistance Field Value SharedFloat m_Target [Tooltip(\"The GameObject that the agent is moving towards\")] [FormerlySerializedAs(\"target\")] public SharedGameObject m_Target Field Value SharedGameObject targetGameObject [Tooltip(\"The GameObject that the task operates on. If null the task GameObject is used.\")] public SharedGameObject targetGameObject Field Value SharedGameObject Methods OnReset() Reset the values back to their defaults. public override void OnReset() OnStart() Allow pathfinding to resume. public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.Movement.WalkAround.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.Movement.WalkAround.html",
    "title": "Class WalkAround | Capstone documentation",
    "keywords": "Class WalkAround Namespace Runtime.BehaviorDesigner.Tasks.Movement Assembly MainGame.dll [TaskCategory(\"Unity/NavMeshAgent\")] [TaskDescription(\"Like other MoveTowards but uses the NavMesh.\")] public class WalkAround : NavMeshMovement Inheritance object Task Action Movement NavMeshMovement WalkAround Inherited Members NavMeshMovement.m_Speed NavMeshMovement.m_AngularSpeed NavMeshMovement.m_StopOnTaskEnd NavMeshMovement.m_UpdateRotation NavMeshMovement.m_NavMeshAgent NavMeshMovement.OnAwake() NavMeshMovement.SetDestination(Vector3) NavMeshMovement.UpdateRotation(bool) NavMeshMovement.HasPath() NavMeshMovement.Velocity() NavMeshMovement.SamplePosition(ref Vector3) NavMeshMovement.HasArrived() NavMeshMovement.Stop() NavMeshMovement.OnEnd() NavMeshMovement.OnBehaviorComplete() Task.gameObject Task.transform Task.OnLateUpdate() Task.OnFixedUpdate() Task.OnPause(bool) Task.OnConditionalAbort() Task.GetPriority() Task.GetUtility() Task.OnBehaviorRestart() Task.OnDrawGizmos() Task.OnDrawNodeText() Task.StartCoroutine(string) Task.StartCoroutine(IEnumerator) Task.StartCoroutine(string, object) Task.StopCoroutine(string) Task.StopCoroutine(IEnumerator) Task.StopAllCoroutines() Task.OnCollisionEnter(Collision) Task.OnCollisionExit(Collision) Task.OnTriggerEnter(Collider) Task.OnTriggerExit(Collider) Task.OnCollisionEnter2D(Collision2D) Task.OnCollisionExit2D(Collision2D) Task.OnTriggerEnter2D(Collider2D) Task.OnTriggerExit2D(Collider2D) Task.OnControllerColliderHit(ControllerColliderHit) Task.OnAnimatorIK() Task.GetComponent<T>() Task.GetComponent(Type) Task.TryGetComponent<T>(out T) Task.TryGetComponent(Type, out Component) Task.GetDefaultGameObject(GameObject) Task.GameObject Task.Transform Task.NodeData Task.Owner Task.ID Task.FriendlyName Task.IsInstant Task.ReferenceID Task.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields m_ArriveDistance [Tooltip(\"The agent has arrived when the magnitude is less than this value\")] [FormerlySerializedAs(\"arriveDistance\")] public SharedFloat m_ArriveDistance Field Value SharedFloat m_Target [Tooltip(\"The GameObject that the agent is moving towards\")] [FormerlySerializedAs(\"target\")] public SharedGameObject m_Target Field Value SharedGameObject targetGameObject [Tooltip(\"The GameObject that the task operates on. If null the task GameObject is used.\")] public SharedGameObject targetGameObject Field Value SharedGameObject Methods OnReset() Reset the values back to their defaults. public override void OnReset() OnStart() Allow pathfinding to resume. public override void OnStart() OnUpdate() public override TaskStatus OnUpdate() Returns TaskStatus"
  },
  "api/Runtime.BehaviorDesigner.Tasks.Movement.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.Movement.html",
    "title": "Namespace Runtime.BehaviorDesigner.Tasks.Movement | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner.Tasks.Movement Classes CycleMovement MoveTowardsWithLimit NavMesh_MoveTowards WalkAround"
  },
  "api/Runtime.BehaviorDesigner.Tasks.html": {
    "href": "api/Runtime.BehaviorDesigner.Tasks.html",
    "title": "Namespace Runtime.BehaviorDesigner.Tasks | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner.Tasks Namespaces Runtime.BehaviorDesigner.Tasks.EnemyAction Runtime.BehaviorDesigner.Tasks.Movement"
  },
  "api/Runtime.BehaviorDesigner.html": {
    "href": "api/Runtime.BehaviorDesigner.html",
    "title": "Namespace Runtime.BehaviorDesigner | Capstone documentation",
    "keywords": "Namespace Runtime.BehaviorDesigner Namespaces Runtime.BehaviorDesigner.Composite Runtime.BehaviorDesigner.Conditional Runtime.BehaviorDesigner.Tasks"
  },
  "api/Runtime.Controls.BindingInfo.html": {
    "href": "api/Runtime.Controls.BindingInfo.html",
    "title": "Class BindingInfo | Capstone documentation",
    "keywords": "Class BindingInfo Namespace Runtime.Controls Assembly MainGame.dll [Serializable] public class BindingInfo Inheritance object BindingInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ControlPath public string ControlPath Field Value string LocalizationKey public string LocalizationKey Field Value string Sprite public Sprite Sprite Field Value Sprite"
  },
  "api/Runtime.Controls.BindingKeyData.html": {
    "href": "api/Runtime.Controls.BindingKeyData.html",
    "title": "Class BindingKeyData | Capstone documentation",
    "keywords": "Class BindingKeyData Namespace Runtime.Controls Assembly MainGame.dll [CreateAssetMenu(fileName = \"BindingData\")] public class BindingKeyData : ScriptableObject Inheritance object Object ScriptableObject BindingKeyData Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields BindingDatas public List<DeviceBindingData> BindingDatas Field Value List<DeviceBindingData> Methods GetBindingInfo(InputAction, out string, string) public BindingInfo GetBindingInfo(InputAction action, out string internalDisplayName, string group = null) Parameters action InputAction internalDisplayName string group string Returns BindingInfo GetBindingInfoFromDeviceNameAndControlPath(string, string) public BindingInfo GetBindingInfoFromDeviceNameAndControlPath(string deviceName, string controlPath) Parameters deviceName string controlPath string Returns BindingInfo"
  },
  "api/Runtime.Controls.ClientInput.html": {
    "href": "api/Runtime.Controls.ClientInput.html",
    "title": "Class ClientInput | Capstone documentation",
    "keywords": "Class ClientInput Namespace Runtime.Controls Assembly MainGame.dll public class ClientInput : MonoMikroSingleton<ClientInput>, ISingleton, ICanSendEvent, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<ClientInput> ClientInput Implements ISingleton ICanSendEvent IBelongToArchitecture Inherited Members MonoMikroSingleton<ClientInput>.instance MonoMikroSingleton<ClientInput>.Exists MonoMikroSingleton<ClientInput>.Singleton MonoMikroSingleton<ClientInput>.OnBeforeDestroy() MonoMikroSingleton<ClientInput>.onApplicationQuit MonoMikroSingleton<ClientInput>.IsApplicationQuit MonoMikroSingleton<ClientInput>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties PlayerInput public PlayerInput PlayerInput { get; } Property Value PlayerInput Methods EnablePlayerMaps() public void EnablePlayerMaps() EnableUIMaps() public void EnableUIMaps() FindActionInCurrentActionMap(string) public InputAction FindActionInCurrentActionMap(string name) Parameters name string Returns InputAction FindActionInPlayerActionMap(string) public InputAction FindActionInPlayerActionMap(string name) Parameters name string Returns InputAction GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture GetPlayerActions() public DPunkInputs.PlayerActions GetPlayerActions() Returns DPunkInputs.PlayerActions GetSharedActions() public DPunkInputs.SharedActions GetSharedActions() Returns DPunkInputs.SharedActions GetUIActions() public DPunkInputs.UIActions GetUIActions() Returns DPunkInputs.UIActions OnSingletonInit() public override void OnSingletonInit()"
  },
  "api/Runtime.Controls.ControlInfoFactory.html": {
    "href": "api/Runtime.Controls.ControlInfoFactory.html",
    "title": "Class ControlInfoFactory | Capstone documentation",
    "keywords": "Class ControlInfoFactory Namespace Runtime.Controls Assembly MainGame.dll public class ControlInfoFactory : MikroSingleton<ControlInfoFactory>, ISingleton Inheritance object MikroSingleton<ControlInfoFactory> ControlInfoFactory Implements ISingleton Inherited Members MikroSingleton<ControlInfoFactory>.instance MikroSingleton<ControlInfoFactory>.Singleton MikroSingleton<ControlInfoFactory>.OnSingletonInit() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBindingKeyGameObject(InputAction, out BindingInfo, out string) public GameObject GetBindingKeyGameObject(InputAction action, out BindingInfo info, out string internalDisplayName) Parameters action InputAction info BindingInfo internalDisplayName string Returns GameObject GetBindingKeyLocalizedName(InputAction) public string GetBindingKeyLocalizedName(InputAction action) Parameters action InputAction Returns string"
  },
  "api/Runtime.Controls.DeviceBindingData.html": {
    "href": "api/Runtime.Controls.DeviceBindingData.html",
    "title": "Class DeviceBindingData | Capstone documentation",
    "keywords": "Class DeviceBindingData Namespace Runtime.Controls Assembly MainGame.dll [Serializable] public class DeviceBindingData Inheritance object DeviceBindingData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DeviceName public string DeviceName Field Value string bindingInfos public List<BindingInfo> bindingInfos Field Value List<BindingInfo> Methods GetBindingInfo(string) public BindingInfo GetBindingInfo(string controlPath) Parameters controlPath string Returns BindingInfo"
  },
  "api/Runtime.Controls.GamepadBindingData.html": {
    "href": "api/Runtime.Controls.GamepadBindingData.html",
    "title": "Struct GamepadBindingData | Capstone documentation",
    "keywords": "Struct GamepadBindingData Namespace Runtime.Controls Assembly MainGame.dll [Serializable] public struct GamepadBindingData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields buttonEast public Sprite buttonEast Field Value Sprite buttonNorth public Sprite buttonNorth Field Value Sprite buttonSouth public Sprite buttonSouth Field Value Sprite buttonWest public Sprite buttonWest Field Value Sprite dpad public Sprite dpad Field Value Sprite dpadDown public Sprite dpadDown Field Value Sprite dpadLeft public Sprite dpadLeft Field Value Sprite dpadRight public Sprite dpadRight Field Value Sprite dpadUp public Sprite dpadUp Field Value Sprite leftShoulder public Sprite leftShoulder Field Value Sprite leftStick public Sprite leftStick Field Value Sprite leftStickPress public Sprite leftStickPress Field Value Sprite leftTrigger public Sprite leftTrigger Field Value Sprite rightShoulder public Sprite rightShoulder Field Value Sprite rightStick public Sprite rightStick Field Value Sprite rightStickPress public Sprite rightStickPress Field Value Sprite rightTrigger public Sprite rightTrigger Field Value Sprite selectButton public Sprite selectButton Field Value Sprite startButton public Sprite startButton Field Value Sprite Methods GetSprite(string) public Sprite GetSprite(string controlPath) Parameters controlPath string Returns Sprite"
  },
  "api/Runtime.Controls.KeyboardMouseBindingData.html": {
    "href": "api/Runtime.Controls.KeyboardMouseBindingData.html",
    "title": "Struct KeyboardMouseBindingData | Capstone documentation",
    "keywords": "Struct KeyboardMouseBindingData Namespace Runtime.Controls Assembly MainGame.dll [Serializable] public struct KeyboardMouseBindingData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields backSpace public Sprite backSpace Field Value Sprite down public Sprite down Field Value Sprite enter public Sprite enter Field Value Sprite left public Sprite left Field Value Sprite leftButton public Sprite leftButton Field Value Sprite middleButton public Sprite middleButton Field Value Sprite right public Sprite right Field Value Sprite rightButton public Sprite rightButton Field Value Sprite scroll public Sprite scroll Field Value Sprite shift public Sprite shift Field Value Sprite space public Sprite space Field Value Sprite tab public Sprite tab Field Value Sprite up public Sprite up Field Value Sprite Methods GetSprite(string) [Obsolete] public Sprite GetSprite(string controlPath) Parameters controlPath string Returns Sprite"
  },
  "api/Runtime.Controls.LocalizedControlKey.html": {
    "href": "api/Runtime.Controls.LocalizedControlKey.html",
    "title": "Struct LocalizedControlKey | Capstone documentation",
    "keywords": "Struct LocalizedControlKey Namespace Runtime.Controls Assembly MainGame.dll [Serializable] public struct LocalizedControlKey Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields fallbackInputAction public string fallbackInputAction Field Value string mainInputAction public string mainInputAction Field Value string"
  },
  "api/Runtime.Controls.LocalizedKeyTextSetter.html": {
    "href": "api/Runtime.Controls.LocalizedKeyTextSetter.html",
    "title": "Class LocalizedKeyTextSetter | Capstone documentation",
    "keywords": "Class LocalizedKeyTextSetter Namespace Runtime.Controls Assembly MainGame.dll public class LocalizedKeyTextSetter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LocalizedKeyTextSetter Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.Controls.OnControlMapSwitched.html": {
    "href": "api/Runtime.Controls.OnControlMapSwitched.html",
    "title": "Struct OnControlMapSwitched | Capstone documentation",
    "keywords": "Struct OnControlMapSwitched Namespace Runtime.Controls Assembly MainGame.dll public struct OnControlMapSwitched Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MapName public string MapName Field Value string"
  },
  "api/Runtime.Controls.html": {
    "href": "api/Runtime.Controls.html",
    "title": "Namespace Runtime.Controls | Capstone documentation",
    "keywords": "Namespace Runtime.Controls Classes BindingInfo BindingKeyData ClientInput ControlInfoFactory DeviceBindingData LocalizedKeyTextSetter Structs GamepadBindingData KeyboardMouseBindingData LocalizedControlKey OnControlMapSwitched"
  },
  "api/Runtime.DataFramework.Description.DescriptionGetter-1.html": {
    "href": "api/Runtime.DataFramework.Description.DescriptionGetter-1.html",
    "title": "Delegate DescriptionGetter<T> | Capstone documentation",
    "keywords": "Delegate DescriptionGetter<T> Namespace Runtime.DataFramework.Description Assembly MainGame.dll public delegate string DescriptionGetter<T>(T targetObject) Parameters targetObject T Returns string Type Parameters T"
  },
  "api/Runtime.DataFramework.Description.IDescriptionGetter-1.html": {
    "href": "api/Runtime.DataFramework.Description.IDescriptionGetter-1.html",
    "title": "Interface IDescriptionGetter<T> | Capstone documentation",
    "keywords": "Interface IDescriptionGetter<T> Namespace Runtime.DataFramework.Description Assembly MainGame.dll public interface IDescriptionGetter<T> Type Parameters T Methods GetDescription(T) string GetDescription(T targetObject) Parameters targetObject T Returns string"
  },
  "api/Runtime.DataFramework.Description.IHaveDescription.html": {
    "href": "api/Runtime.DataFramework.Description.IHaveDescription.html",
    "title": "Interface IHaveDescription | Capstone documentation",
    "keywords": "Interface IHaveDescription Namespace Runtime.DataFramework.Description Assembly MainGame.dll public interface IHaveDescription Methods GetDescription() Get the description of the object. string GetDescription() Returns string"
  },
  "api/Runtime.DataFramework.Description.IHaveDisplayName.html": {
    "href": "api/Runtime.DataFramework.Description.IHaveDisplayName.html",
    "title": "Interface IHaveDisplayName | Capstone documentation",
    "keywords": "Interface IHaveDisplayName Namespace Runtime.DataFramework.Description Assembly MainGame.dll public interface IHaveDisplayName Methods GetDisplayName() Get the display name of the object. string GetDisplayName() Returns string"
  },
  "api/Runtime.DataFramework.Description.html": {
    "href": "api/Runtime.DataFramework.Description.html",
    "title": "Namespace Runtime.DataFramework.Description | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Description Interfaces IDescriptionGetter<T> IHaveDescription IHaveDisplayName Delegates DescriptionGetter<T>"
  },
  "api/Runtime.DataFramework.Entities.AbstractBasicEntity.html": {
    "href": "api/Runtime.DataFramework.Entities.AbstractBasicEntity.html",
    "title": "Class AbstractBasicEntity | Capstone documentation",
    "keywords": "Class AbstractBasicEntity Namespace Runtime.DataFramework.Entities Assembly MainGame.dll Basically all entities inherit from this class. Auto register the custom properties, rarity, and tags public abstract class AbstractBasicEntity : Entity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity Implements IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived DamageableEntity ResourceEntity<T> Inherited Members Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.GetConfigTable() Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnDoRecycle() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCustomDataValue(string, string) public IBindableProperty GetCustomDataValue(string customPropertyName, string dataName) Parameters customPropertyName string dataName string Returns IBindableProperty GetCustomDataValue<T>(string, string) If your custom property is AutoConfigCustomProperty, use dynamic for T public BindableProperty<T> GetCustomDataValue<T>(string customPropertyName, string dataName) Parameters customPropertyName string dataName string Returns BindableProperty<T> Type Parameters T GetCustomProperties() public Dictionary<string, ICustomProperty> GetCustomProperties() Returns Dictionary<string, ICustomProperty> GetRarity() public int GetRarity() Returns int GetTagProperty() public ITagProperty GetTagProperty() Returns ITagProperty HasCustomProperty(string) public bool HasCustomProperty(string propertyName) Parameters propertyName string Returns bool OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected abstract void OnEntityRegisterAdditionalProperties() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnRegisterCustomProperties() protected abstract ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[] OnRegisterProperties() protected override void OnRegisterProperties() RegisterOnCustomDataChanged(string, Action<ICustomProperty>) public IUnRegister RegisterOnCustomDataChanged(string customPropertyName, Action<ICustomProperty> onCustomDataChanged) Parameters customPropertyName string onCustomDataChanged Action<ICustomProperty> Returns IUnRegister RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) public IUnRegister RegisterOnCustomDataChanged(string customPropertyName, string dataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters customPropertyName string dataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic> Returns IUnRegister UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) public void UnRegisterOnCustomDataChanged(string customPropertyName, Action<ICustomProperty> onCustomDataChanged) Parameters customPropertyName string onCustomDataChanged Action<ICustomProperty> UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) public void UnRegisterOnCustomDataChanged(string customPropertyName, string dataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters customPropertyName string dataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic>"
  },
  "api/Runtime.DataFramework.Entities.Builders.BasicEntityBuilder-1.html": {
    "href": "api/Runtime.DataFramework.Entities.Builders.BasicEntityBuilder-1.html",
    "title": "Class BasicEntityBuilder<T> | Capstone documentation",
    "keywords": "Class BasicEntityBuilder<T> Namespace Runtime.DataFramework.Entities.Builders Assembly MainGame.dll public class BasicEntityBuilder<T> : EntityBuilder<BasicEntityBuilder<T>, T>, IPoolable where T : class, IEntity, new() Type Parameters T Inheritance object EntityBuilder<BasicEntityBuilder<T>, T> BasicEntityBuilder<T> Implements IPoolable Inherited Members EntityBuilder<BasicEntityBuilder<T>, T>.Entity EntityBuilder<BasicEntityBuilder<T>, T>.onEntityCreated EntityBuilder<BasicEntityBuilder<T>, T>.RegisterOnEntityCreated(Action<T>) EntityBuilder<BasicEntityBuilder<T>, T>.CheckEntity() EntityBuilder<BasicEntityBuilder<T>, T>.OverrideName(string) EntityBuilder<BasicEntityBuilder<T>, T>.FromConfig(ConfigTable) EntityBuilder<BasicEntityBuilder<T>, T>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<BasicEntityBuilder<T>, T>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<BasicEntityBuilder<T>, T>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<BasicEntityBuilder<T>, T>.AddTag(TagName, int) EntityBuilder<BasicEntityBuilder<T>, T>.Build() EntityBuilder<BasicEntityBuilder<T>, T>.OnRecycled() EntityBuilder<BasicEntityBuilder<T>, T>.IsRecycled EntityBuilder<BasicEntityBuilder<T>, T>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Allocate(int) public static BasicEntityBuilder<T> Allocate(int rarity) Parameters rarity int Returns BasicEntityBuilder<T> RecycleToCache() public override void RecycleToCache()"
  },
  "api/Runtime.DataFramework.Entities.Builders.EntityBuilder-2.html": {
    "href": "api/Runtime.DataFramework.Entities.Builders.EntityBuilder-2.html",
    "title": "Class EntityBuilder<TBuilder, TEntity> | Capstone documentation",
    "keywords": "Class EntityBuilder<TBuilder, TEntity> Namespace Runtime.DataFramework.Entities.Builders Assembly MainGame.dll public abstract class EntityBuilder<TBuilder, TEntity> : IPoolable where TBuilder : EntityBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Type Parameters TBuilder TEntity Inheritance object EntityBuilder<TBuilder, TEntity> Implements IPoolable Derived BasicEntityBuilder<T> CreatureBuilder<TBuilder, TEntity> ResourceBuilder<TBuilder, TEntity> WeaponBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntityBuilder() public EntityBuilder() Fields onEntityCreated protected Action<TEntity> onEntityCreated Field Value Action<TEntity> Properties Entity protected virtual TEntity Entity { get; set; } Property Value TEntity IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods AddTag(TagName, int) public TBuilder AddTag(TagName tag, int level) Parameters tag TagName level int Returns TBuilder Build() public TEntity Build() Returns TEntity CheckEntity() protected void CheckEntity() FromConfig(ConfigTable) public TBuilder FromConfig(ConfigTable overrideTable = null) Parameters overrideTable ConfigTable Returns TBuilder OnRecycled() public void OnRecycled() OverrideName(string) public TBuilder OverrideName(string name) Parameters name string Returns TBuilder RecycleToCache() public abstract void RecycleToCache() RegisterOnEntityCreated(Action<TEntity>) public TBuilder RegisterOnEntityCreated(Action<TEntity> onCreated) Parameters onCreated Action<TEntity> Returns TBuilder SetDependencies(PropertyNameInfo, PropertyNameInfo[]) Set dependencies for a property public TBuilder SetDependencies(PropertyNameInfo propertyName, PropertyNameInfo[] dependencies) Parameters propertyName PropertyNameInfo dependencies PropertyNameInfo[] Returns TBuilder SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) Override the property's modifier If the entity has multiple properties with the same name, every property will be overriden public TBuilder SetModifier<ValueType>(PropertyNameInfo propertyName, IPropertyDependencyModifier<ValueType> modifier) Parameters propertyName PropertyNameInfo modifier IPropertyDependencyModifier<ValueType> Returns TBuilder Type Parameters ValueType SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) Override the property's base value and its modifier If the entity has multiple properties with the same name, every property will be overriden public TBuilder SetProperty<ValueType>(PropertyNameInfo propertyName, ValueType value, IPropertyDependencyModifier<ValueType> modifier = null) Parameters propertyName PropertyNameInfo value ValueType modifier IPropertyDependencyModifier<ValueType> Returns TBuilder Type Parameters ValueType"
  },
  "api/Runtime.DataFramework.Entities.Builders.EntityBuilderFactory.html": {
    "href": "api/Runtime.DataFramework.Entities.Builders.EntityBuilderFactory.html",
    "title": "Class EntityBuilderFactory | Capstone documentation",
    "keywords": "Class EntityBuilderFactory Namespace Runtime.DataFramework.Entities.Builders Assembly MainGame.dll public class EntityBuilderFactory : IEntityBuilderFactory Inheritance object EntityBuilderFactory Implements IEntityBuilderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBuilder<TBuilder, TEntity>(int) public TBuilder GetBuilder<TBuilder, TEntity>(int rarity) where TBuilder : EntityBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Parameters rarity int Returns TBuilder Type Parameters TBuilder TEntity"
  },
  "api/Runtime.DataFramework.Entities.Builders.IEntityBuilderFactory.html": {
    "href": "api/Runtime.DataFramework.Entities.Builders.IEntityBuilderFactory.html",
    "title": "Interface IEntityBuilderFactory | Capstone documentation",
    "keywords": "Interface IEntityBuilderFactory Namespace Runtime.DataFramework.Entities.Builders Assembly MainGame.dll public interface IEntityBuilderFactory Methods GetBuilder<TBuilder, TEntity>(int) TBuilder GetBuilder<TBuilder, TEntity>(int rarity) where TBuilder : EntityBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Parameters rarity int Returns TBuilder Type Parameters TBuilder TEntity"
  },
  "api/Runtime.DataFramework.Entities.Builders.html": {
    "href": "api/Runtime.DataFramework.Entities.Builders.html",
    "title": "Namespace Runtime.DataFramework.Entities.Builders | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.Builders Classes BasicEntityBuilder<T> EntityBuilderFactory EntityBuilder<TBuilder, TEntity> Interfaces IEntityBuilderFactory"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties.IHaveCustomProperties.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties.IHaveCustomProperties.html",
    "title": "Interface IHaveCustomProperties | Capstone documentation",
    "keywords": "Interface IHaveCustomProperties Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties Assembly MainGame.dll public interface IHaveCustomProperties : IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Methods GetCustomDataValue(string, string) IBindableProperty GetCustomDataValue(string customPropertyName, string dataName) Parameters customPropertyName string dataName string Returns IBindableProperty GetCustomDataValue<T>(string, string) BindableProperty<T> GetCustomDataValue<T>(string customPropertyName, string dataName) Parameters customPropertyName string dataName string Returns BindableProperty<T> Type Parameters T GetCustomProperties() Dictionary<string, ICustomProperty> GetCustomProperties() Returns Dictionary<string, ICustomProperty> HasCustomProperty(string) bool HasCustomProperty(string propertyName) Parameters propertyName string Returns bool RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IUnRegister RegisterOnCustomDataChanged(string customPropertyName, Action<ICustomProperty> onCustomDataChanged) Parameters customPropertyName string onCustomDataChanged Action<ICustomProperty> Returns IUnRegister RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IUnRegister RegisterOnCustomDataChanged(string customPropertyName, string dataName, Action<ICustomDataProperty, object, object> onCustomDataChanged) Parameters customPropertyName string dataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic> Returns IUnRegister UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) void UnRegisterOnCustomDataChanged(string customPropertyName, Action<ICustomProperty> onCustomDataChanged) Parameters customPropertyName string onCustomDataChanged Action<ICustomProperty> UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) void UnRegisterOnCustomDataChanged(string customPropertyName, string dataName, Action<ICustomDataProperty, object, object> onCustomDataChanged) Parameters customPropertyName string dataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic>"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties.html",
    "title": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties Interfaces IHaveCustomProperties"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.DamageableEntity.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.DamageableEntity.html",
    "title": "Class DamageableEntity | Capstone documentation",
    "keywords": "Class DamageableEntity Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll Health is auto registered public abstract class DamageableEntity : AbstractBasicEntity, IHaveTags, IDamageable, IHaveCustomProperties, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, IBelongToFaction Inheritance object Entity AbstractBasicEntity DamageableEntity Implements IHaveTags IDamageable IHaveCustomProperties IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture IBelongToFaction Derived AbstractCreature Inherited Members AbstractBasicEntity.OnEntityRegisterAdditionalProperties() AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.GetConfigTable() Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnDoRecycle() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DamageableEntity() public DamageableEntity() Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; protected set; } Property Value BindableProperty<Faction> HealthProperty Get the health property of the entity public IHealthProperty HealthProperty { get; } Property Value IHealthProperty IsInvincible If the entity is invincible public BindableProperty<bool> IsInvincible { get; } Property Value BindableProperty<bool> Methods CheckCanTakeDamage(IBelongToFaction) public bool CheckCanTakeDamage(IBelongToFaction damageDealer) Parameters damageDealer IBelongToFaction Returns bool GetCurrentHealth() Get the current health of the entity public int GetCurrentHealth() Returns int GetDefaultFaction() protected abstract Faction GetDefaultFaction() Returns Faction GetMaxHealth() Get the max health of the entity public int GetMaxHealth() Returns int Heal(int, IBelongToFaction) Heal the entity public void Heal(int healAmount, IBelongToFaction healer) Parameters healAmount int The amount of heal healer IBelongToFaction Healer OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnRegisterProperties() protected override void OnRegisterProperties() OnTakeDamageAdditionalCheck(int, IBelongToFaction) public virtual int OnTakeDamageAdditionalCheck(int damage, IBelongToFaction damageDealer) Parameters damage int damageDealer IBelongToFaction Returns int RegisterOnHeal(OnHeal) Register the event when the entity is healed public IUnRegister RegisterOnHeal(OnHeal onHeal) Parameters onHeal OnHeal Returns IUnRegister RegisterOnTakeDamage(OnTakeDamage) Register the event when the entity takes damage public IUnRegister RegisterOnTakeDamage(OnTakeDamage onTakeDamage) Parameters onTakeDamage OnTakeDamage Returns IUnRegister TakeDamage(int, IBelongToFaction) Will not take damage if the damage dealer is in the same faction Will take 0 damage if the entity is invincible public void TakeDamage(int damage, IBelongToFaction damageDealer) Parameters damage int damageDealer IBelongToFaction UnRegisterOnHeal(OnHeal) Unregister the event when the entity is healed public void UnRegisterOnHeal(OnHeal onHeal) Parameters onHeal OnHeal UnRegisterOnTakeDamage(OnTakeDamage) Unregister the event when the entity takes damage public void UnRegisterOnTakeDamage(OnTakeDamage onTakeDamage) Parameters onTakeDamage OnTakeDamage"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.IDamageable.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.IDamageable.html",
    "title": "Interface IDamageable | Capstone documentation",
    "keywords": "Interface IDamageable Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll public interface IDamageable : IHaveCustomProperties, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, IBelongToFaction Inherited Members IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) Properties HealthProperty Get the health property of the entity IHealthProperty HealthProperty { get; } Property Value IHealthProperty IsInvincible If the entity is invincible BindableProperty<bool> IsInvincible { get; } Property Value BindableProperty<bool> Methods CheckCanTakeDamage(IBelongToFaction) bool CheckCanTakeDamage(IBelongToFaction damageDealer) Parameters damageDealer IBelongToFaction Returns bool GetCurrentHealth() Get the current health of the entity int GetCurrentHealth() Returns int GetMaxHealth() Get the max health of the entity int GetMaxHealth() Returns int Heal(int, IBelongToFaction) Heal the entity void Heal(int healAmount, IBelongToFaction healer) Parameters healAmount int The amount of heal healer IBelongToFaction Healer RegisterOnHeal(OnHeal) Register the event when the entity is healed IUnRegister RegisterOnHeal(OnHeal onHeal) Parameters onHeal OnHeal Returns IUnRegister RegisterOnTakeDamage(OnTakeDamage) Register the event when the entity takes damage IUnRegister RegisterOnTakeDamage(OnTakeDamage onTakeDamage) Parameters onTakeDamage OnTakeDamage Returns IUnRegister TakeDamage(int, IBelongToFaction) Deal damage to the entity void TakeDamage(int damage, IBelongToFaction damageDealer) Parameters damage int the amount of damage damageDealer IBelongToFaction the damage dealer entity UnRegisterOnHeal(OnHeal) Unregister the event when the entity is healed void UnRegisterOnHeal(OnHeal onHeal) Parameters onHeal OnHeal UnRegisterOnTakeDamage(OnTakeDamage) Unregister the event when the entity takes damage void UnRegisterOnTakeDamage(OnTakeDamage onTakeDamage) Parameters onTakeDamage OnTakeDamage"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnHeal.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnHeal.html",
    "title": "Delegate OnHeal | Capstone documentation",
    "keywords": "Delegate OnHeal Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll Delegate for healing Note that heal amount is the valid heal amount, meaning that if the real heal amount + current health > max health, the valid heal amount will be max health - current health; else the valid heal amount will be the real heal amount public delegate void OnHeal(int healAmount, int currentHealth, IBelongToFaction healer) Parameters healAmount int currentHealth int healer IBelongToFaction"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnHealUnRegister.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnHealUnRegister.html",
    "title": "Class OnHealUnRegister | Capstone documentation",
    "keywords": "Class OnHealUnRegister Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll public class OnHealUnRegister : IUnRegister Inheritance object OnHealUnRegister Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors OnHealUnRegister(IDamageable, OnHeal) public OnHealUnRegister(IDamageable damageable, OnHeal onEvent) Parameters damageable IDamageable onEvent OnHeal Properties Damageable public IDamageable Damageable { get; set; } Property Value IDamageable OnEvent public OnHeal OnEvent { get; set; } Property Value OnHeal Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnTakeDamage.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnTakeDamage.html",
    "title": "Delegate OnTakeDamage | Capstone documentation",
    "keywords": "Delegate OnTakeDamage Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll Delegate for taking damage Note that damage is the valid damage, meaning that if the real damage > current health, the valid damage will be current health; else the valid damage will be the real damage public delegate void OnTakeDamage(int damage, int currentHealth, IBelongToFaction damageDealer) Parameters damage int currentHealth int damageDealer IBelongToFaction"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnTakeDamageUnRegister.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.OnTakeDamageUnRegister.html",
    "title": "Class OnTakeDamageUnRegister | Capstone documentation",
    "keywords": "Class OnTakeDamageUnRegister Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Assembly MainGame.dll public class OnTakeDamageUnRegister : IUnRegister Inheritance object OnTakeDamageUnRegister Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors OnTakeDamageUnRegister(IDamageable, OnTakeDamage) public OnTakeDamageUnRegister(IDamageable damageable, OnTakeDamage onEvent) Parameters damageable IDamageable onEvent OnTakeDamage Properties Damageable public IDamageable Damageable { get; set; } Property Value IDamageable OnEvent public OnTakeDamage OnEvent { get; set; } Property Value OnTakeDamage Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable.html",
    "title": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Classes DamageableEntity Health is auto registered OnHealUnRegister OnTakeDamageUnRegister Interfaces IDamageable Delegates OnHeal Delegate for healing Note that heal amount is the valid heal amount, meaning that if the real heal amount + current health > max health, the valid heal amount will be max health - current health; else the valid heal amount will be the real heal amount OnTakeDamage Delegate for taking damage Note that damage is the valid damage, meaning that if the real damage > current health, the valid damage will be current health; else the valid damage will be the real damage"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.Faction.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.Faction.html",
    "title": "Enum Faction | Capstone documentation",
    "keywords": "Enum Faction Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Factions Assembly MainGame.dll Faction of the entity. It is normally used to detect if the entity can be attacked when hurt by some other entity. public enum Faction Fields Friendly = 0 Hostile = 2 Neutral = 1"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.IBelongToFaction.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.IBelongToFaction.html",
    "title": "Interface IBelongToFaction | Capstone documentation",
    "keywords": "Interface IBelongToFaction Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Factions Assembly MainGame.dll public interface IBelongToFaction Properties CurrentFaction Faction can be changed during runtime BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Methods IsSameFaction(IBelongToFaction) Detect if the other entity is in the same faction bool IsSameFaction(IBelongToFaction other) Parameters other IBelongToFaction Returns bool"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Factions.html",
    "title": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Factions | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Factions Interfaces IBelongToFaction Enums Faction Faction of the entity. It is normally used to detect if the entity can be attacked when hurt by some other entity."
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.IHaveTags.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.IHaveTags.html",
    "title": "Interface IHaveTags | Capstone documentation",
    "keywords": "Interface IHaveTags Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Tags Assembly MainGame.dll public interface IHaveTags : IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Methods GetTagProperty() ITagProperty GetTagProperty() Returns ITagProperty"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.Tag.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.Tag.html",
    "title": "Struct Tag | Capstone documentation",
    "keywords": "Struct Tag Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Tags Assembly MainGame.dll public struct Tag Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Tag(TagName, int) public Tag(TagName name, int level) Parameters name TagName level int Fields Level public int Level Field Value int Name public TagName Name Field Value TagName"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.Tags.html",
    "title": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Tags | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates.Tags Structs Tag Interfaces IHaveTags"
  },
  "api/Runtime.DataFramework.Entities.ClassifiedTemplates.html": {
    "href": "api/Runtime.DataFramework.Entities.ClassifiedTemplates.html",
    "title": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.ClassifiedTemplates Namespaces Runtime.DataFramework.Entities.ClassifiedTemplates.CustomProperties Runtime.DataFramework.Entities.ClassifiedTemplates.Damagable Runtime.DataFramework.Entities.ClassifiedTemplates.Factions Runtime.DataFramework.Entities.ClassifiedTemplates.Tags"
  },
  "api/Runtime.DataFramework.Entities.CommonEntityModel.html": {
    "href": "api/Runtime.DataFramework.Entities.CommonEntityModel.html",
    "title": "Class CommonEntityModel | Capstone documentation",
    "keywords": "Class CommonEntityModel Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public class CommonEntityModel : EntityModel<IEntity>, ICommonEntityModel, IEntityModel<IEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel EntityModel<IEntity> CommonEntityModel Implements ICommonEntityModel IEntityModel<IEntity> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members EntityModel<IEntity>.entityBuilderFactory EntityModel<IEntity>.entities EntityModel<IEntity>.OnInit() EntityModel<IEntity>.OnEntityBuilt(IEntity) EntityModel<IEntity>.GetEntity(string) EntityModel<IEntity>.RemoveEntity(string) EntityModel<IEntity>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBuilder<TEntity>(int, bool) Get the BasicEntityBuilder for the entity type public BasicEntityBuilder<TEntity> GetBuilder<TEntity>(int rarity, bool addToModelOnceBuilt = true) where TEntity : class, IEntity, new() Parameters rarity int addToModelOnceBuilt bool Returns BasicEntityBuilder<TEntity> Type Parameters TEntity GetBuilder<TBuilder, TEntity>(int, bool) Get the general builder for the entity type public TBuilder GetBuilder<TBuilder, TEntity>(int rarity, bool addToModelOnceBuilt = true) where TBuilder : EntityBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Parameters rarity int addToModelOnceBuilt bool Once the entity is built, add it to the model Returns TBuilder Type Parameters TBuilder The type of the builder you want to use You need to make sure that builder is okay to build the target entity TEntity GetEntity<T>(string) public T GetEntity<T>(string id) where T : class, IEntity Parameters id string Returns T Type Parameters T"
  },
  "api/Runtime.DataFramework.Entities.Creatures.AbstractCreature.html": {
    "href": "api/Runtime.DataFramework.Entities.Creatures.AbstractCreature.html",
    "title": "Class AbstractCreature | Capstone documentation",
    "keywords": "Class AbstractCreature Namespace Runtime.DataFramework.Entities.Creatures Assembly MainGame.dll public abstract class AbstractCreature : DamageableEntity, ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity DamageableEntity AbstractCreature Implements ICreature IDamageable IBelongToFaction IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived EnemyEntity<T> PlayerEntity Inherited Members DamageableEntity.CurrentFaction DamageableEntity.IsInvincible DamageableEntity.HealthProperty DamageableEntity.OnEntityStart(bool) DamageableEntity.OnRegisterProperties() DamageableEntity.GetDefaultFaction() DamageableEntity.GetMaxHealth() DamageableEntity.GetCurrentHealth() DamageableEntity.TakeDamage(int, IBelongToFaction) DamageableEntity.OnTakeDamageAdditionalCheck(int, IBelongToFaction) DamageableEntity.CheckCanTakeDamage(IBelongToFaction) DamageableEntity.RegisterOnTakeDamage(OnTakeDamage) DamageableEntity.UnRegisterOnTakeDamage(OnTakeDamage) DamageableEntity.Heal(int, IBelongToFaction) DamageableEntity.RegisterOnHeal(OnHeal) DamageableEntity.UnRegisterOnHeal(OnHeal) AbstractBasicEntity.OnEntityRegisterAdditionalProperties() AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.GetConfigTable() Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnDoRecycle() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Runtime.DataFramework.Entities.Creatures.CreatureBuilder-2.html": {
    "href": "api/Runtime.DataFramework.Entities.Creatures.CreatureBuilder-2.html",
    "title": "Class CreatureBuilder<TBuilder, TEntity> | Capstone documentation",
    "keywords": "Class CreatureBuilder<TBuilder, TEntity> Namespace Runtime.DataFramework.Entities.Creatures Assembly MainGame.dll public abstract class CreatureBuilder<TBuilder, TEntity> : EntityBuilder<TBuilder, TEntity>, IPoolable where TBuilder : CreatureBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Type Parameters TBuilder TEntity Inheritance object EntityBuilder<TBuilder, TEntity> CreatureBuilder<TBuilder, TEntity> Implements IPoolable Derived EnemyBuilder<T> PlayerBuilder<T> Inherited Members EntityBuilder<TBuilder, TEntity>.Entity EntityBuilder<TBuilder, TEntity>.onEntityCreated EntityBuilder<TBuilder, TEntity>.RegisterOnEntityCreated(Action<TEntity>) EntityBuilder<TBuilder, TEntity>.CheckEntity() EntityBuilder<TBuilder, TEntity>.OverrideName(string) EntityBuilder<TBuilder, TEntity>.FromConfig(ConfigTable) EntityBuilder<TBuilder, TEntity>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<TBuilder, TEntity>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<TBuilder, TEntity>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<TBuilder, TEntity>.AddTag(TagName, int) EntityBuilder<TBuilder, TEntity>.Build() EntityBuilder<TBuilder, TEntity>.OnRecycled() EntityBuilder<TBuilder, TEntity>.IsRecycled EntityBuilder<TBuilder, TEntity>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetHealth(HealthInfo, IPropertyDependencyModifier<HealthInfo>) public TBuilder SetHealth(HealthInfo healthInfo, IPropertyDependencyModifier<HealthInfo> modifier = null) Parameters healthInfo HealthInfo modifier IPropertyDependencyModifier<HealthInfo> Returns TBuilder SetHealthModifier(IPropertyDependencyModifier<HealthInfo>) public TBuilder SetHealthModifier(IPropertyDependencyModifier<HealthInfo> modifier = null) Parameters modifier IPropertyDependencyModifier<HealthInfo> Returns TBuilder SetInvincible(bool) public TBuilder SetInvincible(bool isInvincible) Parameters isInvincible bool Returns TBuilder"
  },
  "api/Runtime.DataFramework.Entities.Creatures.ICreature.html": {
    "href": "api/Runtime.DataFramework.Entities.Creatures.ICreature.html",
    "title": "Interface ICreature | Capstone documentation",
    "keywords": "Interface ICreature Namespace Runtime.DataFramework.Entities.Creatures Assembly MainGame.dll public interface ICreature : IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IDamageable.HealthProperty IDamageable.GetMaxHealth() IDamageable.GetCurrentHealth() IDamageable.TakeDamage(int, IBelongToFaction) IDamageable.RegisterOnTakeDamage(OnTakeDamage) IDamageable.UnRegisterOnTakeDamage(OnTakeDamage) IDamageable.Heal(int, IBelongToFaction) IDamageable.RegisterOnHeal(OnHeal) IDamageable.UnRegisterOnHeal(OnHeal) IDamageable.IsInvincible IDamageable.CheckCanTakeDamage(IBelongToFaction) IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture()"
  },
  "api/Runtime.DataFramework.Entities.Creatures.html": {
    "href": "api/Runtime.DataFramework.Entities.Creatures.html",
    "title": "Namespace Runtime.DataFramework.Entities.Creatures | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities.Creatures Classes AbstractCreature CreatureBuilder<TBuilder, TEntity> Interfaces ICreature"
  },
  "api/Runtime.DataFramework.Entities.Entity.html": {
    "href": "api/Runtime.DataFramework.Entities.Entity.html",
    "title": "Class Entity | Capstone documentation",
    "keywords": "Class Entity Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public abstract class Entity : IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity Implements IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived AbstractBasicEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Entity() public Entity() Fields configTable protected ConfigTable configTable Field Value ConfigTable onEntityRecycled protected Action<IEntity> onEntityRecycled Field Value Action<IEntity> Properties EntityName public abstract string EntityName { get; set; } Property Value string IsRecycled public bool IsRecycled { get; set; } Property Value bool UUID public string UUID { get; protected set; } Property Value string Methods GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture GetConfigTable() protected abstract ConfigTable GetConfigTable() Returns ConfigTable GetDescription() Get the description of the object. public string GetDescription() Returns string GetDisplayName() Get the display name of the object. public virtual string GetDisplayName() Returns string GetProperty(PropertyName) Get a property by name, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead public IPropertyBase GetProperty(PropertyName name) Parameters name PropertyName Returns IPropertyBase GetProperty(PropertyNameInfo) Get a property by full name, return null if not found This can retrieve those nested properties (in PropertyDict, PropertyList, etc.) e.g. GetProperty(\"custom_properties.attack.damage\") public IPropertyBase GetProperty(PropertyNameInfo name) Parameters name PropertyNameInfo Returns IPropertyBase GetProperty(Type) Return a property if you know its type, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead public IPropertyBase GetProperty(Type type) Parameters type Type Returns IPropertyBase GetProperty<T>() Return a property if you know its type, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead public T GetProperty<T>() where T : class, IPropertyBase Returns T Type Parameters T GetProperty<T>(PropertyNameInfo) Get a property by full name, return null if not found This can retrieve those nested properties (in PropertyDict, PropertyList, etc.) This will auto convert the property to the given type public T GetProperty<T>(PropertyNameInfo name) where T : class, IPropertyBase Parameters name PropertyNameInfo Returns T Type Parameters T HasProperty(PropertyNameInfo) public bool HasProperty(PropertyNameInfo nameInfo) Parameters nameInfo PropertyNameInfo Returns bool InitProperty(IPropertyBase) protected void InitProperty(IPropertyBase property) Parameters property IPropertyBase Initialize() public void Initialize() LoadPropertyBaseValueFromConfig(ConfigTable) public void LoadPropertyBaseValueFromConfig(ConfigTable overrideTable = null) Parameters overrideTable ConfigTable OnAllocate() public void OnAllocate() OnDoRecycle() public abstract void OnDoRecycle() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected abstract void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnGetDescription(string) Return the description of the entity protected abstract string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnLoadFromSave() public void OnLoadFromSave() OnRecycle() public abstract void OnRecycle() OnRecycled() public void OnRecycled() OnRegisterProperties() protected abstract void OnRegisterProperties() OnStart(bool) After the entity is built, or loaded from save, this will be called public virtual void OnStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool RecycleToCache() public void RecycleToCache() RegisterInitialProperty<T>(T) Register a property to the entity. This must be called before the entity is initialized To register a property after the entity is initialized, use RegisterTempProperty public void RegisterInitialProperty<T>(T property) where T : IPropertyBase Parameters property T Type Parameters T RegisterOnEntityRecycled(Action<IEntity>) public IUnRegister RegisterOnEntityRecycled(Action<IEntity> onEntityRecycled) Parameters onEntityRecycled Action<IEntity> Returns IUnRegister RegisterTempProperty<T>(T, string, bool, bool) Register a property to the entity. The property will be removed once the entity is recycled public void RegisterTempProperty<T>(T property, string overriddenName, bool isRoot, bool alsoInitialize = true) where T : IPropertyBase Parameters property T overriddenName string isRoot bool alsoInitialize bool Type Parameters T SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Set the base value of all properties with the given name public void SetPropertyBaseValue<T>(PropertyNameInfo name, T value, IPropertyDependencyModifier<T> modifier = null) Parameters name PropertyNameInfo value T modifier IPropertyDependencyModifier<T> Type Parameters T SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Set the modifier of all properties with the given name public void SetPropertyModifier<T>(PropertyNameInfo name, IPropertyDependencyModifier<T> modifier) Parameters name PropertyNameInfo modifier IPropertyDependencyModifier<T> Type Parameters T TryGetProperty(PropertyNameInfo, out IPropertyBase) public bool TryGetProperty(PropertyNameInfo nameInfo, out IPropertyBase property) Parameters nameInfo PropertyNameInfo property IPropertyBase Returns bool UnRegisterOnEntityRecycled(Action<IEntity>) public void UnRegisterOnEntityRecycled(Action<IEntity> onEntityRecycled) Parameters onEntityRecycled Action<IEntity>"
  },
  "api/Runtime.DataFramework.Entities.EntityModel-1.html": {
    "href": "api/Runtime.DataFramework.Entities.EntityModel-1.html",
    "title": "Class EntityModel<T> | Capstone documentation",
    "keywords": "Class EntityModel<T> Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public abstract class EntityModel<T> : AbstractSavableModel, ISavableModel, IEntityModel<T>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : IEntity Type Parameters T Inheritance object AbstractModel AbstractSavableModel EntityModel<T> Implements ISavableModel IEntityModel<T> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Derived CommonEntityModel EnemyEntityModel GameResourceModel<T> GamePlayerModel Inherited Members AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields entities protected Dictionary<string, T> entities Field Value Dictionary<string, T> entityBuilderFactory protected IEntityBuilderFactory entityBuilderFactory Field Value IEntityBuilderFactory Properties EntityCount public int EntityCount { get; } Property Value int Methods GetEntity(string) public T GetEntity(string id) Parameters id string Returns T OnEntityBuilt(T) protected virtual void OnEntityBuilt(T entity) Parameters entity T OnInit() protected override void OnInit() RemoveEntity(string) public virtual bool RemoveEntity(string id) Parameters id string Returns bool"
  },
  "api/Runtime.DataFramework.Entities.EntityOnRecycledUnRegister.html": {
    "href": "api/Runtime.DataFramework.Entities.EntityOnRecycledUnRegister.html",
    "title": "Class EntityOnRecycledUnRegister | Capstone documentation",
    "keywords": "Class EntityOnRecycledUnRegister Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public class EntityOnRecycledUnRegister : IUnRegister Inheritance object EntityOnRecycledUnRegister Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors EntityOnRecycledUnRegister(IEntity, Action<IEntity>) public EntityOnRecycledUnRegister(IEntity entity, Action<IEntity> onEntityRecycled) Parameters entity IEntity onEntityRecycled Action<IEntity> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.DataFramework.Entities.EntityPropertyDependencyCache.html": {
    "href": "api/Runtime.DataFramework.Entities.EntityPropertyDependencyCache.html",
    "title": "Class EntityPropertyDependencyCache | Capstone documentation",
    "keywords": "Class EntityPropertyDependencyCache Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public static class EntityPropertyDependencyCache Inheritance object EntityPropertyDependencyCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ClearCache() public static void ClearCache() GetInitializationOrder(string, Dictionary<string, IPropertyBase>) public static List<string> GetInitializationOrder(string EntityName, Dictionary<string, IPropertyBase> Properties) Parameters EntityName string Properties Dictionary<string, IPropertyBase> Returns List<string>"
  },
  "api/Runtime.DataFramework.Entities.GlobalEntities.html": {
    "href": "api/Runtime.DataFramework.Entities.GlobalEntities.html",
    "title": "Class GlobalEntities | Capstone documentation",
    "keywords": "Class GlobalEntities Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public static class GlobalEntities Inheritance object GlobalEntities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEntityAndModel(string) public static (IEntity, IEntityModel) GetEntityAndModel(string uuid) Parameters uuid string Returns (IEntity, IEntityModel) RegisterEntity(IEntity, IEntityModel) public static void RegisterEntity(IEntity entity, IEntityModel model) Parameters entity IEntity model IEntityModel Reset() public static void Reset() UnregisterEntity(string) public static void UnregisterEntity(string uuid) Parameters uuid string"
  },
  "api/Runtime.DataFramework.Entities.ICommonEntityModel.html": {
    "href": "api/Runtime.DataFramework.Entities.ICommonEntityModel.html",
    "title": "Interface ICommonEntityModel | Capstone documentation",
    "keywords": "Interface ICommonEntityModel Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public interface ICommonEntityModel : IEntityModel<IEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IEntityModel<IEntity>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetBuilder<TEntity>(int, bool) Get the BasicEntityBuilder for the entity type BasicEntityBuilder<TEntity> GetBuilder<TEntity>(int rarity, bool addToModelOnceBuilt = true) where TEntity : class, IEntity, new() Parameters rarity int addToModelOnceBuilt bool Returns BasicEntityBuilder<TEntity> Type Parameters TEntity GetBuilder<TBuilder, TEntity>(int, bool) Get the general builder for the entity type TBuilder GetBuilder<TBuilder, TEntity>(int rarity, bool addToModelOnceBuilt = true) where TBuilder : EntityBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Parameters rarity int addToModelOnceBuilt bool Once the entity is built, add it to the model Returns TBuilder Type Parameters TBuilder The type of the builder you want to use You need to make sure that builder is okay to build the target entity TEntity GetEntity<T>(string) T GetEntity<T>(string id) where T : class, IEntity Parameters id string Returns T Type Parameters T"
  },
  "api/Runtime.DataFramework.Entities.IEntity.html": {
    "href": "api/Runtime.DataFramework.Entities.IEntity.html",
    "title": "Interface IEntity | Capstone documentation",
    "keywords": "Interface IEntity Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public interface IEntity : IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Properties EntityName string EntityName { get; set; } Property Value string UUID string UUID { get; } Property Value string Methods GetProperty(PropertyName) Get a property by name, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead IPropertyBase GetProperty(PropertyName name) Parameters name PropertyName Returns IPropertyBase GetProperty(PropertyNameInfo) Get a property by full name, return null if not found This can retrieve those nested properties (in PropertyDict, PropertyList, etc.) e.g. GetProperty(\"custom_properties.attack.damage\") IPropertyBase GetProperty(PropertyNameInfo name) Parameters name PropertyNameInfo Returns IPropertyBase GetProperty(Type) Return a property if you know its type, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead IPropertyBase GetProperty(Type type) Parameters type Type Returns IPropertyBase GetProperty<T>() Return a property if you know its type, return null if not found This will not retrieve those nested properties (in PropertyDict, PropertyList, etc.) To retrieve nested properties, use the one that takes full name instead T GetProperty<T>() where T : class, IPropertyBase Returns T Type Parameters T GetProperty<T>(PropertyNameInfo) Get a property by full name, return null if not found This can retrieve those nested properties (in PropertyDict, PropertyList, etc.) This will auto convert the property to the given type T GetProperty<T>(PropertyNameInfo name) where T : class, IPropertyBase Parameters name PropertyNameInfo Returns T Type Parameters T HasProperty(PropertyNameInfo) bool HasProperty(PropertyNameInfo nameInfo) Parameters nameInfo PropertyNameInfo Returns bool Initialize() void Initialize() LoadPropertyBaseValueFromConfig(ConfigTable) void LoadPropertyBaseValueFromConfig(ConfigTable overrideTable = null) Parameters overrideTable ConfigTable OnAllocate() void OnAllocate() OnLoadFromSave() void OnLoadFromSave() OnStart(bool) After the entity is built, or loaded from save, this will be called void OnStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool RegisterInitialProperty<T>(T) Register a property to the entity. This must be called before the entity is initialized To register a property after the entity is initialized, use RegisterTempProperty void RegisterInitialProperty<T>(T property) where T : IPropertyBase Parameters property T Type Parameters T RegisterOnEntityRecycled(Action<IEntity>) IUnRegister RegisterOnEntityRecycled(Action<IEntity> onEntityRecycled) Parameters onEntityRecycled Action<IEntity> Returns IUnRegister RegisterTempProperty<T>(T, string, bool, bool) Register a property to the entity. The property will be removed once the entity is recycled void RegisterTempProperty<T>(T property, string overriddenName, bool isRoot, bool alsoInitialize = true) where T : IPropertyBase Parameters property T overriddenName string isRoot bool alsoInitialize bool Type Parameters T SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Set the base value of all properties with the given name void SetPropertyBaseValue<T>(PropertyNameInfo name, T value, IPropertyDependencyModifier<T> modifier = null) Parameters name PropertyNameInfo value T modifier IPropertyDependencyModifier<T> Type Parameters T SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Set the modifier of all properties with the given name void SetPropertyModifier<T>(PropertyNameInfo name, IPropertyDependencyModifier<T> modifier) Parameters name PropertyNameInfo modifier IPropertyDependencyModifier<T> Type Parameters T TryGetProperty(PropertyNameInfo, out IPropertyBase) bool TryGetProperty(PropertyNameInfo nameInfo, out IPropertyBase property) Parameters nameInfo PropertyNameInfo property IPropertyBase Returns bool UnRegisterOnEntityRecycled(Action<IEntity>) void UnRegisterOnEntityRecycled(Action<IEntity> onEntityRecycled) Parameters onEntityRecycled Action<IEntity>"
  },
  "api/Runtime.DataFramework.Entities.IEntityModel-1.html": {
    "href": "api/Runtime.DataFramework.Entities.IEntityModel-1.html",
    "title": "Interface IEntityModel<T> | Capstone documentation",
    "keywords": "Interface IEntityModel<T> Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public interface IEntityModel<T> : IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : IEntity Type Parameters T Inherited Members IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Methods GetEntity(string) T GetEntity(string id) Parameters id string Returns T"
  },
  "api/Runtime.DataFramework.Entities.IEntityModel.html": {
    "href": "api/Runtime.DataFramework.Entities.IEntityModel.html",
    "title": "Interface IEntityModel | Capstone documentation",
    "keywords": "Interface IEntityModel Namespace Runtime.DataFramework.Entities Assembly MainGame.dll public interface IEntityModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Properties EntityCount int EntityCount { get; } Property Value int Methods GetEntity(string) IEntity GetEntity(string id) Parameters id string Returns IEntity RemoveEntity(string) bool RemoveEntity(string id) Parameters id string Returns bool"
  },
  "api/Runtime.DataFramework.Entities.html": {
    "href": "api/Runtime.DataFramework.Entities.html",
    "title": "Namespace Runtime.DataFramework.Entities | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Entities Namespaces Runtime.DataFramework.Entities.Builders Runtime.DataFramework.Entities.ClassifiedTemplates Runtime.DataFramework.Entities.Creatures Classes AbstractBasicEntity Basically all entities inherit from this class. Auto register the custom properties, rarity, and tags CommonEntityModel Entity EntityModel<T> EntityOnRecycledUnRegister EntityPropertyDependencyCache GlobalEntities Interfaces ICommonEntityModel IEntity IEntityModel IEntityModel<T>"
  },
  "api/Runtime.DataFramework.Properties.AbstractLoadFromConfigProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.AbstractLoadFromConfigProperty-1.html",
    "title": "Class AbstractLoadFromConfigProperty<T> | Capstone documentation",
    "keywords": "Class AbstractLoadFromConfigProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class AbstractLoadFromConfigProperty<T> : Property<T>, IProperty<T>, ILoadFromConfigProperty, IPropertyBase Type Parameters T Inheritance object Property<T> AbstractLoadFromConfigProperty<T> Implements IProperty<T> ILoadFromConfigProperty IPropertyBase Derived TestAttackRange TestDanger TestHealth TestVigiliance Danger Health MaxStack AmmoSize AttackSpeed BaseDamage BulletSpeed BulletsPerShot ChargeSpeed Range Recoil ReloadSpeed ScopeRecoil Spread Inherited Members Property<T>.PropertyName Property<T>.fullName Property<T>.BaseValue Property<T>.InitialValue Property<T>.RealValue Property<T>.overrideDependentProperties Property<T>.SetBaseValue(T) Property<T>.OnSetFullName(string) Property<T>.GetFullName() Property<T>.modifier Property<T>.OnRecycled() Property<T>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<T>.GetDefautModifier() Property<T>.GetPropertyName() Property<T>.GetDefaultDependentProperties() Property<T>.GetDependentProperties() Property<T>.SetDependentProperties(params PropertyNameInfo[]) Property<T>.Initialize(IPropertyBase[], string) Property<T>.OnClone(T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbstractLoadFromConfigProperty() public AbstractLoadFromConfigProperty() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.AutoConfigCustomProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.AutoConfigCustomProperty.html",
    "title": "Class AutoConfigCustomProperty | Capstone documentation",
    "keywords": "Class AutoConfigCustomProperty Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll If you don't want to manually specify custom property data, you can use this class to create a Custom property. However, this class is data only, which means you can't set any default modifiers for any Custom data (although you can use the builder to override, but the generic type of your modifier MUST BE dynamic in this case!!). Also, data is only loaded from config file. Moreover, all Custom data in the config file will be automatically loaded into this class, with type of dynamic. To customize the description of this Custom, you need to assign a data only Custom description getter. This is particularly useful if ALL of its data is primitive type, and you don't want to manually specify them. If any of its data is complex type, the complex data will be a dynamic object (ExpandoObject). So it's better to use CustomProperty instead. public class AutoConfigCustomProperty : CustomProperty, ICustomProperty, IPropertyDictionary<string, ICustomDataProperty>, IDictionaryProperty<string, ICustomDataProperty>, IProperty<Dictionary<string, ICustomDataProperty>>, IHaveSubProperties, IPropertyBase Inheritance object Property<Dictionary<string, ICustomDataProperty>> PropertyDictionary<string, ICustomDataProperty> CustomProperty AutoConfigCustomProperty Implements ICustomProperty IPropertyDictionary<string, ICustomDataProperty> IDictionaryProperty<string, ICustomDataProperty> IProperty<Dictionary<string, ICustomDataProperty>> IHaveSubProperties IPropertyBase Inherited Members CustomProperty.propertyName CustomProperty.descriptionGetter CustomProperty.GetDefautModifier() CustomProperty.GetPropertyName() CustomProperty.GetDefaultDependentProperties() CustomProperty.GetKey(ICustomDataProperty) CustomProperty.GetCustomDataValue(string) CustomProperty.GetCustomDataValue<T>(string) CustomProperty.GetCustomPropertyName() CustomProperty.OnGetDescription() CustomProperty.GetCustomDataProperty(string) CustomProperty.GetCustomDataProperty<T>(string) CustomProperty.RegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) CustomProperty.RegisterOnCustomDataChanged(Action<ICustomProperty>) CustomProperty.UnRegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) CustomProperty.UnRegisterOnCustomDataChanged(Action<ICustomProperty>) CustomProperty.Initialize(IPropertyBase[], string) CustomProperty.OnLoadFromSavedData() PropertyDictionary<string, ICustomDataProperty>.BaseValue PropertyDictionary<string, ICustomDataProperty>.RealValue PropertyDictionary<string, ICustomDataProperty>.RealValues PropertyDictionary<string, ICustomDataProperty>.InitialValue PropertyDictionary<string, ICustomDataProperty>.GetKey(ICustomDataProperty) PropertyDictionary<string, ICustomDataProperty>.OnLoadFromSavedData() PropertyDictionary<string, ICustomDataProperty>.SetBaseValue(Dictionary<string, ICustomDataProperty>) PropertyDictionary<string, ICustomDataProperty>.OnSetChildFullName() PropertyDictionary<string, ICustomDataProperty>.AddToRealValue(ICustomDataProperty) PropertyDictionary<string, ICustomDataProperty>.RemoveFromRealValue(string) PropertyDictionary<string, ICustomDataProperty>.OnClone(Dictionary<string, ICustomDataProperty>) PropertyDictionary<string, ICustomDataProperty>.Initialize(IPropertyBase[], string) PropertyDictionary<string, ICustomDataProperty>.GetChildProperties() PropertyDictionary<string, ICustomDataProperty>.requestRegisterProperty PropertyDictionary<string, ICustomDataProperty>.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomDataProperty>.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomDataProperty>.GetDefaultDependentProperties() PropertyDictionary<string, ICustomDataProperty>.OnRecycled() Property<Dictionary<string, ICustomDataProperty>>.PropertyName Property<Dictionary<string, ICustomDataProperty>>.fullName Property<Dictionary<string, ICustomDataProperty>>.BaseValue Property<Dictionary<string, ICustomDataProperty>>.InitialValue Property<Dictionary<string, ICustomDataProperty>>.RealValue Property<Dictionary<string, ICustomDataProperty>>.overrideDependentProperties Property<Dictionary<string, ICustomDataProperty>>.SetBaseValue(Dictionary<string, ICustomDataProperty>) Property<Dictionary<string, ICustomDataProperty>>.OnSetFullName(string) Property<Dictionary<string, ICustomDataProperty>>.GetFullName() Property<Dictionary<string, ICustomDataProperty>>.modifier Property<Dictionary<string, ICustomDataProperty>>.OnRecycled() Property<Dictionary<string, ICustomDataProperty>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<string, ICustomDataProperty>>.GetDefautModifier() Property<Dictionary<string, ICustomDataProperty>>.GetPropertyName() Property<Dictionary<string, ICustomDataProperty>>.GetDefaultDependentProperties() Property<Dictionary<string, ICustomDataProperty>>.GetDependentProperties() Property<Dictionary<string, ICustomDataProperty>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<string, ICustomDataProperty>>.Initialize(IPropertyBase[], string) Property<Dictionary<string, ICustomDataProperty>>.OnClone(Dictionary<string, ICustomDataProperty>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AutoConfigCustomProperty() public AutoConfigCustomProperty() AutoConfigCustomProperty(string, IDescriptionGetter<ICustomProperty>) public AutoConfigCustomProperty(string CustomName, IDescriptionGetter<ICustomProperty> descriptionGetter = null) Parameters CustomName string descriptionGetter IDescriptionGetter<ICustomProperty> Methods OnGetBaseValueFromConfig(dynamic) public override Dictionary<string, ICustomDataProperty> OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns Dictionary<string, ICustomDataProperty> OnRecycled() public override void OnRecycled()"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.CustomDataProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.CustomDataProperty-1.html",
    "title": "Class CustomDataProperty<T> | Capstone documentation",
    "keywords": "Class CustomDataProperty<T> Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public class CustomDataProperty<T> : Property<T>, ICustomDataProperty<T>, ICustomDataProperty, IProperty<T>, IPropertyBase Type Parameters T Inheritance object Property<T> CustomDataProperty<T> Implements ICustomDataProperty<T> ICustomDataProperty IProperty<T> IPropertyBase Inherited Members Property<T>.PropertyName Property<T>.fullName Property<T>.BaseValue Property<T>.InitialValue Property<T>.RealValue Property<T>.overrideDependentProperties Property<T>.SetBaseValue(T) Property<T>.OnSetFullName(string) Property<T>.GetFullName() Property<T>.modifier Property<T>.OnRecycled() Property<T>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<T>.GetDependentProperties() Property<T>.SetDependentProperties(params PropertyNameInfo[]) Property<T>.Initialize(IPropertyBase[], string) Property<T>.OnClone(T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomDataProperty() public CustomDataProperty() CustomDataProperty(string, IPropertyDependencyModifier<T>, PropertyNameInfo[]) public CustomDataProperty(string customDataName, IPropertyDependencyModifier<T> modifier = null, PropertyNameInfo[] defaultDependencies = null) Parameters customDataName string modifier IPropertyDependencyModifier<T> defaultDependencies PropertyNameInfo[] Fields defaultDependencies protected PropertyNameInfo[] defaultDependencies Field Value PropertyNameInfo[] Properties CustomDataName public string CustomDataName { get; } Property Value string Methods ConvertJTokenToBaseValue(JToken) protected dynamic ConvertJTokenToBaseValue(JToken token) Parameters token JToken Returns dynamic GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<T> GetDefautModifier() Returns IPropertyDependencyModifier<T> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName OnGetBaseValueFromConfig(dynamic) public T OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns T"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.CustomProperties.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.CustomProperties.html",
    "title": "Class CustomProperties | Capstone documentation",
    "keywords": "Class CustomProperties Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll Structure: CustomsProperty -> CustomProperty[] -> CustomDataProperty[] public class CustomProperties : PropertyDictionaryLoadFromConfig<string, ICustomProperty>, ICustomProperties, IPropertyDictionary<string, ICustomProperty>, IDictionaryProperty<string, ICustomProperty>, IProperty<Dictionary<string, ICustomProperty>>, IHaveSubProperties, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<Dictionary<string, ICustomProperty>> PropertyDictionary<string, ICustomProperty> PropertyDictionaryLoadFromConfig<string, ICustomProperty> CustomProperties Implements ICustomProperties IPropertyDictionary<string, ICustomProperty> IDictionaryProperty<string, ICustomProperty> IProperty<Dictionary<string, ICustomProperty>> IHaveSubProperties ILoadFromConfigProperty IPropertyBase Inherited Members PropertyDictionaryLoadFromConfig<string, ICustomProperty>.LoadFromConfig(dynamic) PropertyDictionaryLoadFromConfig<string, ICustomProperty>.OnSetBaseValueFromConfig(dynamic) PropertyDictionary<string, ICustomProperty>.BaseValue PropertyDictionary<string, ICustomProperty>.RealValue PropertyDictionary<string, ICustomProperty>.RealValues PropertyDictionary<string, ICustomProperty>.InitialValue PropertyDictionary<string, ICustomProperty>.GetKey(ICustomProperty) PropertyDictionary<string, ICustomProperty>.OnLoadFromSavedData() PropertyDictionary<string, ICustomProperty>.SetBaseValue(Dictionary<string, ICustomProperty>) PropertyDictionary<string, ICustomProperty>.OnSetChildFullName() PropertyDictionary<string, ICustomProperty>.AddToRealValue(ICustomProperty) PropertyDictionary<string, ICustomProperty>.RemoveFromRealValue(string) PropertyDictionary<string, ICustomProperty>.OnClone(Dictionary<string, ICustomProperty>) PropertyDictionary<string, ICustomProperty>.Initialize(IPropertyBase[], string) PropertyDictionary<string, ICustomProperty>.GetChildProperties() PropertyDictionary<string, ICustomProperty>.requestRegisterProperty PropertyDictionary<string, ICustomProperty>.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomProperty>.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomProperty>.GetDefaultDependentProperties() PropertyDictionary<string, ICustomProperty>.OnRecycled() Property<Dictionary<string, ICustomProperty>>.PropertyName Property<Dictionary<string, ICustomProperty>>.fullName Property<Dictionary<string, ICustomProperty>>.BaseValue Property<Dictionary<string, ICustomProperty>>.InitialValue Property<Dictionary<string, ICustomProperty>>.RealValue Property<Dictionary<string, ICustomProperty>>.overrideDependentProperties Property<Dictionary<string, ICustomProperty>>.SetBaseValue(Dictionary<string, ICustomProperty>) Property<Dictionary<string, ICustomProperty>>.OnSetFullName(string) Property<Dictionary<string, ICustomProperty>>.GetFullName() Property<Dictionary<string, ICustomProperty>>.modifier Property<Dictionary<string, ICustomProperty>>.OnRecycled() Property<Dictionary<string, ICustomProperty>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<string, ICustomProperty>>.GetDefautModifier() Property<Dictionary<string, ICustomProperty>>.GetPropertyName() Property<Dictionary<string, ICustomProperty>>.GetDefaultDependentProperties() Property<Dictionary<string, ICustomProperty>>.GetDependentProperties() Property<Dictionary<string, ICustomProperty>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<string, ICustomProperty>>.Initialize(IPropertyBase[], string) Property<Dictionary<string, ICustomProperty>>.OnClone(Dictionary<string, ICustomProperty>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomProperties() Please use CustomsProperty(params ICustomProperty[] Customs) to register all Customs at once public CustomProperties() CustomProperties(params ICustomProperty[]) public CustomProperties(params ICustomProperty[] Customs) Parameters Customs ICustomProperty[] Methods GetCustomProperty(string) public ICustomProperty GetCustomProperty(string key) Parameters key string Returns ICustomProperty GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<Dictionary<string, ICustomProperty>> GetDefautModifier() Returns IPropertyDependencyModifier<Dictionary<string, ICustomProperty>> GetKey(ICustomProperty) public override string GetKey(ICustomProperty value) Parameters value ICustomProperty Returns string GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName OnSetBaseValueFromConfig(dynamic) public override Dictionary<string, ICustomProperty> OnSetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns Dictionary<string, ICustomProperty>"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.CustomProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.CustomProperty.html",
    "title": "Class CustomProperty | Capstone documentation",
    "keywords": "Class CustomProperty Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public class CustomProperty : PropertyDictionary<string, ICustomDataProperty>, ICustomProperty, IPropertyDictionary<string, ICustomDataProperty>, IDictionaryProperty<string, ICustomDataProperty>, IProperty<Dictionary<string, ICustomDataProperty>>, IHaveSubProperties, IPropertyBase Inheritance object Property<Dictionary<string, ICustomDataProperty>> PropertyDictionary<string, ICustomDataProperty> CustomProperty Implements ICustomProperty IPropertyDictionary<string, ICustomDataProperty> IDictionaryProperty<string, ICustomDataProperty> IProperty<Dictionary<string, ICustomDataProperty>> IHaveSubProperties IPropertyBase Derived AutoConfigCustomProperty Inherited Members PropertyDictionary<string, ICustomDataProperty>.BaseValue PropertyDictionary<string, ICustomDataProperty>.RealValue PropertyDictionary<string, ICustomDataProperty>.RealValues PropertyDictionary<string, ICustomDataProperty>.InitialValue PropertyDictionary<string, ICustomDataProperty>.GetKey(ICustomDataProperty) PropertyDictionary<string, ICustomDataProperty>.OnLoadFromSavedData() PropertyDictionary<string, ICustomDataProperty>.SetBaseValue(Dictionary<string, ICustomDataProperty>) PropertyDictionary<string, ICustomDataProperty>.OnSetChildFullName() PropertyDictionary<string, ICustomDataProperty>.AddToRealValue(ICustomDataProperty) PropertyDictionary<string, ICustomDataProperty>.RemoveFromRealValue(string) PropertyDictionary<string, ICustomDataProperty>.OnClone(Dictionary<string, ICustomDataProperty>) PropertyDictionary<string, ICustomDataProperty>.Initialize(IPropertyBase[], string) PropertyDictionary<string, ICustomDataProperty>.GetChildProperties() PropertyDictionary<string, ICustomDataProperty>.requestRegisterProperty PropertyDictionary<string, ICustomDataProperty>.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomDataProperty>.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<string, ICustomDataProperty>.GetDefaultDependentProperties() PropertyDictionary<string, ICustomDataProperty>.OnRecycled() Property<Dictionary<string, ICustomDataProperty>>.PropertyName Property<Dictionary<string, ICustomDataProperty>>.fullName Property<Dictionary<string, ICustomDataProperty>>.BaseValue Property<Dictionary<string, ICustomDataProperty>>.InitialValue Property<Dictionary<string, ICustomDataProperty>>.RealValue Property<Dictionary<string, ICustomDataProperty>>.overrideDependentProperties Property<Dictionary<string, ICustomDataProperty>>.SetBaseValue(Dictionary<string, ICustomDataProperty>) Property<Dictionary<string, ICustomDataProperty>>.OnSetFullName(string) Property<Dictionary<string, ICustomDataProperty>>.GetFullName() Property<Dictionary<string, ICustomDataProperty>>.modifier Property<Dictionary<string, ICustomDataProperty>>.OnRecycled() Property<Dictionary<string, ICustomDataProperty>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<string, ICustomDataProperty>>.GetDefautModifier() Property<Dictionary<string, ICustomDataProperty>>.GetPropertyName() Property<Dictionary<string, ICustomDataProperty>>.GetDefaultDependentProperties() Property<Dictionary<string, ICustomDataProperty>>.GetDependentProperties() Property<Dictionary<string, ICustomDataProperty>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<string, ICustomDataProperty>>.Initialize(IPropertyBase[], string) Property<Dictionary<string, ICustomDataProperty>>.OnClone(Dictionary<string, ICustomDataProperty>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomProperty() public CustomProperty() CustomProperty(string, IDescriptionGetter<ICustomProperty>, params ICustomDataProperty[]) public CustomProperty(string propertyName, IDescriptionGetter<ICustomProperty> descriptionGetter, params ICustomDataProperty[] data) Parameters propertyName string The name of the property. This should be the same as the one on the config file descriptionGetter IDescriptionGetter<ICustomProperty> In order to serialize the description, you need to use a descriptionGetter object to do the description stuff data ICustomDataProperty[] Manually specify which data are included, as well as their dependencies and modifiers Fields descriptionGetter protected IDescriptionGetter<ICustomProperty> descriptionGetter Field Value IDescriptionGetter<ICustomProperty> propertyName protected string propertyName Field Value string Methods GetCustomDataProperty(string) public ICustomDataProperty GetCustomDataProperty(string customDataName) Parameters customDataName string Returns ICustomDataProperty GetCustomDataProperty<T>(string) public ICustomDataProperty<T> GetCustomDataProperty<T>(string customDataName) Parameters customDataName string Returns ICustomDataProperty<T> Type Parameters T GetCustomDataValue(string) public IBindableProperty GetCustomDataValue(string customDataName) Parameters customDataName string Returns IBindableProperty GetCustomDataValue<T>(string) public BindableProperty<T> GetCustomDataValue<T>(string CustomDataName) Parameters CustomDataName string Returns BindableProperty<T> Type Parameters T GetCustomPropertyName() public string GetCustomPropertyName() Returns string GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<Dictionary<string, ICustomDataProperty>> GetDefautModifier() Returns IPropertyDependencyModifier<Dictionary<string, ICustomDataProperty>> GetKey(ICustomDataProperty) public override string GetKey(ICustomDataProperty value) Parameters value ICustomDataProperty Returns string GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName Initialize(IPropertyBase[], string) public override void Initialize(IPropertyBase[] dependencies, string parentEntityName) Parameters dependencies IPropertyBase[] parentEntityName string OnGetBaseValueFromConfig(dynamic) public virtual Dictionary<string, ICustomDataProperty> OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns Dictionary<string, ICustomDataProperty> OnGetDescription() public string OnGetDescription() Returns string OnLoadFromSavedData() public void OnLoadFromSavedData() OnRecycled() public override void OnRecycled() RegisterOnCustomDataChanged(Action<ICustomProperty>) public IUnRegister RegisterOnCustomDataChanged(Action<ICustomProperty> onCustomDataChanged) Parameters onCustomDataChanged Action<ICustomProperty> Returns IUnRegister RegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) public IUnRegister RegisterOnCustomDataChanged(string CustomDataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters CustomDataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic> Returns IUnRegister UnRegisterOnCustomDataChanged(Action<ICustomProperty>) public void UnRegisterOnCustomDataChanged(Action<ICustomProperty> onCustomDataChanged) Parameters onCustomDataChanged Action<ICustomProperty> UnRegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) public void UnRegisterOnCustomDataChanged(string CustomDataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters CustomDataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic>"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.ICustomDataProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.ICustomDataProperty-1.html",
    "title": "Interface ICustomDataProperty<T> | Capstone documentation",
    "keywords": "Interface ICustomDataProperty<T> Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public interface ICustomDataProperty<T> : ICustomDataProperty, IProperty<T>, IPropertyBase Type Parameters T Inherited Members ICustomDataProperty.CustomDataName IProperty<T>.BaseValue IProperty<T>.InitialValue IProperty<T>.RealValue IProperty<T>.SetBaseValue(T) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods OnGetBaseValueFromConfig(dynamic) T OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns T"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.ICustomDataProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.ICustomDataProperty.html",
    "title": "Interface ICustomDataProperty | Capstone documentation",
    "keywords": "Interface ICustomDataProperty Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public interface ICustomDataProperty : IPropertyBase Inherited Members IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Properties CustomDataName string CustomDataName { get; } Property Value string Methods OnGetBaseValueFromConfig(dynamic) dynamic OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns dynamic"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.ICustomProperties.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.ICustomProperties.html",
    "title": "Interface ICustomProperties | Capstone documentation",
    "keywords": "Interface ICustomProperties Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public interface ICustomProperties : IPropertyDictionary<string, ICustomProperty>, IDictionaryProperty<string, ICustomProperty>, IProperty<Dictionary<string, ICustomProperty>>, IHaveSubProperties, ILoadFromConfigProperty, IPropertyBase Inherited Members IPropertyDictionary<string, ICustomProperty>.GetKey(ICustomProperty) IPropertyDictionary<string, ICustomProperty>.AddToRealValue(ICustomProperty) IPropertyDictionary<string, ICustomProperty>.RemoveFromRealValue(string) IDictionaryProperty<string, ICustomProperty>.RealValues IProperty<Dictionary<string, ICustomProperty>>.BaseValue IProperty<Dictionary<string, ICustomProperty>>.InitialValue IProperty<Dictionary<string, ICustomProperty>>.RealValue IProperty<Dictionary<string, ICustomProperty>>.SetBaseValue(Dictionary<string, ICustomProperty>) IHaveSubProperties.OnSetChildFullName() IHaveSubProperties.GetChildProperties() IHaveSubProperties.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.OnLoadFromSavedData() ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetCustomProperty(string) ICustomProperty GetCustomProperty(string key) Parameters key string Returns ICustomProperty"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.ICustomProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.ICustomProperty.html",
    "title": "Interface ICustomProperty | Capstone documentation",
    "keywords": "Interface ICustomProperty Namespace Runtime.DataFramework.Properties.CustomProperties Assembly MainGame.dll public interface ICustomProperty : IPropertyDictionary<string, ICustomDataProperty>, IDictionaryProperty<string, ICustomDataProperty>, IProperty<Dictionary<string, ICustomDataProperty>>, IHaveSubProperties, IPropertyBase Inherited Members IPropertyDictionary<string, ICustomDataProperty>.GetKey(ICustomDataProperty) IPropertyDictionary<string, ICustomDataProperty>.AddToRealValue(ICustomDataProperty) IPropertyDictionary<string, ICustomDataProperty>.RemoveFromRealValue(string) IDictionaryProperty<string, ICustomDataProperty>.RealValues IProperty<Dictionary<string, ICustomDataProperty>>.BaseValue IProperty<Dictionary<string, ICustomDataProperty>>.InitialValue IProperty<Dictionary<string, ICustomDataProperty>>.RealValue IProperty<Dictionary<string, ICustomDataProperty>>.SetBaseValue(Dictionary<string, ICustomDataProperty>) IHaveSubProperties.OnSetChildFullName() IHaveSubProperties.GetChildProperties() IHaveSubProperties.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.OnLoadFromSavedData() IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetCustomDataProperty(string) ICustomDataProperty GetCustomDataProperty(string customDataName) Parameters customDataName string Returns ICustomDataProperty GetCustomDataProperty<T>(string) ICustomDataProperty<T> GetCustomDataProperty<T>(string customDataName) Parameters customDataName string Returns ICustomDataProperty<T> Type Parameters T GetCustomDataValue(string) IBindableProperty GetCustomDataValue(string customDataName) Parameters customDataName string Returns IBindableProperty GetCustomDataValue<T>(string) BindableProperty<T> GetCustomDataValue<T>(string CustomDataName) Parameters CustomDataName string Returns BindableProperty<T> Type Parameters T GetCustomPropertyName() string GetCustomPropertyName() Returns string OnGetBaseValueFromConfig(dynamic) Dictionary<string, ICustomDataProperty> OnGetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns Dictionary<string, ICustomDataProperty> OnGetDescription() string OnGetDescription() Returns string RegisterOnCustomDataChanged(Action<ICustomProperty>) IUnRegister RegisterOnCustomDataChanged(Action<ICustomProperty> onCustomDataChanged) Parameters onCustomDataChanged Action<ICustomProperty> Returns IUnRegister RegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) IUnRegister RegisterOnCustomDataChanged(string CustomDataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters CustomDataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic> Returns IUnRegister UnRegisterOnCustomDataChanged(Action<ICustomProperty>) void UnRegisterOnCustomDataChanged(Action<ICustomProperty> onCustomDataChanged) Parameters onCustomDataChanged Action<ICustomProperty> UnRegisterOnCustomDataChanged(string, Action<ICustomDataProperty, dynamic, dynamic>) void UnRegisterOnCustomDataChanged(string CustomDataName, Action<ICustomDataProperty, dynamic, dynamic> onCustomDataChanged) Parameters CustomDataName string onCustomDataChanged Action<ICustomDataProperty, dynamic, dynamic>"
  },
  "api/Runtime.DataFramework.Properties.CustomProperties.html": {
    "href": "api/Runtime.DataFramework.Properties.CustomProperties.html",
    "title": "Namespace Runtime.DataFramework.Properties.CustomProperties | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Properties.CustomProperties Classes AutoConfigCustomProperty If you don't want to manually specify custom property data, you can use this class to create a Custom property. However, this class is data only, which means you can't set any default modifiers for any Custom data (although you can use the builder to override, but the generic type of your modifier MUST BE dynamic in this case!!). Also, data is only loaded from config file. Moreover, all Custom data in the config file will be automatically loaded into this class, with type of dynamic. To customize the description of this Custom, you need to assign a data only Custom description getter. This is particularly useful if ALL of its data is primitive type, and you don't want to manually specify them. If any of its data is complex type, the complex data will be a dynamic object (ExpandoObject). So it's better to use CustomProperty instead. CustomDataProperty<T> CustomProperties Structure: CustomsProperty -> CustomProperty[] -> CustomDataProperty[] CustomProperty Interfaces ICustomDataProperty ICustomDataProperty<T> ICustomProperties ICustomProperty"
  },
  "api/Runtime.DataFramework.Properties.DictionaryProperty-2.html": {
    "href": "api/Runtime.DataFramework.Properties.DictionaryProperty-2.html",
    "title": "Class DictionaryProperty<TKey, T> | Capstone documentation",
    "keywords": "Class DictionaryProperty<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class DictionaryProperty<TKey, T> : Property<Dictionary<TKey, T>>, IDictionaryProperty<TKey, T>, IProperty<Dictionary<TKey, T>>, IPropertyBase Type Parameters TKey T Inheritance object Property<Dictionary<TKey, T>> DictionaryProperty<TKey, T> Implements IDictionaryProperty<TKey, T> IProperty<Dictionary<TKey, T>> IPropertyBase Derived LoadFromConfigDictProperty<TKey, T> Inherited Members Property<Dictionary<TKey, T>>.PropertyName Property<Dictionary<TKey, T>>.fullName Property<Dictionary<TKey, T>>.BaseValue Property<Dictionary<TKey, T>>.InitialValue Property<Dictionary<TKey, T>>.RealValue Property<Dictionary<TKey, T>>.overrideDependentProperties Property<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) Property<Dictionary<TKey, T>>.OnSetFullName(string) Property<Dictionary<TKey, T>>.GetFullName() Property<Dictionary<TKey, T>>.modifier Property<Dictionary<TKey, T>>.OnRecycled() Property<Dictionary<TKey, T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<TKey, T>>.GetDefautModifier() Property<Dictionary<TKey, T>>.GetPropertyName() Property<Dictionary<TKey, T>>.GetDefaultDependentProperties() Property<Dictionary<TKey, T>>.GetDependentProperties() Property<Dictionary<TKey, T>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<TKey, T>>.Initialize(IPropertyBase[], string) Property<Dictionary<TKey, T>>.OnClone(Dictionary<TKey, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DictionaryProperty() public DictionaryProperty() Properties RealValue Use RealValues instead to invoke events public override BindableProperty<Dictionary<TKey, T>> RealValue { get; } Property Value BindableProperty<Dictionary<TKey, T>> RealValues public BindableDictionary<TKey, T> RealValues { get; } Property Value BindableDictionary<TKey, T> Methods OnClone(Dictionary<TKey, T>) Deep clone of the list protected override Dictionary<TKey, T> OnClone(Dictionary<TKey, T> value) Parameters value Dictionary<TKey, T> Returns Dictionary<TKey, T>"
  },
  "api/Runtime.DataFramework.Properties.EmptyModifier-1.html": {
    "href": "api/Runtime.DataFramework.Properties.EmptyModifier-1.html",
    "title": "Class EmptyModifier<T> | Capstone documentation",
    "keywords": "Class EmptyModifier<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public class EmptyModifier<T> : PropertyDependencyModifier<T>, IPropertyDependencyModifier<T> Type Parameters T Inheritance object PropertyDependencyModifier<T> EmptyModifier<T> Implements IPropertyDependencyModifier<T> Inherited Members PropertyDependencyModifier<T>.dependenciesInType PropertyDependencyModifier<T>.Modify(T, IPropertyBase[], string, string) PropertyDependencyModifier<T>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<T>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<T>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<T>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(T) public override T OnModify(T propertyValue) Parameters propertyValue T Returns T"
  },
  "api/Runtime.DataFramework.Properties.HashSetProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.HashSetProperty-1.html",
    "title": "Class HashSetProperty<T> | Capstone documentation",
    "keywords": "Class HashSetProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class HashSetProperty<T> : Property<HashSet<T>>, IHashSetProperty<T>, IProperty<HashSet<T>>, IPropertyBase Type Parameters T Inheritance object Property<HashSet<T>> HashSetProperty<T> Implements IHashSetProperty<T> IProperty<HashSet<T>> IPropertyBase Derived LoadFromConfigHashsetProperty<T> Inherited Members Property<HashSet<T>>.PropertyName Property<HashSet<T>>.fullName Property<HashSet<T>>.BaseValue Property<HashSet<T>>.InitialValue Property<HashSet<T>>.overrideDependentProperties Property<HashSet<T>>.OnSetFullName(string) Property<HashSet<T>>.GetFullName() Property<HashSet<T>>.modifier Property<HashSet<T>>.OnRecycled() Property<HashSet<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HashSet<T>>.GetDefautModifier() Property<HashSet<T>>.GetPropertyName() Property<HashSet<T>>.GetDefaultDependentProperties() Property<HashSet<T>>.GetDependentProperties() Property<HashSet<T>>.SetDependentProperties(params PropertyNameInfo[]) Property<HashSet<T>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HashSetProperty() public HashSetProperty() Properties RealValue Real Value initialized to InitialValue. Is changed during the game public override BindableProperty<HashSet<T>> RealValue { get; } Property Value BindableProperty<HashSet<T>> RealValues public BindableHashset<T> RealValues { get; } Property Value BindableHashset<T> Methods OnClone(HashSet<T>) protected override HashSet<T> OnClone(HashSet<T> value) Parameters value HashSet<T> Returns HashSet<T> SetBaseValue(HashSet<T>) public override void SetBaseValue(HashSet<T> value) Parameters value HashSet<T>"
  },
  "api/Runtime.DataFramework.Properties.IDictionaryProperty-2.html": {
    "href": "api/Runtime.DataFramework.Properties.IDictionaryProperty-2.html",
    "title": "Interface IDictionaryProperty<TKey, T> | Capstone documentation",
    "keywords": "Interface IDictionaryProperty<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IDictionaryProperty<TKey, T> : IProperty<Dictionary<TKey, T>>, IPropertyBase Type Parameters TKey T Inherited Members IProperty<Dictionary<TKey, T>>.BaseValue IProperty<Dictionary<TKey, T>>.InitialValue IProperty<Dictionary<TKey, T>>.RealValue IProperty<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Properties RealValues BindableDictionary<TKey, T> RealValues { get; } Property Value BindableDictionary<TKey, T>"
  },
  "api/Runtime.DataFramework.Properties.IHashSetProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IHashSetProperty-1.html",
    "title": "Interface IHashSetProperty<T> | Capstone documentation",
    "keywords": "Interface IHashSetProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IHashSetProperty<T> : IProperty<HashSet<T>>, IPropertyBase Type Parameters T Inherited Members IProperty<HashSet<T>>.BaseValue IProperty<HashSet<T>>.InitialValue IProperty<HashSet<T>>.RealValue IProperty<HashSet<T>>.SetBaseValue(HashSet<T>) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Properties RealValues BindableHashset<T> RealValues { get; } Property Value BindableHashset<T>"
  },
  "api/Runtime.DataFramework.Properties.IHaveSubProperties.html": {
    "href": "api/Runtime.DataFramework.Properties.IHaveSubProperties.html",
    "title": "Interface IHaveSubProperties | Capstone documentation",
    "keywords": "Interface IHaveSubProperties Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IHaveSubProperties : IPropertyBase Inherited Members IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetChildProperties() IPropertyBase[] GetChildProperties() Returns IPropertyBase[] OnLoadFromSavedData() void OnLoadFromSavedData() OnSetChildFullName() void OnSetChildFullName() RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) void RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool> UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) void UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool>"
  },
  "api/Runtime.DataFramework.Properties.IListProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IListProperty-1.html",
    "title": "Interface IListProperty<T> | Capstone documentation",
    "keywords": "Interface IListProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IListProperty<T> : IProperty<List<T>>, IPropertyBase Type Parameters T Inherited Members IProperty<List<T>>.BaseValue IProperty<List<T>>.InitialValue IProperty<List<T>>.RealValue IProperty<List<T>>.SetBaseValue(List<T>) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Properties RealValues BindableList<T> RealValues { get; } Property Value BindableList<T>"
  },
  "api/Runtime.DataFramework.Properties.ILoadFromConfigProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.ILoadFromConfigProperty.html",
    "title": "Interface ILoadFromConfigProperty | Capstone documentation",
    "keywords": "Interface ILoadFromConfigProperty Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface ILoadFromConfigProperty : IPropertyBase Inherited Members IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods LoadFromConfig(dynamic) void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.IProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IProperty-1.html",
    "title": "Interface IProperty<T> | Capstone documentation",
    "keywords": "Interface IProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IProperty<T> : IPropertyBase Type Parameters T Inherited Members IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Properties BaseValue Base Value is the initial configured base value of a specific property T BaseValue { get; set; } Property Value T InitialValue Initial Value is the initial real value of this property when the bind entity is initialized. It is dependent on the base value and the modifiers. Not changed during the game T InitialValue { get; set; } Property Value T RealValue Real Value initialized to InitialValue. Is changed during the game BindableProperty<T> RealValue { get; } Property Value BindableProperty<T> Methods SetBaseValue(T) void SetBaseValue(T value) Parameters value T"
  },
  "api/Runtime.DataFramework.Properties.IPropertyBase.html": {
    "href": "api/Runtime.DataFramework.Properties.IPropertyBase.html",
    "title": "Interface IPropertyBase | Capstone documentation",
    "keywords": "Interface IPropertyBase Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IPropertyBase Properties PropertyName PropertyName PropertyName { get; } Property Value PropertyName Methods GetBaseValue() dynamic GetBaseValue() Returns dynamic GetDependentProperties() PropertyNameInfo[] GetDependentProperties() Returns PropertyNameInfo[] GetFullName() string GetFullName() Returns string GetInitialValue() dynamic GetInitialValue() Returns dynamic GetRealValue() IBindableProperty GetRealValue() Returns IBindableProperty Initialize(IPropertyBase[], string) void Initialize(IPropertyBase[] dependencies, string parentEntityName) Parameters dependencies IPropertyBase[] parentEntityName string OnRecycled() void OnRecycled() OnSetFullName(string) void OnSetFullName(string fullName) Parameters fullName string SetBaseValue(object) void SetBaseValue(object value) Parameters value object SetDependentProperties(params PropertyNameInfo[]) void SetDependentProperties(params PropertyNameInfo[] dependentProperties) Parameters dependentProperties PropertyNameInfo[] SetModifier<T>(IPropertyDependencyModifier<T>) IPropertyBase SetModifier<T>(IPropertyDependencyModifier<T> modifier) Parameters modifier IPropertyDependencyModifier<T> Returns IPropertyBase Type Parameters T"
  },
  "api/Runtime.DataFramework.Properties.IPropertyDependencyModifier-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IPropertyDependencyModifier-1.html",
    "title": "Interface IPropertyDependencyModifier<T> | Capstone documentation",
    "keywords": "Interface IPropertyDependencyModifier<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IPropertyDependencyModifier<T> Type Parameters T Methods Modify(T, IPropertyBase[], string, string) T Modify(T propertyValue, IPropertyBase[] dep, string parentEntityName, string propertyName) Parameters propertyValue T dep IPropertyBase[] parentEntityName string propertyName string Returns T"
  },
  "api/Runtime.DataFramework.Properties.IPropertyDictionary-2.html": {
    "href": "api/Runtime.DataFramework.Properties.IPropertyDictionary-2.html",
    "title": "Interface IPropertyDictionary<TKey, T> | Capstone documentation",
    "keywords": "Interface IPropertyDictionary<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IPropertyDictionary<TKey, T> : IDictionaryProperty<TKey, T>, IProperty<Dictionary<TKey, T>>, IHaveSubProperties, IPropertyBase Type Parameters TKey T Inherited Members IDictionaryProperty<TKey, T>.RealValues IProperty<Dictionary<TKey, T>>.BaseValue IProperty<Dictionary<TKey, T>>.InitialValue IProperty<Dictionary<TKey, T>>.RealValue IProperty<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) IHaveSubProperties.OnSetChildFullName() IHaveSubProperties.GetChildProperties() IHaveSubProperties.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) IHaveSubProperties.OnLoadFromSavedData() IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods AddToRealValue(T) void AddToRealValue(T property) Parameters property T GetKey(T) TKey GetKey(T value) Parameters value T Returns TKey RemoveFromRealValue(TKey) void RemoveFromRealValue(TKey key) Parameters key TKey"
  },
  "api/Runtime.DataFramework.Properties.IRarityProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.IRarityProperty.html",
    "title": "Interface IRarityProperty | Capstone documentation",
    "keywords": "Interface IRarityProperty Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public interface IRarityProperty : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.DataFramework.Properties.IndependentListProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IndependentListProperty-1.html",
    "title": "Class IndependentListProperty<T> | Capstone documentation",
    "keywords": "Class IndependentListProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll Independent Properties are properties without any dependencies public abstract class IndependentListProperty<T> : ListProperty<T>, IListProperty<T>, IProperty<List<T>>, IPropertyBase Type Parameters T Inheritance object Property<List<T>> ListProperty<T> IndependentListProperty<T> Implements IListProperty<T> IProperty<List<T>> IPropertyBase Derived IndependentLoadFromConfigListProperty<T> Inherited Members ListProperty<T>.RealValue ListProperty<T>.RealValues ListProperty<T>.SetBaseValue(List<T>) ListProperty<T>.OnClone(List<T>) Property<List<T>>.PropertyName Property<List<T>>.fullName Property<List<T>>.BaseValue Property<List<T>>.InitialValue Property<List<T>>.overrideDependentProperties Property<List<T>>.OnSetFullName(string) Property<List<T>>.GetFullName() Property<List<T>>.modifier Property<List<T>>.OnRecycled() Property<List<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<List<T>>.GetPropertyName() Property<List<T>>.GetDependentProperties() Property<List<T>>.SetDependentProperties(params PropertyNameInfo[]) Property<List<T>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IndependentListProperty() protected IndependentListProperty() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<List<T>> GetDefautModifier() Returns IPropertyDependencyModifier<List<T>>"
  },
  "api/Runtime.DataFramework.Properties.IndependentLoadFromConfigListProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IndependentLoadFromConfigListProperty-1.html",
    "title": "Class IndependentLoadFromConfigListProperty<T> | Capstone documentation",
    "keywords": "Class IndependentLoadFromConfigListProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class IndependentLoadFromConfigListProperty<T> : IndependentListProperty<T>, IListProperty<T>, IProperty<List<T>>, ILoadFromConfigProperty, IPropertyBase Type Parameters T Inheritance object Property<List<T>> ListProperty<T> IndependentListProperty<T> IndependentLoadFromConfigListProperty<T> Implements IListProperty<T> IProperty<List<T>> ILoadFromConfigProperty IPropertyBase Derived Taste Inherited Members IndependentListProperty<T>.GetDefautModifier() IndependentListProperty<T>.GetDefaultDependentProperties() ListProperty<T>.RealValue ListProperty<T>.RealValues ListProperty<T>.SetBaseValue(List<T>) ListProperty<T>.OnClone(List<T>) Property<List<T>>.PropertyName Property<List<T>>.fullName Property<List<T>>.BaseValue Property<List<T>>.InitialValue Property<List<T>>.overrideDependentProperties Property<List<T>>.OnSetFullName(string) Property<List<T>>.GetFullName() Property<List<T>>.modifier Property<List<T>>.OnRecycled() Property<List<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<List<T>>.GetPropertyName() Property<List<T>>.GetDependentProperties() Property<List<T>>.SetDependentProperties(params PropertyNameInfo[]) Property<List<T>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IndependentLoadFromConfigListProperty() protected IndependentLoadFromConfigListProperty() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.IndependentLoadFromConfigProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IndependentLoadFromConfigProperty-1.html",
    "title": "Class IndependentLoadFromConfigProperty<T> | Capstone documentation",
    "keywords": "Class IndependentLoadFromConfigProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class IndependentLoadFromConfigProperty<T> : IndependentProperty<T>, IProperty<T>, ILoadFromConfigProperty, IPropertyBase Type Parameters T Inheritance object Property<T> IndependentProperty<T> IndependentLoadFromConfigProperty<T> Implements IProperty<T> ILoadFromConfigProperty IPropertyBase Derived Rarity Inherited Members IndependentProperty<T>.GetDefautModifier() IndependentProperty<T>.GetDefaultDependentProperties() Property<T>.PropertyName Property<T>.fullName Property<T>.BaseValue Property<T>.InitialValue Property<T>.RealValue Property<T>.overrideDependentProperties Property<T>.SetBaseValue(T) Property<T>.OnSetFullName(string) Property<T>.GetFullName() Property<T>.modifier Property<T>.OnRecycled() Property<T>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<T>.GetPropertyName() Property<T>.GetDependentProperties() Property<T>.SetDependentProperties(params PropertyNameInfo[]) Property<T>.Initialize(IPropertyBase[], string) Property<T>.OnClone(T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IndependentLoadFromConfigProperty() protected IndependentLoadFromConfigProperty() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.IndependentProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.IndependentProperty-1.html",
    "title": "Class IndependentProperty<T> | Capstone documentation",
    "keywords": "Class IndependentProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll Independent Properties are properties without any dependencies public abstract class IndependentProperty<T> : Property<T>, IProperty<T>, IPropertyBase Type Parameters T Inheritance object Property<T> IndependentProperty<T> Implements IProperty<T> IPropertyBase Derived IndependentLoadFromConfigProperty<T> Inherited Members Property<T>.PropertyName Property<T>.fullName Property<T>.BaseValue Property<T>.InitialValue Property<T>.RealValue Property<T>.overrideDependentProperties Property<T>.SetBaseValue(T) Property<T>.OnSetFullName(string) Property<T>.GetFullName() Property<T>.modifier Property<T>.OnRecycled() Property<T>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<T>.GetPropertyName() Property<T>.GetDependentProperties() Property<T>.SetDependentProperties(params PropertyNameInfo[]) Property<T>.Initialize(IPropertyBase[], string) Property<T>.OnClone(T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IndependentProperty() protected IndependentProperty() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<T> GetDefautModifier() Returns IPropertyDependencyModifier<T>"
  },
  "api/Runtime.DataFramework.Properties.ListProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.ListProperty-1.html",
    "title": "Class ListProperty<T> | Capstone documentation",
    "keywords": "Class ListProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll Use PropertyList instead if you want the values to be property as well. If your values are not property, use this class public abstract class ListProperty<T> : Property<List<T>>, IListProperty<T>, IProperty<List<T>>, IPropertyBase Type Parameters T Inheritance object Property<List<T>> ListProperty<T> Implements IListProperty<T> IProperty<List<T>> IPropertyBase Derived IndependentListProperty<T> Inherited Members Property<List<T>>.PropertyName Property<List<T>>.fullName Property<List<T>>.BaseValue Property<List<T>>.InitialValue Property<List<T>>.overrideDependentProperties Property<List<T>>.OnSetFullName(string) Property<List<T>>.GetFullName() Property<List<T>>.modifier Property<List<T>>.OnRecycled() Property<List<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<List<T>>.GetDefautModifier() Property<List<T>>.GetPropertyName() Property<List<T>>.GetDefaultDependentProperties() Property<List<T>>.GetDependentProperties() Property<List<T>>.SetDependentProperties(params PropertyNameInfo[]) Property<List<T>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListProperty() public ListProperty() ListProperty(params T[]) public ListProperty(params T[] baseValues) Parameters baseValues T[] Properties RealValue Use RealValues instead to invoke events public override BindableProperty<List<T>> RealValue { get; } Property Value BindableProperty<List<T>> RealValues public BindableList<T> RealValues { get; } Property Value BindableList<T> Methods OnClone(List<T>) Deep clone of the list protected override List<T> OnClone(List<T> value) Parameters value List<T> Returns List<T> SetBaseValue(List<T>) public override void SetBaseValue(List<T> value) Parameters value List<T>"
  },
  "api/Runtime.DataFramework.Properties.LoadFromConfigDictProperty-2.html": {
    "href": "api/Runtime.DataFramework.Properties.LoadFromConfigDictProperty-2.html",
    "title": "Class LoadFromConfigDictProperty<TKey, T> | Capstone documentation",
    "keywords": "Class LoadFromConfigDictProperty<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class LoadFromConfigDictProperty<TKey, T> : DictionaryProperty<TKey, T>, IDictionaryProperty<TKey, T>, IProperty<Dictionary<TKey, T>>, ILoadFromConfigProperty, IPropertyBase Type Parameters TKey T Inheritance object Property<Dictionary<TKey, T>> DictionaryProperty<TKey, T> LoadFromConfigDictProperty<TKey, T> Implements IDictionaryProperty<TKey, T> IProperty<Dictionary<TKey, T>> ILoadFromConfigProperty IPropertyBase Derived TagProperty Inherited Members DictionaryProperty<TKey, T>.RealValue DictionaryProperty<TKey, T>.RealValues DictionaryProperty<TKey, T>.OnClone(Dictionary<TKey, T>) Property<Dictionary<TKey, T>>.PropertyName Property<Dictionary<TKey, T>>.fullName Property<Dictionary<TKey, T>>.BaseValue Property<Dictionary<TKey, T>>.InitialValue Property<Dictionary<TKey, T>>.RealValue Property<Dictionary<TKey, T>>.overrideDependentProperties Property<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) Property<Dictionary<TKey, T>>.OnSetFullName(string) Property<Dictionary<TKey, T>>.GetFullName() Property<Dictionary<TKey, T>>.modifier Property<Dictionary<TKey, T>>.OnRecycled() Property<Dictionary<TKey, T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<TKey, T>>.GetDefautModifier() Property<Dictionary<TKey, T>>.GetPropertyName() Property<Dictionary<TKey, T>>.GetDefaultDependentProperties() Property<Dictionary<TKey, T>>.GetDependentProperties() Property<Dictionary<TKey, T>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<TKey, T>>.Initialize(IPropertyBase[], string) Property<Dictionary<TKey, T>>.OnClone(Dictionary<TKey, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.LoadFromConfigHashsetProperty-1.html": {
    "href": "api/Runtime.DataFramework.Properties.LoadFromConfigHashsetProperty-1.html",
    "title": "Class LoadFromConfigHashsetProperty<T> | Capstone documentation",
    "keywords": "Class LoadFromConfigHashsetProperty<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class LoadFromConfigHashsetProperty<T> : HashSetProperty<T>, IHashSetProperty<T>, IProperty<HashSet<T>>, ILoadFromConfigProperty, IPropertyBase Type Parameters T Inheritance object Property<HashSet<T>> HashSetProperty<T> LoadFromConfigHashsetProperty<T> Implements IHashSetProperty<T> IProperty<HashSet<T>> ILoadFromConfigProperty IPropertyBase Derived TestHashSetProperty BaitAdjectives Inherited Members HashSetProperty<T>.RealValue HashSetProperty<T>.RealValues HashSetProperty<T>.SetBaseValue(HashSet<T>) HashSetProperty<T>.OnClone(HashSet<T>) Property<HashSet<T>>.PropertyName Property<HashSet<T>>.fullName Property<HashSet<T>>.BaseValue Property<HashSet<T>>.InitialValue Property<HashSet<T>>.overrideDependentProperties Property<HashSet<T>>.OnSetFullName(string) Property<HashSet<T>>.GetFullName() Property<HashSet<T>>.modifier Property<HashSet<T>>.OnRecycled() Property<HashSet<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HashSet<T>>.GetDefautModifier() Property<HashSet<T>>.GetPropertyName() Property<HashSet<T>>.GetDefaultDependentProperties() Property<HashSet<T>>.GetDependentProperties() Property<HashSet<T>>.SetDependentProperties(params PropertyNameInfo[]) Property<HashSet<T>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoadFromConfigHashsetProperty() public LoadFromConfigHashsetProperty() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic"
  },
  "api/Runtime.DataFramework.Properties.Property-1.html": {
    "href": "api/Runtime.DataFramework.Properties.Property-1.html",
    "title": "Class Property<T> | Capstone documentation",
    "keywords": "Class Property<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class Property<T> : IProperty<T>, IPropertyBase Type Parameters T Inheritance object Property<T> Implements IProperty<T> IPropertyBase Derived AbstractLoadFromConfigProperty<T> CustomDataProperty<T> DictionaryProperty<TKey, T> HashSetProperty<T> IndependentProperty<T> ListProperty<T> PropertyDictionary<TKey, T> PropertyList<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Property() Base constructor for ES3 serialization public Property() Fields fullName protected string fullName Field Value string modifier protected IPropertyDependencyModifier<T> modifier Field Value IPropertyDependencyModifier<T> overrideDependentProperties protected PropertyNameInfo[] overrideDependentProperties Field Value PropertyNameInfo[] Properties BaseValue Base Value is the initial configured base value of a specific property public virtual T BaseValue { get; set; } Property Value T InitialValue Initial Value is the initial real value of this property when the bind entity is initialized. It is dependent on the base value and the modifiers. Not changed during the game public virtual T InitialValue { get; set; } Property Value T PropertyName public PropertyName PropertyName { get; } Property Value PropertyName RealValue Real Value initialized to InitialValue. Is changed during the game public virtual BindableProperty<T> RealValue { get; } Property Value BindableProperty<T> Methods GetDefaultDependentProperties() public abstract PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected abstract IPropertyDependencyModifier<T> GetDefautModifier() Returns IPropertyDependencyModifier<T> GetDependentProperties() public virtual PropertyNameInfo[] GetDependentProperties() Returns PropertyNameInfo[] GetFullName() public string GetFullName() Returns string GetPropertyName() protected abstract PropertyName GetPropertyName() Returns PropertyName Initialize(IPropertyBase[], string) public virtual void Initialize(IPropertyBase[] dependencies, string parentEntityName) Parameters dependencies IPropertyBase[] parentEntityName string OnClone(T) protected virtual T OnClone(T value) Parameters value T Returns T OnRecycled() public virtual void OnRecycled() OnSetFullName(string) public void OnSetFullName(string fullName) Parameters fullName string SetBaseValue(T) public virtual void SetBaseValue(T value) Parameters value T SetDependentProperties(params PropertyNameInfo[]) public void SetDependentProperties(params PropertyNameInfo[] dependentProperties) Parameters dependentProperties PropertyNameInfo[] SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) public IPropertyBase SetModifier<ValueType>(IPropertyDependencyModifier<ValueType> modifier) Parameters modifier IPropertyDependencyModifier<ValueType> Returns IPropertyBase Type Parameters ValueType Operators implicit operator T(Property<T>) public static implicit operator T(Property<T> property) Parameters property Property<T> Returns T"
  },
  "api/Runtime.DataFramework.Properties.PropertyDependencyModifier-1.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyDependencyModifier-1.html",
    "title": "Class PropertyDependencyModifier<T> | Capstone documentation",
    "keywords": "Class PropertyDependencyModifier<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll No need to be ES3 serialized public abstract class PropertyDependencyModifier<T> : IPropertyDependencyModifier<T> Type Parameters T Inheritance object PropertyDependencyModifier<T> Implements IPropertyDependencyModifier<T> Derived EmptyModifier<T> AttackRangeDefaultModifier TestDangerDefaultModifier TestHealthDefaultModifier VigilianceDefaultModifier AmmoSizeDefaultModifier AttackSpeedDefaultModifier BaseDamageDefaultModifier BulletSpeedDefaultModifier BulletsPerShotDefaultModifier ChargeSpeedDefaultModifier RangeDefaultModifier RecoilDefaultModifier ReloadSpeedDefaultModifier ScopeRecoilDefaultModifier SpreadDefaultModifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields dependenciesInType protected Dictionary<Type, IPropertyBase> dependenciesInType Field Value Dictionary<Type, IPropertyBase> Methods GetDependency(PropertyNameInfo) protected IPropertyBase GetDependency(PropertyNameInfo nameInfo) Parameters nameInfo PropertyNameInfo Returns IPropertyBase GetDependency<T>() Only use this when you are sure that there is only one dependency of this type public T GetDependency<T>() where T : IPropertyBase Returns T Type Parameters T Exceptions Exception GetDependency<T>(PropertyNameInfo) protected T GetDependency<T>(PropertyNameInfo nameInfo) where T : IPropertyBase Parameters nameInfo PropertyNameInfo Returns T Type Parameters T GetModifierParameterFromConfig<T>(string, T) Get parameters for this property modifier specific to this property + its entity + its dependent property from config file protected T GetModifierParameterFromConfig<T>(string paramName, T defaultValue) Parameters paramName string defaultValue T Returns T Type Parameters T The type of the parameter to parse to Modify(T, IPropertyBase[], string, string) public T Modify(T propertyValue, IPropertyBase[] dep, string parentEntityName, string propertyName) Parameters propertyValue T dep IPropertyBase[] parentEntityName string propertyName string Returns T OnModify(T) public abstract T OnModify(T propertyValue) Parameters propertyValue T Returns T"
  },
  "api/Runtime.DataFramework.Properties.PropertyDictionary-2.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyDictionary-2.html",
    "title": "Class PropertyDictionary<TKey, T> | Capstone documentation",
    "keywords": "Class PropertyDictionary<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class PropertyDictionary<TKey, T> : Property<Dictionary<TKey, T>>, IPropertyDictionary<TKey, T>, IDictionaryProperty<TKey, T>, IProperty<Dictionary<TKey, T>>, IHaveSubProperties, IPropertyBase where T : IPropertyBase Type Parameters TKey T Inheritance object Property<Dictionary<TKey, T>> PropertyDictionary<TKey, T> Implements IPropertyDictionary<TKey, T> IDictionaryProperty<TKey, T> IProperty<Dictionary<TKey, T>> IHaveSubProperties IPropertyBase Derived CustomProperty PropertyDictionaryLoadFromConfig<TKey, T> Inherited Members Property<Dictionary<TKey, T>>.PropertyName Property<Dictionary<TKey, T>>.fullName Property<Dictionary<TKey, T>>.BaseValue Property<Dictionary<TKey, T>>.InitialValue Property<Dictionary<TKey, T>>.RealValue Property<Dictionary<TKey, T>>.overrideDependentProperties Property<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) Property<Dictionary<TKey, T>>.OnSetFullName(string) Property<Dictionary<TKey, T>>.GetFullName() Property<Dictionary<TKey, T>>.modifier Property<Dictionary<TKey, T>>.OnRecycled() Property<Dictionary<TKey, T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<TKey, T>>.GetDefautModifier() Property<Dictionary<TKey, T>>.GetPropertyName() Property<Dictionary<TKey, T>>.GetDefaultDependentProperties() Property<Dictionary<TKey, T>>.GetDependentProperties() Property<Dictionary<TKey, T>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<TKey, T>>.Initialize(IPropertyBase[], string) Property<Dictionary<TKey, T>>.OnClone(Dictionary<TKey, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PropertyDictionary() public PropertyDictionary() PropertyDictionary(params T[]) public PropertyDictionary(params T[] baseValues) Parameters baseValues T[] Fields requestRegisterProperty protected Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty Field Value Action<Type, IPropertyBase, string, bool, bool> Properties BaseValue Base Value is the initial configured base value of a specific property public override Dictionary<TKey, T> BaseValue { get; set; } Property Value Dictionary<TKey, T> InitialValue Initial Value is the initial real value of this property when the bind entity is initialized. It is dependent on the base value and the modifiers. Not changed during the game public override Dictionary<TKey, T> InitialValue { get; set; } Property Value Dictionary<TKey, T> RealValue Use RealValues instead to invoke events public override BindableProperty<Dictionary<TKey, T>> RealValue { get; } Property Value BindableProperty<Dictionary<TKey, T>> RealValues public BindableDictionary<TKey, T> RealValues { get; } Property Value BindableDictionary<TKey, T> Methods AddToRealValue(T) public void AddToRealValue(T property) Parameters property T GetChildProperties() public IPropertyBase[] GetChildProperties() Returns IPropertyBase[] GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetKey(T) public abstract TKey GetKey(T value) Parameters value T Returns TKey Initialize(IPropertyBase[], string) public override void Initialize(IPropertyBase[] dependencies, string parentEntityName) Parameters dependencies IPropertyBase[] parentEntityName string OnClone(Dictionary<TKey, T>) Shallow clone of the list protected override Dictionary<TKey, T> OnClone(Dictionary<TKey, T> value) Parameters value Dictionary<TKey, T> Returns Dictionary<TKey, T> OnLoadFromSavedData() public void OnLoadFromSavedData() OnRecycled() public override void OnRecycled() OnSetChildFullName() public void OnSetChildFullName() RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) public void RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool> RemoveFromRealValue(TKey) public void RemoveFromRealValue(TKey key) Parameters key TKey SetBaseValue(Dictionary<TKey, T>) public override void SetBaseValue(Dictionary<TKey, T> value) Parameters value Dictionary<TKey, T> UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) public void UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool>"
  },
  "api/Runtime.DataFramework.Properties.PropertyDictionaryLoadFromConfig-2.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyDictionaryLoadFromConfig-2.html",
    "title": "Class PropertyDictionaryLoadFromConfig<TKey, T> | Capstone documentation",
    "keywords": "Class PropertyDictionaryLoadFromConfig<TKey, T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public abstract class PropertyDictionaryLoadFromConfig<TKey, T> : PropertyDictionary<TKey, T>, IPropertyDictionary<TKey, T>, IDictionaryProperty<TKey, T>, IProperty<Dictionary<TKey, T>>, IHaveSubProperties, ILoadFromConfigProperty, IPropertyBase where T : IPropertyBase Type Parameters TKey T Inheritance object Property<Dictionary<TKey, T>> PropertyDictionary<TKey, T> PropertyDictionaryLoadFromConfig<TKey, T> Implements IPropertyDictionary<TKey, T> IDictionaryProperty<TKey, T> IProperty<Dictionary<TKey, T>> IHaveSubProperties ILoadFromConfigProperty IPropertyBase Derived CustomProperties Inherited Members PropertyDictionary<TKey, T>.BaseValue PropertyDictionary<TKey, T>.RealValue PropertyDictionary<TKey, T>.RealValues PropertyDictionary<TKey, T>.InitialValue PropertyDictionary<TKey, T>.GetKey(T) PropertyDictionary<TKey, T>.OnLoadFromSavedData() PropertyDictionary<TKey, T>.SetBaseValue(Dictionary<TKey, T>) PropertyDictionary<TKey, T>.OnSetChildFullName() PropertyDictionary<TKey, T>.AddToRealValue(T) PropertyDictionary<TKey, T>.RemoveFromRealValue(TKey) PropertyDictionary<TKey, T>.OnClone(Dictionary<TKey, T>) PropertyDictionary<TKey, T>.Initialize(IPropertyBase[], string) PropertyDictionary<TKey, T>.GetChildProperties() PropertyDictionary<TKey, T>.requestRegisterProperty PropertyDictionary<TKey, T>.RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<TKey, T>.UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) PropertyDictionary<TKey, T>.GetDefaultDependentProperties() PropertyDictionary<TKey, T>.OnRecycled() Property<Dictionary<TKey, T>>.PropertyName Property<Dictionary<TKey, T>>.fullName Property<Dictionary<TKey, T>>.BaseValue Property<Dictionary<TKey, T>>.InitialValue Property<Dictionary<TKey, T>>.RealValue Property<Dictionary<TKey, T>>.overrideDependentProperties Property<Dictionary<TKey, T>>.SetBaseValue(Dictionary<TKey, T>) Property<Dictionary<TKey, T>>.OnSetFullName(string) Property<Dictionary<TKey, T>>.GetFullName() Property<Dictionary<TKey, T>>.modifier Property<Dictionary<TKey, T>>.OnRecycled() Property<Dictionary<TKey, T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<TKey, T>>.GetDefautModifier() Property<Dictionary<TKey, T>>.GetPropertyName() Property<Dictionary<TKey, T>>.GetDefaultDependentProperties() Property<Dictionary<TKey, T>>.GetDependentProperties() Property<Dictionary<TKey, T>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<TKey, T>>.Initialize(IPropertyBase[], string) Property<Dictionary<TKey, T>>.OnClone(Dictionary<TKey, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PropertyDictionaryLoadFromConfig() public PropertyDictionaryLoadFromConfig() Methods LoadFromConfig(dynamic) public void LoadFromConfig(dynamic value) Parameters value dynamic OnSetBaseValueFromConfig(dynamic) public abstract Dictionary<TKey, T> OnSetBaseValueFromConfig(dynamic value) Parameters value dynamic Returns Dictionary<TKey, T>"
  },
  "api/Runtime.DataFramework.Properties.PropertyList-1.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyList-1.html",
    "title": "Class PropertyList<T> | Capstone documentation",
    "keywords": "Class PropertyList<T> Namespace Runtime.DataFramework.Properties Assembly MainGame.dll Use ListProperty instead if your values are not properties. If your values are properties, use this class public abstract class PropertyList<T> : Property<List<T>>, IListProperty<T>, IProperty<List<T>>, IHaveSubProperties, IPropertyBase where T : IPropertyBase Type Parameters T Inheritance object Property<List<T>> PropertyList<T> Implements IListProperty<T> IProperty<List<T>> IHaveSubProperties IPropertyBase Inherited Members Property<List<T>>.PropertyName Property<List<T>>.fullName Property<List<T>>.overrideDependentProperties Property<List<T>>.OnSetFullName(string) Property<List<T>>.GetFullName() Property<List<T>>.modifier Property<List<T>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<List<T>>.GetDefautModifier() Property<List<T>>.GetPropertyName() Property<List<T>>.GetDependentProperties() Property<List<T>>.SetDependentProperties(params PropertyNameInfo[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PropertyList() public PropertyList() PropertyList(params T[]) public PropertyList(params T[] baseValues) Parameters baseValues T[] Fields requestRegisterProperty protected Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty Field Value Action<Type, IPropertyBase, string, bool, bool> Properties BaseValue Base Value is the initial configured base value of a specific property public override List<T> BaseValue { get; set; } Property Value List<T> InitialValue Initial Value is the initial real value of this property when the bind entity is initialized. It is dependent on the base value and the modifiers. Not changed during the game public override List<T> InitialValue { get; set; } Property Value List<T> RealValue Use RealValues instead to invoke events public override BindableProperty<List<T>> RealValue { get; } Property Value BindableProperty<List<T>> RealValues public BindableList<T> RealValues { get; } Property Value BindableList<T> Methods AddToRealValue(T) public void AddToRealValue(T property) Parameters property T GetChildProperties() public IPropertyBase[] GetChildProperties() Returns IPropertyBase[] GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] Initialize(IPropertyBase[], string) public override void Initialize(IPropertyBase[] dependencies, string parentEntityName) Parameters dependencies IPropertyBase[] parentEntityName string OnClone(List<T>) Shallow clone of the list protected override List<T> OnClone(List<T> value) Parameters value List<T> Returns List<T> OnLoadFromSavedData() public void OnLoadFromSavedData() OnRecycled() public override void OnRecycled() OnSetChildFullName() public void OnSetChildFullName() RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) public void RegisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool> SetBaseValue(List<T>) public override void SetBaseValue(List<T> value) Parameters value List<T> UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool>) public void UnregisterRequestRegisterProperty(Action<Type, IPropertyBase, string, bool, bool> requestRegisterProperty) Parameters requestRegisterProperty Action<Type, IPropertyBase, string, bool, bool>"
  },
  "api/Runtime.DataFramework.Properties.PropertyName.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyName.html",
    "title": "Enum PropertyName | Capstone documentation",
    "keywords": "Enum PropertyName Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public enum PropertyName Fields ammo_size = 25 attack_range = 4 attack_speed = 23 bait_adjectives = 5 base_damage = 22 bullet_speed = 32 bullets_per_shot = 27 charge_speed = 31 custom_properties = 8 custom_property = 9 custom_property_data = 10 danger = 1 health = 11 max_stack = 6 range = 24 rarity = 0 recoil = 29 reload_speed = 26 resource = 13 resource_list = 14 scope_recoil = 30 spread = 28 stack_size = 7 tags = 12 taste = 2 test = 18 test_gold_resource = 17 test_hashset = 33 test_interest = 19 test_interest_dict = 21 test_interest_list = 20 test_resource_dict = 15 test_silver_resource = 16 vigiliance = 3"
  },
  "api/Runtime.DataFramework.Properties.PropertyNameInfo.html": {
    "href": "api/Runtime.DataFramework.Properties.PropertyNameInfo.html",
    "title": "Struct PropertyNameInfo | Capstone documentation",
    "keywords": "Struct PropertyNameInfo Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public struct PropertyNameInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PropertyNameInfo(IPropertyBase) Use this constructor to get the fullname of a property if you have the property public PropertyNameInfo(IPropertyBase property) Parameters property IPropertyBase PropertyNameInfo(PropertyName) Use this constructor when the dependency is a property of the entity, not a sub property of some other properties public PropertyNameInfo(PropertyName propertyName) Parameters propertyName PropertyName PropertyNameInfo(PropertyName, string) Use this constructor to get the fullname of a property if you have the property name and the parent name Do not include property name in the parent name public PropertyNameInfo(PropertyName propertyName, string parentName) Parameters propertyName PropertyName parentName string PropertyNameInfo(string) Use this constructor when the dependency is a sub property of some other properties (i.e. custom properties) public PropertyNameInfo(string fullName) Parameters fullName string Methods GetFullName() public string GetFullName() Returns string"
  },
  "api/Runtime.DataFramework.Properties.Rarity.html": {
    "href": "api/Runtime.DataFramework.Properties.Rarity.html",
    "title": "Class Rarity | Capstone documentation",
    "keywords": "Class Rarity Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public class Rarity : IndependentLoadFromConfigProperty<int>, IRarityProperty, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> IndependentProperty<int> IndependentLoadFromConfigProperty<int> Rarity Implements IRarityProperty IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members IndependentLoadFromConfigProperty<int>.LoadFromConfig(dynamic) IndependentProperty<int>.GetDefautModifier() IndependentProperty<int>.GetDefaultDependentProperties() Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.SerializedChildPropertyInfo.html": {
    "href": "api/Runtime.DataFramework.Properties.SerializedChildPropertyInfo.html",
    "title": "Class SerializedChildPropertyInfo | Capstone documentation",
    "keywords": "Class SerializedChildPropertyInfo Namespace Runtime.DataFramework.Properties Assembly MainGame.dll public class SerializedChildPropertyInfo Inheritance object SerializedChildPropertyInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SerializedChildPropertyInfo(bool, bool) public SerializedChildPropertyInfo(bool isInBase, bool isInReal) Parameters isInBase bool isInReal bool Fields IsInBase public bool IsInBase Field Value bool IsInReal public bool IsInReal Field Value bool"
  },
  "api/Runtime.DataFramework.Properties.TagProperty.ITagProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TagProperty.ITagProperty.html",
    "title": "Interface ITagProperty | Capstone documentation",
    "keywords": "Interface ITagProperty Namespace Runtime.DataFramework.Properties.TagProperty Assembly MainGame.dll Property for tags public interface ITagProperty : IProperty<Dictionary<TagName, int>>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<Dictionary<TagName, int>>.BaseValue IProperty<Dictionary<TagName, int>>.InitialValue IProperty<Dictionary<TagName, int>>.RealValue IProperty<Dictionary<TagName, int>>.SetBaseValue(Dictionary<TagName, int>) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetTagLevel(TagName) Get the level of a tag. If the entity doesn't have this tag, an exception will be thrown int GetTagLevel(TagName tagName) Parameters tagName TagName Returns int GetTags() Get all tags of this entity Tag[] GetTags() Returns Tag[] HasTag(TagName) Check if this entity has a tag bool HasTag(TagName tagName) Parameters tagName TagName Returns bool HasTag(TagName, out int) Check if this entity has a tag and get its level if it has bool HasTag(TagName tagName, out int level) Parameters tagName TagName level int Returns bool HasTagOverLevel(TagName, int) Check if this entity has a tag with a level greater than or equal to the given level. If the entity doesn't have this tag, it will always return false bool HasTagOverLevel(TagName tagName, int level) Parameters tagName TagName level int Returns bool"
  },
  "api/Runtime.DataFramework.Properties.TagProperty.TagName.html": {
    "href": "api/Runtime.DataFramework.Properties.TagProperty.TagName.html",
    "title": "Enum TagName | Capstone documentation",
    "keywords": "Enum TagName Namespace Runtime.DataFramework.Properties.TagProperty Assembly MainGame.dll public enum TagName Fields Test_Flame = 0 Test_Ice = 1 Test_Thunder = 3 Test_Wood = 2"
  },
  "api/Runtime.DataFramework.Properties.TagProperty.TagProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TagProperty.TagProperty.html",
    "title": "Class TagProperty | Capstone documentation",
    "keywords": "Class TagProperty Namespace Runtime.DataFramework.Properties.TagProperty Assembly MainGame.dll public class TagProperty : LoadFromConfigDictProperty<TagName, int>, IDictionaryProperty<TagName, int>, ITagProperty, IProperty<Dictionary<TagName, int>>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<Dictionary<TagName, int>> DictionaryProperty<TagName, int> LoadFromConfigDictProperty<TagName, int> TagProperty Implements IDictionaryProperty<TagName, int> ITagProperty IProperty<Dictionary<TagName, int>> ILoadFromConfigProperty IPropertyBase Inherited Members LoadFromConfigDictProperty<TagName, int>.LoadFromConfig(dynamic) DictionaryProperty<TagName, int>.RealValue DictionaryProperty<TagName, int>.RealValues DictionaryProperty<TagName, int>.OnClone(Dictionary<TagName, int>) Property<Dictionary<TagName, int>>.PropertyName Property<Dictionary<TagName, int>>.fullName Property<Dictionary<TagName, int>>.BaseValue Property<Dictionary<TagName, int>>.InitialValue Property<Dictionary<TagName, int>>.RealValue Property<Dictionary<TagName, int>>.overrideDependentProperties Property<Dictionary<TagName, int>>.SetBaseValue(Dictionary<TagName, int>) Property<Dictionary<TagName, int>>.OnSetFullName(string) Property<Dictionary<TagName, int>>.GetFullName() Property<Dictionary<TagName, int>>.modifier Property<Dictionary<TagName, int>>.OnRecycled() Property<Dictionary<TagName, int>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<Dictionary<TagName, int>>.GetDefautModifier() Property<Dictionary<TagName, int>>.GetPropertyName() Property<Dictionary<TagName, int>>.GetDefaultDependentProperties() Property<Dictionary<TagName, int>>.GetDependentProperties() Property<Dictionary<TagName, int>>.SetDependentProperties(params PropertyNameInfo[]) Property<Dictionary<TagName, int>>.Initialize(IPropertyBase[], string) Property<Dictionary<TagName, int>>.OnClone(Dictionary<TagName, int>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TagProperty() public TagProperty() TagProperty(Dictionary<TagName, int>) public TagProperty(Dictionary<TagName, int> tags) Parameters tags Dictionary<TagName, int> Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<Dictionary<TagName, int>> GetDefautModifier() Returns IPropertyDependencyModifier<Dictionary<TagName, int>> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName GetTagLevel(TagName) Get the level of a tag. If the entity doesn't have this tag, an exception will be thrown public int GetTagLevel(TagName tagName) Parameters tagName TagName Returns int GetTags() Get all tags of this entity public Tag[] GetTags() Returns Tag[] HasTag(TagName) Check if this entity has a tag public bool HasTag(TagName tagName) Parameters tagName TagName Returns bool HasTag(TagName, out int) Check if this entity has a tag and get its level if it has public bool HasTag(TagName tagName, out int level) Parameters tagName TagName level int Returns bool HasTagOverLevel(TagName, int) Check if this entity has a tag with a level greater than or equal to the given level. If the entity doesn't have this tag, it will always return false public bool HasTagOverLevel(TagName tagName, int level) Parameters tagName TagName level int Returns bool"
  },
  "api/Runtime.DataFramework.Properties.TagProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TagProperty.html",
    "title": "Namespace Runtime.DataFramework.Properties.TagProperty | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Properties.TagProperty Classes TagProperty Interfaces ITagProperty Property for tags Enums TagName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.AttackRangeDefaultModifier.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.AttackRangeDefaultModifier.html",
    "title": "Class AttackRangeDefaultModifier | Capstone documentation",
    "keywords": "Class AttackRangeDefaultModifier Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class AttackRangeDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> AttackRangeDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.IAttackRangeProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.IAttackRangeProperty.html",
    "title": "Interface IAttackRangeProperty | Capstone documentation",
    "keywords": "Interface IAttackRangeProperty Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public interface IAttackRangeProperty : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.IVigilianceProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.IVigilianceProperty.html",
    "title": "Interface IVigilianceProperty | Capstone documentation",
    "keywords": "Interface IVigilianceProperty Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public interface IVigilianceProperty : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestAttackRange.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestAttackRange.html",
    "title": "Class TestAttackRange | Capstone documentation",
    "keywords": "Class TestAttackRange Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestAttackRange : AbstractLoadFromConfigProperty<float>, IAttackRangeProperty, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> TestAttackRange Implements IAttackRangeProperty IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestDanger.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestDanger.html",
    "title": "Class TestDanger | Capstone documentation",
    "keywords": "Class TestDanger Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestDanger : AbstractLoadFromConfigProperty<int>, IDangerProperty, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> TestDanger Implements IDangerProperty IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestDangerDefaultModifier.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestDangerDefaultModifier.html",
    "title": "Class TestDangerDefaultModifier | Capstone documentation",
    "keywords": "Class TestDangerDefaultModifier Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestDangerDefaultModifier : PropertyDependencyModifier<int>, IPropertyDependencyModifier<int> Inheritance object PropertyDependencyModifier<int> TestDangerDefaultModifier Implements IPropertyDependencyModifier<int> Inherited Members PropertyDependencyModifier<int>.dependenciesInType PropertyDependencyModifier<int>.Modify(int, IPropertyBase[], string, string) PropertyDependencyModifier<int>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<int>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(int) public override int OnModify(int propertyValue) Parameters propertyValue int Returns int"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestHashSetProperty.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestHashSetProperty.html",
    "title": "Class TestHashSetProperty | Capstone documentation",
    "keywords": "Class TestHashSetProperty Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestHashSetProperty : LoadFromConfigHashsetProperty<string>, IHashSetProperty<string>, IProperty<HashSet<string>>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<HashSet<string>> HashSetProperty<string> LoadFromConfigHashsetProperty<string> TestHashSetProperty Implements IHashSetProperty<string> IProperty<HashSet<string>> ILoadFromConfigProperty IPropertyBase Inherited Members LoadFromConfigHashsetProperty<string>.LoadFromConfig(dynamic) HashSetProperty<string>.RealValue HashSetProperty<string>.RealValues HashSetProperty<string>.SetBaseValue(HashSet<string>) HashSetProperty<string>.OnClone(HashSet<string>) Property<HashSet<string>>.PropertyName Property<HashSet<string>>.fullName Property<HashSet<string>>.BaseValue Property<HashSet<string>>.InitialValue Property<HashSet<string>>.overrideDependentProperties Property<HashSet<string>>.OnSetFullName(string) Property<HashSet<string>>.GetFullName() Property<HashSet<string>>.modifier Property<HashSet<string>>.OnRecycled() Property<HashSet<string>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HashSet<string>>.GetDependentProperties() Property<HashSet<string>>.SetDependentProperties(params PropertyNameInfo[]) Property<HashSet<string>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<HashSet<string>> GetDefautModifier() Returns IPropertyDependencyModifier<HashSet<string>> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestHealth.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestHealth.html",
    "title": "Class TestHealth | Capstone documentation",
    "keywords": "Class TestHealth Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestHealth : AbstractLoadFromConfigProperty<HealthInfo>, IHealthProperty, IProperty<HealthInfo>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<HealthInfo> AbstractLoadFromConfigProperty<HealthInfo> TestHealth Implements IHealthProperty IProperty<HealthInfo> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<HealthInfo>.LoadFromConfig(dynamic) Property<HealthInfo>.PropertyName Property<HealthInfo>.fullName Property<HealthInfo>.BaseValue Property<HealthInfo>.InitialValue Property<HealthInfo>.RealValue Property<HealthInfo>.overrideDependentProperties Property<HealthInfo>.SetBaseValue(HealthInfo) Property<HealthInfo>.OnSetFullName(string) Property<HealthInfo>.GetFullName() Property<HealthInfo>.modifier Property<HealthInfo>.OnRecycled() Property<HealthInfo>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HealthInfo>.GetDependentProperties() Property<HealthInfo>.SetDependentProperties(params PropertyNameInfo[]) Property<HealthInfo>.Initialize(IPropertyBase[], string) Property<HealthInfo>.OnClone(HealthInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCurrentHealth() public int GetCurrentHealth() Returns int GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<HealthInfo> GetDefautModifier() Returns IPropertyDependencyModifier<HealthInfo> GetMaxHealth() public int GetMaxHealth() Returns int GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestHealthDefaultModifier.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestHealthDefaultModifier.html",
    "title": "Class TestHealthDefaultModifier | Capstone documentation",
    "keywords": "Class TestHealthDefaultModifier Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestHealthDefaultModifier : PropertyDependencyModifier<HealthInfo>, IPropertyDependencyModifier<HealthInfo> Inheritance object PropertyDependencyModifier<HealthInfo> TestHealthDefaultModifier Implements IPropertyDependencyModifier<HealthInfo> Inherited Members PropertyDependencyModifier<HealthInfo>.dependenciesInType PropertyDependencyModifier<HealthInfo>.Modify(HealthInfo, IPropertyBase[], string, string) PropertyDependencyModifier<HealthInfo>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<HealthInfo>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<HealthInfo>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<HealthInfo>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(HealthInfo) public override HealthInfo OnModify(HealthInfo propertyValue) Parameters propertyValue HealthInfo Returns HealthInfo"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.TestVigiliance.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.TestVigiliance.html",
    "title": "Class TestVigiliance | Capstone documentation",
    "keywords": "Class TestVigiliance Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class TestVigiliance : AbstractLoadFromConfigProperty<float>, IVigilianceProperty, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> TestVigiliance Implements IVigilianceProperty IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.VigilianceDefaultModifier.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.VigilianceDefaultModifier.html",
    "title": "Class VigilianceDefaultModifier | Capstone documentation",
    "keywords": "Class VigilianceDefaultModifier Namespace Runtime.DataFramework.Properties.TestOnly Assembly MainGame.dll public class VigilianceDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> VigilianceDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.DataFramework.Properties.TestOnly.html": {
    "href": "api/Runtime.DataFramework.Properties.TestOnly.html",
    "title": "Namespace Runtime.DataFramework.Properties.TestOnly | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Properties.TestOnly Classes AttackRangeDefaultModifier TestAttackRange TestDanger TestDangerDefaultModifier TestHashSetProperty TestHealth TestHealthDefaultModifier TestVigiliance VigilianceDefaultModifier Interfaces IAttackRangeProperty IVigilianceProperty"
  },
  "api/Runtime.DataFramework.Properties.html": {
    "href": "api/Runtime.DataFramework.Properties.html",
    "title": "Namespace Runtime.DataFramework.Properties | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.Properties Namespaces Runtime.DataFramework.Properties.CustomProperties Runtime.DataFramework.Properties.TagProperty Runtime.DataFramework.Properties.TestOnly Classes AbstractLoadFromConfigProperty<T> DictionaryProperty<TKey, T> EmptyModifier<T> HashSetProperty<T> IndependentListProperty<T> Independent Properties are properties without any dependencies IndependentLoadFromConfigListProperty<T> IndependentLoadFromConfigProperty<T> IndependentProperty<T> Independent Properties are properties without any dependencies ListProperty<T> Use PropertyList instead if you want the values to be property as well. If your values are not property, use this class LoadFromConfigDictProperty<TKey, T> LoadFromConfigHashsetProperty<T> PropertyDependencyModifier<T> No need to be ES3 serialized PropertyDictionaryLoadFromConfig<TKey, T> PropertyDictionary<TKey, T> PropertyList<T> Use ListProperty instead if your values are not properties. If your values are properties, use this class Property<T> Rarity SerializedChildPropertyInfo Structs PropertyNameInfo Interfaces IDictionaryProperty<TKey, T> IHashSetProperty<T> IHaveSubProperties IListProperty<T> ILoadFromConfigProperty IPropertyBase IPropertyDependencyModifier<T> IPropertyDictionary<TKey, T> IProperty<T> IRarityProperty Enums PropertyName"
  },
  "api/Runtime.DataFramework.ViewControllers.BindAttribute.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.BindAttribute.html",
    "title": "Class BindAttribute | Capstone documentation",
    "keywords": "Class BindAttribute Namespace Runtime.DataFramework.ViewControllers Assembly MainGame.dll [AttributeUsage(AttributeTargets.Property)] public class BindAttribute : Attribute, _Attribute Inheritance object Attribute BindAttribute Implements _Attribute Derived BindCustomDataAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindAttribute(PropertyName) public BindAttribute(PropertyName propertyName) Parameters propertyName PropertyName BindAttribute(PropertyName, string) public BindAttribute(PropertyName propertyName, string getterMethodName) Parameters propertyName PropertyName getterMethodName string BindAttribute(PropertyName, string, string) public BindAttribute(PropertyName propertyName, string getterMethodName, string onChangedMethodName) Parameters propertyName PropertyName getterMethodName string onChangedMethodName string BindAttribute(string) public BindAttribute(string propertyFullNaame) Parameters propertyFullNaame string BindAttribute(string, string) public BindAttribute(string propertyFullNaame, string getterMethodName) Parameters propertyFullNaame string getterMethodName string BindAttribute(string, string, string) public BindAttribute(string propertyFullNaame, string getterMethodName, string onChangedMethodName) Parameters propertyFullNaame string getterMethodName string onChangedMethodName string Properties GetterMethodName public string GetterMethodName { get; set; } Property Value string OnChanged public string OnChanged { get; set; } Property Value string PropertyName public PropertyNameInfo PropertyName { get; } Property Value PropertyNameInfo"
  },
  "api/Runtime.DataFramework.ViewControllers.BindCustomDataAttribute.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.BindCustomDataAttribute.html",
    "title": "Class BindCustomDataAttribute | Capstone documentation",
    "keywords": "Class BindCustomDataAttribute Namespace Runtime.DataFramework.ViewControllers Assembly MainGame.dll [AttributeUsage(AttributeTargets.Property)] public class BindCustomDataAttribute : BindAttribute, _Attribute Inheritance object Attribute BindAttribute BindCustomDataAttribute Implements _Attribute Inherited Members BindAttribute.PropertyName BindAttribute.GetterMethodName BindAttribute.OnChanged Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindCustomDataAttribute(string, string) public BindCustomDataAttribute(string customPropertyName, string customPropertyDataName) Parameters customPropertyName string customPropertyDataName string BindCustomDataAttribute(string, string, string) public BindCustomDataAttribute(string customPropertyName, string customPropertyDataName, string getterMethodName) Parameters customPropertyName string customPropertyDataName string getterMethodName string BindCustomDataAttribute(string, string, string, string) public BindCustomDataAttribute(string customPropertyName, string customPropertyDataName, string getterMethodName, string onChangedMethodName) Parameters customPropertyName string customPropertyDataName string getterMethodName string onChangedMethodName string Properties CustomDataName public string CustomDataName { get; } Property Value string"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.AbstractBasicEntityViewController-1.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.AbstractBasicEntityViewController-1.html",
    "title": "Class AbstractBasicEntityViewController<T> | Capstone documentation",
    "keywords": "Class AbstractBasicEntityViewController<T> Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll public abstract class AbstractBasicEntityViewController<T> : AbstractEntityViewController<T>, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IHaveCustomProperties, IHaveTags Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> Implements IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractDamagableViewController<T> AbstractResourceViewController<T> Inherited Members AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.Awake() AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnRecycled() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods BindCustomData<T>(string, string, string, Action<T, T?>) protected void BindCustomData<T>(string bindedPropertyName, string customPropertyName, string customDataName, Action<T, T?> callback = null) Parameters bindedPropertyName string customPropertyName string customDataName string callback Action<T, T> Type Parameters T BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) protected void BindCustomData<TargetType>(string bindedPropertyName, string customPropertyName, string customDataName, Func<dynamic, TargetType> getter, Action<TargetType, TargetType> callback = null) Parameters bindedPropertyName string customPropertyName string customDataName string getter Func<dynamic, TargetType> callback Action<TargetType, TargetType> Type Parameters TargetType"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.AbstractCreatureViewController-1.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.AbstractCreatureViewController-1.html",
    "title": "Class AbstractCreatureViewController<T> | Capstone documentation",
    "keywords": "Class AbstractCreatureViewController<T> Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll An abstract view controller for creature entity (like player, enemy, etc.) public abstract class AbstractCreatureViewController<T> : AbstractDamagableViewController<T>, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHurtResponder, IBelongToFaction where T : class, IHaveCustomProperties, IHaveTags, IDamageable, ICreature Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractDamagableViewController<T> AbstractCreatureViewController<T> Implements IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHurtResponder IBelongToFaction Derived AbstractEnemyViewController<T> PlayerController Inherited Members AbstractDamagableViewController<T>.OnStart() AbstractDamagableViewController<T>.OnEntityDie(IBelongToFaction) AbstractDamagableViewController<T>.OnEntityTakeDamage(int, int, IBelongToFaction) AbstractDamagableViewController<T>.OnEntityHeal(int, int, IBelongToFaction) AbstractDamagableViewController<T>.CurrentFaction AbstractDamagableViewController<T>.CheckHurt(HitData) AbstractDamagableViewController<T>.HurtResponse(HitData) AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.Awake() AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnRecycled() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.AbstractDamagableViewController-1.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.AbstractDamagableViewController-1.html",
    "title": "Class AbstractDamagableViewController<T> | Capstone documentation",
    "keywords": "Class AbstractDamagableViewController<T> Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll An abstract view controller for entities that can take damage (have health) public abstract class AbstractDamagableViewController<T> : AbstractBasicEntityViewController<T>, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHurtResponder, IBelongToFaction where T : class, IHaveCustomProperties, IHaveTags, IDamageable Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractDamagableViewController<T> Implements IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHurtResponder IBelongToFaction Derived AbstractCreatureViewController<T> Inherited Members AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.Awake() AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnRecycled() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Methods CheckHurt(HitData) public bool CheckHurt(HitData data) Parameters data HitData Returns bool HurtResponse(HitData) public virtual void HurtResponse(HitData data) Parameters data HitData OnEntityDie(IBelongToFaction) When the entity dies, this method will be called protected abstract void OnEntityDie(IBelongToFaction damagedealer) Parameters damagedealer IBelongToFaction OnEntityHeal(int, int, IBelongToFaction) When the entity is healed, this method will be called protected abstract void OnEntityHeal(int heal, int currenthealth, IBelongToFaction healer) Parameters heal int currenthealth int healer IBelongToFaction OnEntityTakeDamage(int, int, IBelongToFaction) When the entity takes damage, this method will be called protected abstract void OnEntityTakeDamage(int damage, int currenthealth, IBelongToFaction damagedealer) Parameters damage int currenthealth int damagedealer IBelongToFaction The dealer of the damage. You can access its faction from it OnStart() protected override void OnStart()"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.AbstractEntityViewController-1.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.AbstractEntityViewController-1.html",
    "title": "Class AbstractEntityViewController<T> | Capstone documentation",
    "keywords": "Class AbstractEntityViewController<T> Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll public abstract class AbstractEntityViewController<T> : DefaultPoolableGameObjectSaved, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IEntity Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> Implements IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractBasicEntityViewController<T> Inherited Members DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields autoCreateNewEntityWhenStart [Header(\"Auto Create New Entity by OnBuildNewEntity() When Start\")] [Tooltip(\"If not, you must manually call InitWithID() to initialize the entity.\")] [SerializeField] protected bool autoCreateNewEntityWhenStart Field Value bool autoDestroyWhenEntityRemoved [FormerlySerializedAs(\"autoRemoveEntityWhenDestroyed\")] [Header(\"Entity Recycle Logic\")] [SerializeField] protected bool autoDestroyWhenEntityRemoved Field Value bool entityModel protected IEntityModel entityModel Field Value IEntityModel hasInteractiveHint [FormerlySerializedAs(\"triggerCheck\")] [Header(\"Entity Interaction\")] [SerializeField] protected bool hasInteractiveHint Field Value bool interactiveHintLocalizedKey [SerializeField] protected string interactiveHintLocalizedKey Field Value string interactiveHintPrefabName [SerializeField] protected string interactiveHintPrefabName Field Value string nameTagFollowTransform [SerializeField] protected Transform nameTagFollowTransform Field Value Transform nameTagPrefabName [SerializeField] protected string nameTagPrefabName Field Value string properties protected List<PropertyInfo> properties Field Value List<PropertyInfo> showNameTagWhenPointed [Header(\"Entity Name Tag\")] [SerializeField] protected bool showNameTagWhenPointed Field Value bool Properties BoundEntity protected T BoundEntity { get; } Property Value T ID public string ID { get; set; } Property Value string Methods Awake() protected override void Awake() Bind<T>(string, BindableProperty<T>, Action<T, T>) Automatically bind a BindableProperty to a property, the generic type of BindableProperty must be the same as the property protected void Bind<T>(string bindedPropertyName, BindableProperty<T> bindableProperty, Action<T, T> callback = null) Parameters bindedPropertyName string bindableProperty BindableProperty<T> callback Action<T, T> Type Parameters T Type of the property, as well as the generic type of your bindable property Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) protected void Bind<T>(string bindedPropertyName, IBindableProperty bindableProperty, Func<dynamic, T> getter, Action<T, T> callback) Parameters bindedPropertyName string bindableProperty IBindableProperty getter Func<dynamic, T> callback Action<T, T> Type Parameters T Bind<IPropertyType>(string, Action<dynamic, dynamic>) Automatically bind propertyName property to the real value of IPropertyType of th entity. This will not bind to nested properties This is not recommended though it's convenient, because it will cost more performance protected void Bind<IPropertyType>(string bindedPropertyName, Action<dynamic, dynamic> callback = null) where IPropertyType : class, IPropertyBase Parameters bindedPropertyName string callback Action<dynamic, dynamic> Type Parameters IPropertyType Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) Bind a BindableProperty to a property, with custom getter in case the property is not the same type as the BindableProperty protected void Bind<BindedDataType, TargetType>(string bindedPropertyName, BindableProperty<BindedDataType> bindableProperty, Func<BindedDataType, TargetType> getter, Action<TargetType, TargetType> callback = null) Parameters bindedPropertyName string bindableProperty BindableProperty<BindedDataType> getter Func<BindedDataType, TargetType> your custom getter, should return something with the same type as the target callback Action<TargetType, TargetType> Type Parameters BindedDataType Type of the value of the source property TargetType type of the target property ForceUpdatePropertyBindings() protected void ForceUpdatePropertyBindings() InitWithID(string) public void InitWithID(string id) Parameters id string OnBindEntityProperty() protected abstract void OnBindEntityProperty() OnBindProperty() protected void OnBindProperty() OnBuildNewEntity() protected abstract IEntity OnBuildNewEntity() Returns IEntity OnDestroy() protected virtual void OnDestroy() OnEntityRecycled(IEntity) protected virtual void OnEntityRecycled(IEntity ent) Parameters ent IEntity OnEntityStart() protected abstract void OnEntityStart() OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) Exit the interactive zone, no matter if reachable or not public virtual void OnPlayerExitInteractiveZone(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) Enter the interactive zone, no matter if reachable or not public virtual void OnPlayerInInteractiveZone(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) public virtual void OnPlayerInteractiveZoneNotReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) public virtual void OnPlayerInteractiveZoneReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPointByCrosshair() public virtual void OnPointByCrosshair() OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStart() protected virtual void OnStart() OnStartOrAllocate() public override void OnStartOrAllocate() OnUnPointByCrosshair() public virtual void OnUnPointByCrosshair() UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) protected void UpdateBinding<T, BindablePropertyType>(IBindableProperty bindableProperty, PropertyInfo bindedProperty, Func<BindablePropertyType, T> getter, Action<T, T> callback) Parameters bindableProperty IBindableProperty bindedProperty PropertyInfo getter Func<BindablePropertyType, T> callback Action<T, T> Type Parameters T BindablePropertyType"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.IEnemyViewController.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.IEnemyViewController.html",
    "title": "Interface IEnemyViewController | Capstone documentation",
    "keywords": "Interface IEnemyViewController Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll public interface IEnemyViewController : IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture() IHitResponder.CheckHit(HitData) IHitResponder.HitResponse(HitData) IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) Properties EnemyEntity IEnemyEntity EnemyEntity { get; } Property Value IEnemyEntity"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.IEntityViewController.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.IEntityViewController.html",
    "title": "Interface IEntityViewController | Capstone documentation",
    "keywords": "Interface IEntityViewController Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll public interface IEntityViewController : IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IBelongToArchitecture.GetArchitecture() Properties Entity IEntity Entity { get; } Property Value IEntity ID string ID { get; } Property Value string Methods InitWithID(string) void InitWithID(string id) Parameters id string OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) Exit the interactive zone, no matter if reachable or not void OnPlayerExitInteractiveZone(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) Enter the interactive zone, no matter if reachable or not void OnPlayerInInteractiveZone(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) void OnPlayerInteractiveZoneNotReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) void OnPlayerInteractiveZoneReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPointByCrosshair() void OnPointByCrosshair() OnUnPointByCrosshair() void OnUnPointByCrosshair()"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.IWeaponViewController.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.IWeaponViewController.html",
    "title": "Interface IWeaponViewController | Capstone documentation",
    "keywords": "Interface IWeaponViewController Namespace Runtime.DataFramework.ViewControllers.Entities Assembly MainGame.dll public interface IWeaponViewController : IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture() Properties WeaponEntity IWeaponEntity WeaponEntity { get; } Property Value IWeaponEntity"
  },
  "api/Runtime.DataFramework.ViewControllers.Entities.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.Entities.html",
    "title": "Namespace Runtime.DataFramework.ViewControllers.Entities | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.ViewControllers.Entities Classes AbstractBasicEntityViewController<T> AbstractCreatureViewController<T> An abstract view controller for creature entity (like player, enemy, etc.) AbstractDamagableViewController<T> An abstract view controller for entities that can take damage (have health) AbstractEntityViewController<T> Interfaces IEnemyViewController IEntityViewController IWeaponViewController"
  },
  "api/Runtime.DataFramework.ViewControllers.html": {
    "href": "api/Runtime.DataFramework.ViewControllers.html",
    "title": "Namespace Runtime.DataFramework.ViewControllers | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework.ViewControllers Namespaces Runtime.DataFramework.ViewControllers.Entities Classes BindAttribute BindCustomDataAttribute"
  },
  "api/Runtime.DataFramework.html": {
    "href": "api/Runtime.DataFramework.html",
    "title": "Namespace Runtime.DataFramework | Capstone documentation",
    "keywords": "Namespace Runtime.DataFramework Namespaces Runtime.DataFramework.Description Runtime.DataFramework.Entities Runtime.DataFramework.Properties Runtime.DataFramework.ViewControllers"
  },
  "api/Runtime.Enemies.Boss1.html": {
    "href": "api/Runtime.Enemies.Boss1.html",
    "title": "Class Boss1 | Capstone documentation",
    "keywords": "Class Boss1 Namespace Runtime.Enemies Assembly MainGame.dll public class Boss1 : AbstractBossViewController<Boss1Entity>, IHurtResponder, IEnemyViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<Boss1Entity> AbstractBasicEntityViewController<Boss1Entity> AbstractDamagableViewController<Boss1Entity> AbstractCreatureViewController<Boss1Entity> AbstractEnemyViewController<Boss1Entity> AbstractBossViewController<Boss1Entity> Boss1 Implements IHurtResponder IEnemyViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Inherited Members AbstractBossViewController<Boss1Entity>.OnSpawnHealthBar() AbstractBossViewController<Boss1Entity>.OnDestroyHealthBar(HealthBar) AbstractEnemyViewController<Boss1Entity>.Danger AbstractEnemyViewController<Boss1Entity>.MaxHealth AbstractEnemyViewController<Boss1Entity>.CurrentHealth AbstractEnemyViewController<Boss1Entity>.enemyModel AbstractEnemyViewController<Boss1Entity>.currentHealthBar AbstractEnemyViewController<Boss1Entity>.hitObjects AbstractEnemyViewController<Boss1Entity>.OnStart() AbstractEnemyViewController<Boss1Entity>.OnBindEntityProperty() AbstractEnemyViewController<Boss1Entity>.OnBuildNewEntity() AbstractEnemyViewController<Boss1Entity>.GetMaxHealth(dynamic) AbstractEnemyViewController<Boss1Entity>.GetCurrentHealth(dynamic) AbstractEnemyViewController<Boss1Entity>.OnEntityDie(IBelongToFaction) AbstractEnemyViewController<Boss1Entity>.OnCurrentHealthChanged(int, int) AbstractEnemyViewController<Boss1Entity>.CheckHit(HitData) AbstractEnemyViewController<Boss1Entity>.HitResponse(HitData) AbstractDamagableViewController<Boss1Entity>.CurrentFaction AbstractDamagableViewController<Boss1Entity>.CheckHurt(HitData) AbstractBasicEntityViewController<Boss1Entity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<Boss1Entity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<Boss1Entity>.ID AbstractEntityViewController<Boss1Entity>.autoCreateNewEntityWhenStart AbstractEntityViewController<Boss1Entity>.showNameTagWhenPointed AbstractEntityViewController<Boss1Entity>.nameTagFollowTransform AbstractEntityViewController<Boss1Entity>.nameTagPrefabName AbstractEntityViewController<Boss1Entity>.hasInteractiveHint AbstractEntityViewController<Boss1Entity>.interactiveHintPrefabName AbstractEntityViewController<Boss1Entity>.interactiveHintLocalizedKey AbstractEntityViewController<Boss1Entity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<Boss1Entity>.entityModel AbstractEntityViewController<Boss1Entity>.BoundEntity AbstractEntityViewController<Boss1Entity>.properties AbstractEntityViewController<Boss1Entity>.OnStartOrAllocate() AbstractEntityViewController<Boss1Entity>.InitWithID(string) AbstractEntityViewController<Boss1Entity>.OnPointByCrosshair() AbstractEntityViewController<Boss1Entity>.OnUnPointByCrosshair() AbstractEntityViewController<Boss1Entity>.OnEntityRecycled(IEntity) AbstractEntityViewController<Boss1Entity>.OnBindProperty() AbstractEntityViewController<Boss1Entity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<Boss1Entity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<Boss1Entity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<Boss1Entity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<Boss1Entity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<Boss1Entity>.ForceUpdatePropertyBindings() AbstractEntityViewController<Boss1Entity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<Boss1Entity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<Boss1Entity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<Boss1Entity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<Boss1Entity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields agent public NavMeshAgent agent Field Value NavMeshAgent animationSMBManager public AnimationSMBManager animationSMBManager Field Value AnimationSMBManager animator [Header(\"HitResponder_Info\")] public Animator animator Field Value Animator Properties CurrentShellHealth public int CurrentShellHealth { get; } Property Value int MaxShellHealth public int MaxShellHealth { get; } Property Value int Methods Awake() protected override void Awake() ChangeShellStatus(bool) public void ChangeShellStatus(bool newStatus) Parameters newStatus bool ClearHitObjects() public void ClearHitObjects() HurtResponse(HitData) public override void HurtResponse(HitData data) Parameters data HitData OnAnimationEvent(string) public void OnAnimationEvent(string eventName) Parameters eventName string OnEntityHeal(int, int, IBelongToFaction) When the entity is healed, this method will be called protected override void OnEntityHeal(int heal, int currenthealth, IBelongToFaction healer) Parameters heal int currenthealth int healer IBelongToFaction OnEntityStart() protected override void OnEntityStart() OnEntityTakeDamage(int, int, IBelongToFaction) When the entity takes damage, this method will be called protected override void OnEntityTakeDamage(int damage, int currenthealth, IBelongToFaction damagedealer) Parameters damage int currenthealth int damagedealer IBelongToFaction The dealer of the damage. You can access its faction from it OnInitEnemyEntity(EnemyBuilder<Boss1Entity>) protected override IEnemyEntity OnInitEnemyEntity(EnemyBuilder<Boss1Entity> builder) Parameters builder EnemyBuilder<Boss1Entity> Returns IEnemyEntity OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnShellClosedChanged(bool, bool) protected void OnShellClosedChanged(bool oldValue, bool newValue) Parameters oldValue bool newValue bool WaitingForDeathCondition() protected override MikroAction WaitingForDeathCondition() Returns MikroAction"
  },
  "api/Runtime.Enemies.Boss1Entity.html": {
    "href": "api/Runtime.Enemies.Boss1Entity.html",
    "title": "Class Boss1Entity | Capstone documentation",
    "keywords": "Class Boss1Entity Namespace Runtime.Enemies Assembly MainGame.dll public class Boss1Entity : EnemyEntity<Boss1Entity>, IEnemyEntity, ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity DamageableEntity AbstractCreature EnemyEntity<Boss1Entity> Boss1Entity Implements IEnemyEntity ICreature IDamageable IBelongToFaction IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members EnemyEntity<Boss1Entity>.dangerProperty EnemyEntity<Boss1Entity>.healthProperty EnemyEntity<Boss1Entity>.tasteProperty EnemyEntity<Boss1Entity>.OnEntityRegisterAdditionalProperties() EnemyEntity<Boss1Entity>.OnEntityStart(bool) EnemyEntity<Boss1Entity>.GetDefaultFaction() EnemyEntity<Boss1Entity>.GetDanger() EnemyEntity<Boss1Entity>.GetHealth() EnemyEntity<Boss1Entity>.GetTaste() EnemyEntity<Boss1Entity>.GetConfigTable() EnemyEntity<Boss1Entity>.OnDoRecycle() DamageableEntity.CurrentFaction DamageableEntity.IsInvincible DamageableEntity.HealthProperty DamageableEntity.OnRegisterProperties() DamageableEntity.GetMaxHealth() DamageableEntity.GetCurrentHealth() DamageableEntity.TakeDamage(int, IBelongToFaction) DamageableEntity.OnTakeDamageAdditionalCheck(int, IBelongToFaction) DamageableEntity.CheckCanTakeDamage(IBelongToFaction) DamageableEntity.RegisterOnTakeDamage(OnTakeDamage) DamageableEntity.UnRegisterOnTakeDamage(OnTakeDamage) DamageableEntity.Heal(int, IBelongToFaction) DamageableEntity.RegisterOnHeal(OnHeal) DamageableEntity.UnRegisterOnHeal(OnHeal) AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EntityName public override string EntityName { get; set; } Property Value string ShellClosed public BindableProperty<bool> ShellClosed { get; } Property Value BindableProperty<bool> Methods ChangeShellStatus(bool) public void ChangeShellStatus(bool newStatus) Parameters newStatus bool OnEnemyRegisterAdditionalProperties() protected override void OnEnemyRegisterAdditionalProperties() OnGetDescription(string) Return the description of the entity protected override string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnRecycle() public override void OnRecycle() OnRegisterCustomProperties() protected override ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[]"
  },
  "api/Runtime.Enemies.Model.Builders.EnemyBuilder-1.html": {
    "href": "api/Runtime.Enemies.Model.Builders.EnemyBuilder-1.html",
    "title": "Class EnemyBuilder<T> | Capstone documentation",
    "keywords": "Class EnemyBuilder<T> Namespace Runtime.Enemies.Model.Builders Assembly MainGame.dll public class EnemyBuilder<T> : CreatureBuilder<EnemyBuilder<T>, T>, IPoolable where T : class, IEntity, new() Type Parameters T Inheritance object EntityBuilder<EnemyBuilder<T>, T> CreatureBuilder<EnemyBuilder<T>, T> EnemyBuilder<T> Implements IPoolable Inherited Members CreatureBuilder<EnemyBuilder<T>, T>.SetHealth(HealthInfo, IPropertyDependencyModifier<HealthInfo>) CreatureBuilder<EnemyBuilder<T>, T>.SetHealthModifier(IPropertyDependencyModifier<HealthInfo>) CreatureBuilder<EnemyBuilder<T>, T>.SetInvincible(bool) EntityBuilder<EnemyBuilder<T>, T>.Entity EntityBuilder<EnemyBuilder<T>, T>.onEntityCreated EntityBuilder<EnemyBuilder<T>, T>.RegisterOnEntityCreated(Action<T>) EntityBuilder<EnemyBuilder<T>, T>.CheckEntity() EntityBuilder<EnemyBuilder<T>, T>.OverrideName(string) EntityBuilder<EnemyBuilder<T>, T>.FromConfig(ConfigTable) EntityBuilder<EnemyBuilder<T>, T>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<EnemyBuilder<T>, T>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<EnemyBuilder<T>, T>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<EnemyBuilder<T>, T>.AddTag(TagName, int) EntityBuilder<EnemyBuilder<T>, T>.Build() EntityBuilder<EnemyBuilder<T>, T>.OnRecycled() EntityBuilder<EnemyBuilder<T>, T>.IsRecycled EntityBuilder<EnemyBuilder<T>, T>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnemyBuilder() public EnemyBuilder() Methods Allocate(int) public static EnemyBuilder<T> Allocate(int rarity) Parameters rarity int Returns EnemyBuilder<T> RecycleToCache() public override void RecycleToCache() SetAllBasics(int, HealthInfo, params TasteType[]) public EnemyBuilder<T> SetAllBasics(int danger, HealthInfo healthInfo, params TasteType[] tasteTypes) Parameters danger int healthInfo HealthInfo tasteTypes TasteType[] Returns EnemyBuilder<T> SetAllBasicsModifiers(IPropertyDependencyModifier<int>, IPropertyDependencyModifier<HealthInfo>) public EnemyBuilder<T> SetAllBasicsModifiers(IPropertyDependencyModifier<int> dangerModifier, IPropertyDependencyModifier<HealthInfo> healthInfoModifier) Parameters dangerModifier IPropertyDependencyModifier<int> healthInfoModifier IPropertyDependencyModifier<HealthInfo> Returns EnemyBuilder<T> SetDanger(int, IPropertyDependencyModifier<int>) public EnemyBuilder<T> SetDanger(int danger, IPropertyDependencyModifier<int> modifier = null) Parameters danger int modifier IPropertyDependencyModifier<int> Returns EnemyBuilder<T> SetDangerModifier(IPropertyDependencyModifier<int>) public EnemyBuilder<T> SetDangerModifier(IPropertyDependencyModifier<int> modifier = null) Parameters modifier IPropertyDependencyModifier<int> Returns EnemyBuilder<T> SetTaste(params TasteType[]) public EnemyBuilder<T> SetTaste(params TasteType[] tasteTypes) Parameters tasteTypes TasteType[] Returns EnemyBuilder<T>"
  },
  "api/Runtime.Enemies.Model.Builders.html": {
    "href": "api/Runtime.Enemies.Model.Builders.html",
    "title": "Namespace Runtime.Enemies.Model.Builders | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies.Model.Builders Classes EnemyBuilder<T>"
  },
  "api/Runtime.Enemies.Model.EnemyEntity-1.html": {
    "href": "api/Runtime.Enemies.Model.EnemyEntity-1.html",
    "title": "Class EnemyEntity<T> | Capstone documentation",
    "keywords": "Class EnemyEntity<T> Namespace Runtime.Enemies.Model Assembly MainGame.dll public abstract class EnemyEntity<T> : AbstractCreature, IEnemyEntity, ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : EnemyEntity<T>, new() Type Parameters T Inheritance object Entity AbstractBasicEntity DamageableEntity AbstractCreature EnemyEntity<T> Implements IEnemyEntity ICreature IDamageable IBelongToFaction IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived Boss1Entity BeeEntity Inherited Members DamageableEntity.CurrentFaction DamageableEntity.IsInvincible DamageableEntity.HealthProperty DamageableEntity.OnRegisterProperties() DamageableEntity.GetMaxHealth() DamageableEntity.GetCurrentHealth() DamageableEntity.TakeDamage(int, IBelongToFaction) DamageableEntity.OnTakeDamageAdditionalCheck(int, IBelongToFaction) DamageableEntity.CheckCanTakeDamage(IBelongToFaction) DamageableEntity.RegisterOnTakeDamage(OnTakeDamage) DamageableEntity.UnRegisterOnTakeDamage(OnTakeDamage) DamageableEntity.Heal(int, IBelongToFaction) DamageableEntity.RegisterOnHeal(OnHeal) DamageableEntity.UnRegisterOnHeal(OnHeal) AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields dangerProperty protected IDangerProperty dangerProperty Field Value IDangerProperty healthProperty protected IHealthProperty healthProperty Field Value IHealthProperty tasteProperty protected ITasteProperty tasteProperty Field Value ITasteProperty Methods GetConfigTable() protected override ConfigTable GetConfigTable() Returns ConfigTable GetDanger() public BindableProperty<int> GetDanger() Returns BindableProperty<int> GetDefaultFaction() protected override Faction GetDefaultFaction() Returns Faction GetHealth() public BindableProperty<HealthInfo> GetHealth() Returns BindableProperty<HealthInfo> GetTaste() public BindableList<TasteType> GetTaste() Returns BindableList<TasteType> OnDoRecycle() public override void OnDoRecycle() OnEnemyRegisterAdditionalProperties() protected abstract void OnEnemyRegisterAdditionalProperties() OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected override void OnEntityRegisterAdditionalProperties() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool"
  },
  "api/Runtime.Enemies.Model.EnemyEntityModel.html": {
    "href": "api/Runtime.Enemies.Model.EnemyEntityModel.html",
    "title": "Class EnemyEntityModel | Capstone documentation",
    "keywords": "Class EnemyEntityModel Namespace Runtime.Enemies.Model Assembly MainGame.dll public class EnemyEntityModel : EntityModel<IEnemyEntity>, IEnemyEntityModel, IEntityModel<IEnemyEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel EntityModel<IEnemyEntity> EnemyEntityModel Implements IEnemyEntityModel IEntityModel<IEnemyEntity> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members EntityModel<IEnemyEntity>.entityBuilderFactory EntityModel<IEnemyEntity>.entities EntityModel<IEnemyEntity>.OnInit() EntityModel<IEnemyEntity>.OnEntityBuilt(IEnemyEntity) EntityModel<IEnemyEntity>.GetEntity(string) EntityModel<IEnemyEntity>.RemoveEntity(string) EntityModel<IEnemyEntity>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEnemyBuilder<T>(int, bool) Get the enemy builder for the entity type public EnemyBuilder<T> GetEnemyBuilder<T>(int rarity, bool addToModelOnceBuilt = true) where T : class, IEnemyEntity, new() Parameters rarity int addToModelOnceBuilt bool Returns EnemyBuilder<T> Type Parameters T"
  },
  "api/Runtime.Enemies.Model.IEnemyEntity.html": {
    "href": "api/Runtime.Enemies.Model.IEnemyEntity.html",
    "title": "Interface IEnemyEntity | Capstone documentation",
    "keywords": "Interface IEnemyEntity Namespace Runtime.Enemies.Model Assembly MainGame.dll public interface IEnemyEntity : ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IDamageable.HealthProperty IDamageable.GetMaxHealth() IDamageable.GetCurrentHealth() IDamageable.TakeDamage(int, IBelongToFaction) IDamageable.RegisterOnTakeDamage(OnTakeDamage) IDamageable.UnRegisterOnTakeDamage(OnTakeDamage) IDamageable.Heal(int, IBelongToFaction) IDamageable.RegisterOnHeal(OnHeal) IDamageable.UnRegisterOnHeal(OnHeal) IDamageable.IsInvincible IDamageable.CheckCanTakeDamage(IBelongToFaction) IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Methods GetDanger() BindableProperty<int> GetDanger() Returns BindableProperty<int> GetHealth() BindableProperty<HealthInfo> GetHealth() Returns BindableProperty<HealthInfo> GetRarity() int GetRarity() Returns int GetTaste() BindableList<TasteType> GetTaste() Returns BindableList<TasteType>"
  },
  "api/Runtime.Enemies.Model.IEnemyEntityModel.html": {
    "href": "api/Runtime.Enemies.Model.IEnemyEntityModel.html",
    "title": "Interface IEnemyEntityModel | Capstone documentation",
    "keywords": "Interface IEnemyEntityModel Namespace Runtime.Enemies.Model Assembly MainGame.dll Model for enemies public interface IEnemyEntityModel : IEntityModel<IEnemyEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IEntityModel<IEnemyEntity>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetEnemyBuilder<T>(int, bool) Get the enemy builder for the entity type EnemyBuilder<T> GetEnemyBuilder<T>(int rarity, bool addToModelOnceBuilt = true) where T : class, IEnemyEntity, new() Parameters rarity int addToModelOnceBuilt bool Returns EnemyBuilder<T> Type Parameters T"
  },
  "api/Runtime.Enemies.Model.Properties.Danger.html": {
    "href": "api/Runtime.Enemies.Model.Properties.Danger.html",
    "title": "Class Danger | Capstone documentation",
    "keywords": "Class Danger Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public class Danger : AbstractLoadFromConfigProperty<int>, IDangerProperty, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> Danger Implements IDangerProperty IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Enemies.Model.Properties.Health.html": {
    "href": "api/Runtime.Enemies.Model.Properties.Health.html",
    "title": "Class Health | Capstone documentation",
    "keywords": "Class Health Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll Health property. Contains current and max health. Depends on Rarity property. public class Health : AbstractLoadFromConfigProperty<HealthInfo>, IHealthProperty, IProperty<HealthInfo>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<HealthInfo> AbstractLoadFromConfigProperty<HealthInfo> Health Implements IHealthProperty IProperty<HealthInfo> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<HealthInfo>.LoadFromConfig(dynamic) Property<HealthInfo>.PropertyName Property<HealthInfo>.fullName Property<HealthInfo>.BaseValue Property<HealthInfo>.InitialValue Property<HealthInfo>.RealValue Property<HealthInfo>.overrideDependentProperties Property<HealthInfo>.SetBaseValue(HealthInfo) Property<HealthInfo>.OnSetFullName(string) Property<HealthInfo>.GetFullName() Property<HealthInfo>.modifier Property<HealthInfo>.OnRecycled() Property<HealthInfo>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HealthInfo>.GetDependentProperties() Property<HealthInfo>.SetDependentProperties(params PropertyNameInfo[]) Property<HealthInfo>.Initialize(IPropertyBase[], string) Property<HealthInfo>.OnClone(HealthInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCurrentHealth() public int GetCurrentHealth() Returns int GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<HealthInfo> GetDefautModifier() Returns IPropertyDependencyModifier<HealthInfo> GetMaxHealth() public int GetMaxHealth() Returns int GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Enemies.Model.Properties.HealthInfo.html": {
    "href": "api/Runtime.Enemies.Model.Properties.HealthInfo.html",
    "title": "Struct HealthInfo | Capstone documentation",
    "keywords": "Struct HealthInfo Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public struct HealthInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HealthInfo(int, int) public HealthInfo(int maxHealth, int currentHealth) Parameters maxHealth int currentHealth int Fields CurrentHealth public int CurrentHealth Field Value int MaxHealth public int MaxHealth Field Value int Operators operator +(HealthInfo, int) public static HealthInfo operator +(HealthInfo healthInfo, int value) Parameters healthInfo HealthInfo value int Returns HealthInfo operator -(HealthInfo, int) public static HealthInfo operator -(HealthInfo healthInfo, int value) Parameters healthInfo HealthInfo value int Returns HealthInfo"
  },
  "api/Runtime.Enemies.Model.Properties.IDangerProperty.html": {
    "href": "api/Runtime.Enemies.Model.Properties.IDangerProperty.html",
    "title": "Interface IDangerProperty | Capstone documentation",
    "keywords": "Interface IDangerProperty Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public interface IDangerProperty : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Enemies.Model.Properties.IHealthProperty.html": {
    "href": "api/Runtime.Enemies.Model.Properties.IHealthProperty.html",
    "title": "Interface IHealthProperty | Capstone documentation",
    "keywords": "Interface IHealthProperty Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll Health property. Contains current and max health. Depends on Rarity property. public interface IHealthProperty : IProperty<HealthInfo>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<HealthInfo>.BaseValue IProperty<HealthInfo>.InitialValue IProperty<HealthInfo>.RealValue IProperty<HealthInfo>.SetBaseValue(HealthInfo) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetCurrentHealth() int GetCurrentHealth() Returns int GetMaxHealth() int GetMaxHealth() Returns int"
  },
  "api/Runtime.Enemies.Model.Properties.ITasteProperty.html": {
    "href": "api/Runtime.Enemies.Model.Properties.ITasteProperty.html",
    "title": "Interface ITasteProperty | Capstone documentation",
    "keywords": "Interface ITasteProperty Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public interface ITasteProperty : IListProperty<TasteType>, IProperty<List<TasteType>>, ILoadFromConfigProperty, IPropertyBase Inherited Members IListProperty<TasteType>.RealValues IProperty<List<TasteType>>.BaseValue IProperty<List<TasteType>>.InitialValue IProperty<List<TasteType>>.RealValue IProperty<List<TasteType>>.SetBaseValue(List<TasteType>) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Enemies.Model.Properties.Taste.html": {
    "href": "api/Runtime.Enemies.Model.Properties.Taste.html",
    "title": "Class Taste | Capstone documentation",
    "keywords": "Class Taste Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public class Taste : IndependentLoadFromConfigListProperty<TasteType>, ITasteProperty, IListProperty<TasteType>, IProperty<List<TasteType>>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<List<TasteType>> ListProperty<TasteType> IndependentListProperty<TasteType> IndependentLoadFromConfigListProperty<TasteType> Taste Implements ITasteProperty IListProperty<TasteType> IProperty<List<TasteType>> ILoadFromConfigProperty IPropertyBase Inherited Members IndependentLoadFromConfigListProperty<TasteType>.LoadFromConfig(dynamic) IndependentListProperty<TasteType>.GetDefautModifier() IndependentListProperty<TasteType>.GetDefaultDependentProperties() ListProperty<TasteType>.RealValue ListProperty<TasteType>.RealValues ListProperty<TasteType>.SetBaseValue(List<TasteType>) ListProperty<TasteType>.OnClone(List<TasteType>) Property<List<TasteType>>.PropertyName Property<List<TasteType>>.fullName Property<List<TasteType>>.BaseValue Property<List<TasteType>>.InitialValue Property<List<TasteType>>.overrideDependentProperties Property<List<TasteType>>.OnSetFullName(string) Property<List<TasteType>>.GetFullName() Property<List<TasteType>>.modifier Property<List<TasteType>>.OnRecycled() Property<List<TasteType>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<List<TasteType>>.GetDependentProperties() Property<List<TasteType>>.SetDependentProperties(params PropertyNameInfo[]) Property<List<TasteType>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Taste() public Taste() Taste(params TasteType[]) public Taste(params TasteType[] baseValues) Parameters baseValues TasteType[] Methods GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Enemies.Model.Properties.TasteType.html": {
    "href": "api/Runtime.Enemies.Model.Properties.TasteType.html",
    "title": "Enum TasteType | Capstone documentation",
    "keywords": "Enum TasteType Namespace Runtime.Enemies.Model.Properties Assembly MainGame.dll public enum TasteType Fields Type1 = 0 Type2 = 1 Type3 = 2"
  },
  "api/Runtime.Enemies.Model.Properties.html": {
    "href": "api/Runtime.Enemies.Model.Properties.html",
    "title": "Namespace Runtime.Enemies.Model.Properties | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies.Model.Properties Classes Danger Health Health property. Contains current and max health. Depends on Rarity property. Taste Structs HealthInfo Interfaces IDangerProperty IHealthProperty Health property. Contains current and max health. Depends on Rarity property. ITasteProperty Enums TasteType"
  },
  "api/Runtime.Enemies.Model.html": {
    "href": "api/Runtime.Enemies.Model.html",
    "title": "Namespace Runtime.Enemies.Model | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies.Model Namespaces Runtime.Enemies.Model.Builders Runtime.Enemies.Model.Properties Classes EnemyEntityModel EnemyEntity<T> Interfaces IEnemyEntity IEnemyEntityModel Model for enemies"
  },
  "api/Runtime.Enemies.SmallEnemies.Bee.html": {
    "href": "api/Runtime.Enemies.SmallEnemies.Bee.html",
    "title": "Class Bee | Capstone documentation",
    "keywords": "Class Bee Namespace Runtime.Enemies.SmallEnemies Assembly MainGame.dll public class Bee : AbstractNormalEnemyViewController<BeeEntity>, IHurtResponder, IEnemyViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<BeeEntity> AbstractBasicEntityViewController<BeeEntity> AbstractDamagableViewController<BeeEntity> AbstractCreatureViewController<BeeEntity> AbstractEnemyViewController<BeeEntity> AbstractNormalEnemyViewController<BeeEntity> Bee Implements IHurtResponder IEnemyViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Inherited Members AbstractNormalEnemyViewController<BeeEntity>.realHealthBarSpawnPoint AbstractNormalEnemyViewController<BeeEntity>.healthBarDetectLayerMask AbstractNormalEnemyViewController<BeeEntity>.Awake() AbstractNormalEnemyViewController<BeeEntity>.OnStart() AbstractNormalEnemyViewController<BeeEntity>.OnSpawnHealthBar() AbstractNormalEnemyViewController<BeeEntity>.OnPointByCrosshair() AbstractNormalEnemyViewController<BeeEntity>.OnUnPointByCrosshair() AbstractNormalEnemyViewController<BeeEntity>.OnDestroyHealthBar(HealthBar) AbstractNormalEnemyViewController<BeeEntity>.OnRecycled() AbstractEnemyViewController<BeeEntity>.Danger AbstractEnemyViewController<BeeEntity>.MaxHealth AbstractEnemyViewController<BeeEntity>.CurrentHealth AbstractEnemyViewController<BeeEntity>.enemyModel AbstractEnemyViewController<BeeEntity>.currentHealthBar AbstractEnemyViewController<BeeEntity>.hitObjects AbstractEnemyViewController<BeeEntity>.OnBindEntityProperty() AbstractEnemyViewController<BeeEntity>.OnBuildNewEntity() AbstractEnemyViewController<BeeEntity>.GetMaxHealth(dynamic) AbstractEnemyViewController<BeeEntity>.GetCurrentHealth(dynamic) AbstractEnemyViewController<BeeEntity>.OnEntityDie(IBelongToFaction) AbstractEnemyViewController<BeeEntity>.OnCurrentHealthChanged(int, int) AbstractEnemyViewController<BeeEntity>.CheckHit(HitData) AbstractEnemyViewController<BeeEntity>.HitResponse(HitData) AbstractDamagableViewController<BeeEntity>.CurrentFaction AbstractDamagableViewController<BeeEntity>.CheckHurt(HitData) AbstractDamagableViewController<BeeEntity>.HurtResponse(HitData) AbstractBasicEntityViewController<BeeEntity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<BeeEntity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<BeeEntity>.ID AbstractEntityViewController<BeeEntity>.autoCreateNewEntityWhenStart AbstractEntityViewController<BeeEntity>.showNameTagWhenPointed AbstractEntityViewController<BeeEntity>.nameTagFollowTransform AbstractEntityViewController<BeeEntity>.nameTagPrefabName AbstractEntityViewController<BeeEntity>.hasInteractiveHint AbstractEntityViewController<BeeEntity>.interactiveHintPrefabName AbstractEntityViewController<BeeEntity>.interactiveHintLocalizedKey AbstractEntityViewController<BeeEntity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<BeeEntity>.entityModel AbstractEntityViewController<BeeEntity>.BoundEntity AbstractEntityViewController<BeeEntity>.properties AbstractEntityViewController<BeeEntity>.OnStartOrAllocate() AbstractEntityViewController<BeeEntity>.InitWithID(string) AbstractEntityViewController<BeeEntity>.OnEntityRecycled(IEntity) AbstractEntityViewController<BeeEntity>.OnBindProperty() AbstractEntityViewController<BeeEntity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<BeeEntity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<BeeEntity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<BeeEntity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<BeeEntity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<BeeEntity>.ForceUpdatePropertyBindings() AbstractEntityViewController<BeeEntity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<BeeEntity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<BeeEntity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<BeeEntity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<BeeEntity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnEntityHeal(int, int, IBelongToFaction) When the entity is healed, this method will be called protected override void OnEntityHeal(int heal, int currenthealth, IBelongToFaction healer) Parameters heal int currenthealth int healer IBelongToFaction OnEntityStart() protected override void OnEntityStart() OnEntityTakeDamage(int, int, IBelongToFaction) When the entity takes damage, this method will be called protected override void OnEntityTakeDamage(int damage, int currenthealth, IBelongToFaction damagedealer) Parameters damage int currenthealth int damagedealer IBelongToFaction The dealer of the damage. You can access its faction from it OnInitEnemyEntity(EnemyBuilder<BeeEntity>) protected override IEnemyEntity OnInitEnemyEntity(EnemyBuilder<BeeEntity> builder) Parameters builder EnemyBuilder<BeeEntity> Returns IEnemyEntity WaitingForDeathCondition() protected override MikroAction WaitingForDeathCondition() Returns MikroAction"
  },
  "api/Runtime.Enemies.SmallEnemies.BeeEntity.html": {
    "href": "api/Runtime.Enemies.SmallEnemies.BeeEntity.html",
    "title": "Class BeeEntity | Capstone documentation",
    "keywords": "Class BeeEntity Namespace Runtime.Enemies.SmallEnemies Assembly MainGame.dll public class BeeEntity : EnemyEntity<BeeEntity>, IEnemyEntity, ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity DamageableEntity AbstractCreature EnemyEntity<BeeEntity> BeeEntity Implements IEnemyEntity ICreature IDamageable IBelongToFaction IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members EnemyEntity<BeeEntity>.dangerProperty EnemyEntity<BeeEntity>.healthProperty EnemyEntity<BeeEntity>.tasteProperty EnemyEntity<BeeEntity>.OnEntityRegisterAdditionalProperties() EnemyEntity<BeeEntity>.OnEntityStart(bool) EnemyEntity<BeeEntity>.GetDefaultFaction() EnemyEntity<BeeEntity>.GetDanger() EnemyEntity<BeeEntity>.GetHealth() EnemyEntity<BeeEntity>.GetTaste() EnemyEntity<BeeEntity>.GetConfigTable() EnemyEntity<BeeEntity>.OnDoRecycle() DamageableEntity.CurrentFaction DamageableEntity.IsInvincible DamageableEntity.HealthProperty DamageableEntity.OnRegisterProperties() DamageableEntity.GetMaxHealth() DamageableEntity.GetCurrentHealth() DamageableEntity.TakeDamage(int, IBelongToFaction) DamageableEntity.OnTakeDamageAdditionalCheck(int, IBelongToFaction) DamageableEntity.CheckCanTakeDamage(IBelongToFaction) DamageableEntity.RegisterOnTakeDamage(OnTakeDamage) DamageableEntity.UnRegisterOnTakeDamage(OnTakeDamage) DamageableEntity.Heal(int, IBelongToFaction) DamageableEntity.RegisterOnHeal(OnHeal) DamageableEntity.UnRegisterOnHeal(OnHeal) AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EntityName public override string EntityName { get; set; } Property Value string Methods OnEnemyRegisterAdditionalProperties() protected override void OnEnemyRegisterAdditionalProperties() OnGetDescription(string) Return the description of the entity protected override string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnRecycle() public override void OnRecycle() OnRegisterCustomProperties() protected override ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[]"
  },
  "api/Runtime.Enemies.SmallEnemies.html": {
    "href": "api/Runtime.Enemies.SmallEnemies.html",
    "title": "Namespace Runtime.Enemies.SmallEnemies | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies.SmallEnemies Classes Bee BeeEntity"
  },
  "api/Runtime.Enemies.Temp_BulletHitResponder.html": {
    "href": "api/Runtime.Enemies.Temp_BulletHitResponder.html",
    "title": "Class Temp_BulletHitResponder | Capstone documentation",
    "keywords": "Class Temp_BulletHitResponder Namespace Runtime.Enemies Assembly MainGame.dll public class Temp_BulletHitResponder : MonoBehaviour, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour Temp_BulletHitResponder Implements IHitResponder IBelongToFaction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields boss1 public GameObject boss1 Field Value GameObject hitObjects public List<GameObject> hitObjects Field Value List<GameObject> m_damage public int m_damage Field Value int Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData"
  },
  "api/Runtime.Enemies.ViewControllers.Base.AbstractBossViewController-1.html": {
    "href": "api/Runtime.Enemies.ViewControllers.Base.AbstractBossViewController-1.html",
    "title": "Class AbstractBossViewController<T> | Capstone documentation",
    "keywords": "Class AbstractBossViewController<T> Namespace Runtime.Enemies.ViewControllers.Base Assembly MainGame.dll public abstract class AbstractBossViewController<T> : AbstractEnemyViewController<T>, IHurtResponder, IEnemyViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction where T : class, IEnemyEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractDamagableViewController<T> AbstractCreatureViewController<T> AbstractEnemyViewController<T> AbstractBossViewController<T> Implements IHurtResponder IEnemyViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Derived Boss1 Inherited Members AbstractEnemyViewController<T>.Danger AbstractEnemyViewController<T>.MaxHealth AbstractEnemyViewController<T>.CurrentHealth AbstractEnemyViewController<T>.enemyModel AbstractEnemyViewController<T>.currentHealthBar AbstractEnemyViewController<T>.hitObjects AbstractEnemyViewController<T>.Awake() AbstractEnemyViewController<T>.OnStart() AbstractEnemyViewController<T>.OnBindEntityProperty() AbstractEnemyViewController<T>.OnBuildNewEntity() AbstractEnemyViewController<T>.OnInitEnemyEntity(EnemyBuilder<T>) AbstractEnemyViewController<T>.GetMaxHealth(dynamic) AbstractEnemyViewController<T>.GetCurrentHealth(dynamic) AbstractEnemyViewController<T>.OnEntityDie(IBelongToFaction) AbstractEnemyViewController<T>.WaitingForDeathCondition() AbstractEnemyViewController<T>.OnCurrentHealthChanged(int, int) AbstractEnemyViewController<T>.OnRecycled() AbstractEnemyViewController<T>.CheckHit(HitData) AbstractEnemyViewController<T>.HitResponse(HitData) AbstractDamagableViewController<T>.OnEntityTakeDamage(int, int, IBelongToFaction) AbstractDamagableViewController<T>.OnEntityHeal(int, int, IBelongToFaction) AbstractDamagableViewController<T>.CurrentFaction AbstractDamagableViewController<T>.CheckHurt(HitData) AbstractDamagableViewController<T>.HurtResponse(HitData) AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnDestroyHealthBar(HealthBar) protected override void OnDestroyHealthBar(HealthBar healthBar) Parameters healthBar HealthBar OnSpawnHealthBar() protected override HealthBar OnSpawnHealthBar() Returns HealthBar"
  },
  "api/Runtime.Enemies.ViewControllers.Base.AbstractEnemyViewController-1.html": {
    "href": "api/Runtime.Enemies.ViewControllers.Base.AbstractEnemyViewController-1.html",
    "title": "Class AbstractEnemyViewController<T> | Capstone documentation",
    "keywords": "Class AbstractEnemyViewController<T> Namespace Runtime.Enemies.ViewControllers.Base Assembly MainGame.dll public abstract class AbstractEnemyViewController<T> : AbstractCreatureViewController<T>, IHurtResponder, IEnemyViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction where T : class, IEnemyEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractDamagableViewController<T> AbstractCreatureViewController<T> AbstractEnemyViewController<T> Implements IHurtResponder IEnemyViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Derived AbstractBossViewController<T> AbstractNormalEnemyViewController<T> Inherited Members AbstractDamagableViewController<T>.OnEntityTakeDamage(int, int, IBelongToFaction) AbstractDamagableViewController<T>.OnEntityHeal(int, int, IBelongToFaction) AbstractDamagableViewController<T>.CurrentFaction AbstractDamagableViewController<T>.CheckHurt(HitData) AbstractDamagableViewController<T>.HurtResponse(HitData) AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields currentHealthBar protected HealthBar currentHealthBar Field Value HealthBar enemyModel protected IEnemyEntityModel enemyModel Field Value IEnemyEntityModel hitObjects protected List<GameObject> hitObjects Field Value List<GameObject> Properties CurrentHealth public int CurrentHealth { get; } Property Value int Danger public int Danger { get; } Property Value int MaxHealth public int MaxHealth { get; } Property Value int Methods Awake() protected override void Awake() CheckHit(HitData) public virtual bool CheckHit(HitData data) Parameters data HitData Returns bool GetCurrentHealth(dynamic) protected dynamic GetCurrentHealth(dynamic info) Parameters info dynamic Returns dynamic GetMaxHealth(dynamic) protected dynamic GetMaxHealth(dynamic info) Parameters info dynamic Returns dynamic HitResponse(HitData) public virtual void HitResponse(HitData data) Parameters data HitData OnBindEntityProperty() protected override void OnBindEntityProperty() OnBuildNewEntity() protected override IEntity OnBuildNewEntity() Returns IEntity OnCurrentHealthChanged(int, int) protected void OnCurrentHealthChanged(int oldValue, int newValue) Parameters oldValue int newValue int OnDestroyHealthBar(HealthBar) protected abstract void OnDestroyHealthBar(HealthBar healthBar) Parameters healthBar HealthBar OnEntityDie(IBelongToFaction) When the entity dies, this method will be called protected override void OnEntityDie(IBelongToFaction damagedealer) Parameters damagedealer IBelongToFaction OnInitEnemyEntity(EnemyBuilder<T>) protected abstract IEnemyEntity OnInitEnemyEntity(EnemyBuilder<T> builder) Parameters builder EnemyBuilder<T> Returns IEnemyEntity OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnSpawnHealthBar() protected abstract HealthBar OnSpawnHealthBar() Returns HealthBar OnStart() protected override void OnStart() WaitingForDeathCondition() protected abstract MikroAction WaitingForDeathCondition() Returns MikroAction"
  },
  "api/Runtime.Enemies.ViewControllers.Base.AbstractNormalEnemyViewController-1.html": {
    "href": "api/Runtime.Enemies.ViewControllers.Base.AbstractNormalEnemyViewController-1.html",
    "title": "Class AbstractNormalEnemyViewController<T> | Capstone documentation",
    "keywords": "Class AbstractNormalEnemyViewController<T> Namespace Runtime.Enemies.ViewControllers.Base Assembly MainGame.dll public abstract class AbstractNormalEnemyViewController<T> : AbstractEnemyViewController<T>, IHurtResponder, IEnemyViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction where T : class, IEnemyEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractDamagableViewController<T> AbstractCreatureViewController<T> AbstractEnemyViewController<T> AbstractNormalEnemyViewController<T> Implements IHurtResponder IEnemyViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Derived Bee Inherited Members AbstractEnemyViewController<T>.Danger AbstractEnemyViewController<T>.MaxHealth AbstractEnemyViewController<T>.CurrentHealth AbstractEnemyViewController<T>.enemyModel AbstractEnemyViewController<T>.currentHealthBar AbstractEnemyViewController<T>.hitObjects AbstractEnemyViewController<T>.OnBindEntityProperty() AbstractEnemyViewController<T>.OnBuildNewEntity() AbstractEnemyViewController<T>.OnInitEnemyEntity(EnemyBuilder<T>) AbstractEnemyViewController<T>.GetMaxHealth(dynamic) AbstractEnemyViewController<T>.GetCurrentHealth(dynamic) AbstractEnemyViewController<T>.OnEntityDie(IBelongToFaction) AbstractEnemyViewController<T>.WaitingForDeathCondition() AbstractEnemyViewController<T>.OnCurrentHealthChanged(int, int) AbstractEnemyViewController<T>.CheckHit(HitData) AbstractEnemyViewController<T>.HitResponse(HitData) AbstractDamagableViewController<T>.OnEntityTakeDamage(int, int, IBelongToFaction) AbstractDamagableViewController<T>.OnEntityHeal(int, int, IBelongToFaction) AbstractDamagableViewController<T>.CurrentFaction AbstractDamagableViewController<T>.CheckHurt(HitData) AbstractDamagableViewController<T>.HurtResponse(HitData) AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields healthBarDetectLayerMask protected LayerMask healthBarDetectLayerMask Field Value LayerMask realHealthBarSpawnPoint protected KeepGlobalRotation realHealthBarSpawnPoint Field Value KeepGlobalRotation Methods Awake() protected override void Awake() OnDestroyHealthBar(HealthBar) protected override void OnDestroyHealthBar(HealthBar healthBar) Parameters healthBar HealthBar OnPointByCrosshair() public override void OnPointByCrosshair() OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnSpawnHealthBar() protected override HealthBar OnSpawnHealthBar() Returns HealthBar OnStart() protected override void OnStart() OnUnPointByCrosshair() public override void OnUnPointByCrosshair()"
  },
  "api/Runtime.Enemies.ViewControllers.Base.html": {
    "href": "api/Runtime.Enemies.ViewControllers.Base.html",
    "title": "Namespace Runtime.Enemies.ViewControllers.Base | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies.ViewControllers.Base Classes AbstractBossViewController<T> AbstractEnemyViewController<T> AbstractNormalEnemyViewController<T>"
  },
  "api/Runtime.Enemies.html": {
    "href": "api/Runtime.Enemies.html",
    "title": "Namespace Runtime.Enemies | Capstone documentation",
    "keywords": "Namespace Runtime.Enemies Namespaces Runtime.Enemies.Model Runtime.Enemies.SmallEnemies Runtime.Enemies.ViewControllers.Base Classes Boss1 Boss1Entity Temp_BulletHitResponder"
  },
  "api/Runtime.GameResources.Model.Base.GameResourceModel-1.html": {
    "href": "api/Runtime.GameResources.Model.Base.GameResourceModel-1.html",
    "title": "Class GameResourceModel<T> | Capstone documentation",
    "keywords": "Class GameResourceModel<T> Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public abstract class GameResourceModel<T> : EntityModel<T>, IGameResourceModel<T>, IEntityModel<T>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel where T : IResourceEntity Type Parameters T Inheritance object AbstractModel AbstractSavableModel EntityModel<T> GameResourceModel<T> Implements IGameResourceModel<T> IEntityModel<T> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Derived RawMaterialModel WeaponModel Inherited Members EntityModel<T>.entityBuilderFactory EntityModel<T>.entities EntityModel<T>.GetEntity(string) EntityModel<T>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAnyResource(string) Get any resource, as long as it inherits from IResourceEntity public IResourceEntity GetAnyResource(string id) Parameters id string Returns IResourceEntity OnEntityBuilt(T) protected override void OnEntityBuilt(T entity) Parameters entity T OnInit() protected override void OnInit() RemoveEntity(string) public override bool RemoveEntity(string id) Parameters id string Returns bool"
  },
  "api/Runtime.GameResources.Model.Base.GlobalGameResourceEntities.html": {
    "href": "api/Runtime.GameResources.Model.Base.GlobalGameResourceEntities.html",
    "title": "Class GlobalGameResourceEntities | Capstone documentation",
    "keywords": "Class GlobalGameResourceEntities Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public static class GlobalGameResourceEntities Inheritance object GlobalGameResourceEntities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields globalResourceOfSameType public static Dictionary<string, IResourceEntity> globalResourceOfSameType Field Value Dictionary<string, IResourceEntity> Methods GetAnyResource(string) public static IResourceEntity GetAnyResource(string id) Parameters id string Returns IResourceEntity Reset() public static void Reset()"
  },
  "api/Runtime.GameResources.Model.Base.IGameResourceModel-1.html": {
    "href": "api/Runtime.GameResources.Model.Base.IGameResourceModel-1.html",
    "title": "Interface IGameResourceModel<T> | Capstone documentation",
    "keywords": "Interface IGameResourceModel<T> Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public interface IGameResourceModel<T> : IEntityModel<T>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel where T : IResourceEntity Type Parameters T Inherited Members IEntityModel<T>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetAnyResource(string) Get any resource, as long as it inherits from IResourceEntity IResourceEntity GetAnyResource(string id) Parameters id string Returns IResourceEntity"
  },
  "api/Runtime.GameResources.Model.Base.IResourceEntity.html": {
    "href": "api/Runtime.GameResources.Model.Base.IResourceEntity.html",
    "title": "Interface IResourceEntity | Capstone documentation",
    "keywords": "Interface IResourceEntity Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public interface IResourceEntity : IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Properties InHandVCPrefabName string InHandVCPrefabName { get; } Property Value string InventoryVCPrefabName string InventoryVCPrefabName { get; } Property Value string OnGroundVCPrefabName string OnGroundVCPrefabName { get; } Property Value string Methods GetMaxStackProperty() IMaxStack GetMaxStackProperty() Returns IMaxStack GetResourceCategory() ResourceCategory GetResourceCategory() Returns ResourceCategory OnPicked() void OnPicked()"
  },
  "api/Runtime.GameResources.Model.Base.ResourceCategory.html": {
    "href": "api/Runtime.GameResources.Model.Base.ResourceCategory.html",
    "title": "Enum ResourceCategory | Capstone documentation",
    "keywords": "Enum ResourceCategory Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public enum ResourceCategory Fields Bait = 1 RawMaterial = 0 Trap = 2 Weapon = 3"
  },
  "api/Runtime.GameResources.Model.Base.ResourceEntity-1.html": {
    "href": "api/Runtime.GameResources.Model.Base.ResourceEntity-1.html",
    "title": "Class ResourceEntity<T> | Capstone documentation",
    "keywords": "Class ResourceEntity<T> Namespace Runtime.GameResources.Model.Base Assembly MainGame.dll public abstract class ResourceEntity<T> : AbstractBasicEntity, IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : ResourceEntity<T>, new() Type Parameters T Inheritance object Entity AbstractBasicEntity ResourceEntity<T> Implements IResourceEntity IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived RawMaterialEntity<T> WeaponEntity<T> Inherited Members AbstractBasicEntity.OnRegisterProperties() AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.GetConfigTable() Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields pickedBefore protected bool pickedBefore Field Value bool Properties InHandVCPrefabName public virtual string InHandVCPrefabName { get; } Property Value string InventoryVCPrefabName public string InventoryVCPrefabName { get; } Property Value string OnGroundVCPrefabName public abstract string OnGroundVCPrefabName { get; } Property Value string Methods GetDisplayName() Get the display name of the object. public override string GetDisplayName() Returns string GetMaxStackProperty() The display name of the resource entity is the bait adjectives + the name of the resource entity e.g. \"Fresh\" + \"Dark\" + \"Mushroom\" = \"Fresh, Dark Mushroom\" public IMaxStack GetMaxStackProperty() Returns IMaxStack GetResourceCategory() public abstract ResourceCategory GetResourceCategory() Returns ResourceCategory OnDoRecycle() public override void OnDoRecycle() OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected override void OnEntityRegisterAdditionalProperties() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnGetDisplayNameBeforeFirstPicked(string) protected abstract string OnGetDisplayNameBeforeFirstPicked(string originalDisplayName) Parameters originalDisplayName string Returns string OnPicked() public void OnPicked()"
  },
  "api/Runtime.GameResources.Model.Base.html": {
    "href": "api/Runtime.GameResources.Model.Base.html",
    "title": "Namespace Runtime.GameResources.Model.Base | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.Model.Base Classes GameResourceModel<T> GlobalGameResourceEntities ResourceEntity<T> Interfaces IGameResourceModel<T> IResourceEntity Enums ResourceCategory"
  },
  "api/Runtime.GameResources.Model.Builder.ResourceBuilder-2.html": {
    "href": "api/Runtime.GameResources.Model.Builder.ResourceBuilder-2.html",
    "title": "Class ResourceBuilder<TBuilder, TEntity> | Capstone documentation",
    "keywords": "Class ResourceBuilder<TBuilder, TEntity> Namespace Runtime.GameResources.Model.Builder Assembly MainGame.dll public abstract class ResourceBuilder<TBuilder, TEntity> : EntityBuilder<TBuilder, TEntity>, IPoolable where TBuilder : ResourceBuilder<TBuilder, TEntity> where TEntity : class, IEntity, new() Type Parameters TBuilder TEntity Inheritance object EntityBuilder<TBuilder, TEntity> ResourceBuilder<TBuilder, TEntity> Implements IPoolable Derived RawMaterialBuilder<T> Inherited Members EntityBuilder<TBuilder, TEntity>.Entity EntityBuilder<TBuilder, TEntity>.onEntityCreated EntityBuilder<TBuilder, TEntity>.RegisterOnEntityCreated(Action<TEntity>) EntityBuilder<TBuilder, TEntity>.CheckEntity() EntityBuilder<TBuilder, TEntity>.OverrideName(string) EntityBuilder<TBuilder, TEntity>.FromConfig(ConfigTable) EntityBuilder<TBuilder, TEntity>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<TBuilder, TEntity>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<TBuilder, TEntity>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<TBuilder, TEntity>.AddTag(TagName, int) EntityBuilder<TBuilder, TEntity>.Build() EntityBuilder<TBuilder, TEntity>.OnRecycled() EntityBuilder<TBuilder, TEntity>.IsRecycled EntityBuilder<TBuilder, TEntity>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddBaitAdjective(BaitAdjective) public TBuilder AddBaitAdjective(BaitAdjective adjective) Parameters adjective BaitAdjective Returns TBuilder SetMaxStack(int, IPropertyDependencyModifier<int>) public TBuilder SetMaxStack(int maxStack, IPropertyDependencyModifier<int> modifier = null) Parameters maxStack int modifier IPropertyDependencyModifier<int> Returns TBuilder"
  },
  "api/Runtime.GameResources.Model.Builder.html": {
    "href": "api/Runtime.GameResources.Model.Builder.html",
    "title": "Namespace Runtime.GameResources.Model.Builder | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.Model.Builder Classes ResourceBuilder<TBuilder, TEntity>"
  },
  "api/Runtime.GameResources.Model.Properties.BaitAdjectives.BaitAdjective.html": {
    "href": "api/Runtime.GameResources.Model.Properties.BaitAdjectives.BaitAdjective.html",
    "title": "Enum BaitAdjective | Capstone documentation",
    "keywords": "Enum BaitAdjective Namespace Runtime.GameResources.Model.Properties.BaitAdjectives Assembly MainGame.dll public enum BaitAdjective Fields Test_Adjective_1 = 0 Test_Adjective_2 = 1 Test_Adjective_3 = 2"
  },
  "api/Runtime.GameResources.Model.Properties.BaitAdjectives.BaitAdjectives.html": {
    "href": "api/Runtime.GameResources.Model.Properties.BaitAdjectives.BaitAdjectives.html",
    "title": "Class BaitAdjectives | Capstone documentation",
    "keywords": "Class BaitAdjectives Namespace Runtime.GameResources.Model.Properties.BaitAdjectives Assembly MainGame.dll public class BaitAdjectives : LoadFromConfigHashsetProperty<BaitAdjective>, IBaitAdjectives, IHashSetProperty<BaitAdjective>, IProperty<HashSet<BaitAdjective>>, IHaveDescription, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<HashSet<BaitAdjective>> HashSetProperty<BaitAdjective> LoadFromConfigHashsetProperty<BaitAdjective> BaitAdjectives Implements IBaitAdjectives IHashSetProperty<BaitAdjective> IProperty<HashSet<BaitAdjective>> IHaveDescription ILoadFromConfigProperty IPropertyBase Inherited Members LoadFromConfigHashsetProperty<BaitAdjective>.LoadFromConfig(dynamic) HashSetProperty<BaitAdjective>.RealValue HashSetProperty<BaitAdjective>.RealValues HashSetProperty<BaitAdjective>.SetBaseValue(HashSet<BaitAdjective>) HashSetProperty<BaitAdjective>.OnClone(HashSet<BaitAdjective>) Property<HashSet<BaitAdjective>>.PropertyName Property<HashSet<BaitAdjective>>.fullName Property<HashSet<BaitAdjective>>.BaseValue Property<HashSet<BaitAdjective>>.InitialValue Property<HashSet<BaitAdjective>>.overrideDependentProperties Property<HashSet<BaitAdjective>>.OnSetFullName(string) Property<HashSet<BaitAdjective>>.GetFullName() Property<HashSet<BaitAdjective>>.modifier Property<HashSet<BaitAdjective>>.OnRecycled() Property<HashSet<BaitAdjective>>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<HashSet<BaitAdjective>>.GetDependentProperties() Property<HashSet<BaitAdjective>>.SetDependentProperties(params PropertyNameInfo[]) Property<HashSet<BaitAdjective>>.Initialize(IPropertyBase[], string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<HashSet<BaitAdjective>> GetDefautModifier() Returns IPropertyDependencyModifier<HashSet<BaitAdjective>> GetDescription() Get the description of the object. public string GetDescription() Returns string GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.GameResources.Model.Properties.BaitAdjectives.IBaitAdjectives.html": {
    "href": "api/Runtime.GameResources.Model.Properties.BaitAdjectives.IBaitAdjectives.html",
    "title": "Interface IBaitAdjectives | Capstone documentation",
    "keywords": "Interface IBaitAdjectives Namespace Runtime.GameResources.Model.Properties.BaitAdjectives Assembly MainGame.dll public interface IBaitAdjectives : IHashSetProperty<BaitAdjective>, IProperty<HashSet<BaitAdjective>>, IHaveDescription, ILoadFromConfigProperty, IPropertyBase Inherited Members IHashSetProperty<BaitAdjective>.RealValues IProperty<HashSet<BaitAdjective>>.BaseValue IProperty<HashSet<BaitAdjective>>.InitialValue IProperty<HashSet<BaitAdjective>>.RealValue IProperty<HashSet<BaitAdjective>>.SetBaseValue(HashSet<BaitAdjective>) IHaveDescription.GetDescription() ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.GameResources.Model.Properties.BaitAdjectives.html": {
    "href": "api/Runtime.GameResources.Model.Properties.BaitAdjectives.html",
    "title": "Namespace Runtime.GameResources.Model.Properties.BaitAdjectives | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.Model.Properties.BaitAdjectives Classes BaitAdjectives Interfaces IBaitAdjectives Enums BaitAdjective"
  },
  "api/Runtime.GameResources.Model.Properties.IMaxStack.html": {
    "href": "api/Runtime.GameResources.Model.Properties.IMaxStack.html",
    "title": "Interface IMaxStack | Capstone documentation",
    "keywords": "Interface IMaxStack Namespace Runtime.GameResources.Model.Properties Assembly MainGame.dll public interface IMaxStack : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.GameResources.Model.Properties.MaxStack.html": {
    "href": "api/Runtime.GameResources.Model.Properties.MaxStack.html",
    "title": "Class MaxStack | Capstone documentation",
    "keywords": "Class MaxStack Namespace Runtime.GameResources.Model.Properties Assembly MainGame.dll public class MaxStack : AbstractLoadFromConfigProperty<int>, IMaxStack, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> MaxStack Implements IMaxStack IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.GameResources.Model.Properties.html": {
    "href": "api/Runtime.GameResources.Model.Properties.html",
    "title": "Namespace Runtime.GameResources.Model.Properties | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.Model.Properties Namespaces Runtime.GameResources.Model.Properties.BaitAdjectives Classes MaxStack Interfaces IMaxStack"
  },
  "api/Runtime.GameResources.Model.html": {
    "href": "api/Runtime.GameResources.Model.html",
    "title": "Namespace Runtime.GameResources.Model | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.Model Namespaces Runtime.GameResources.Model.Base Runtime.GameResources.Model.Builder Runtime.GameResources.Model.Properties"
  },
  "api/Runtime.GameResources.ResourceVCFactory.html": {
    "href": "api/Runtime.GameResources.ResourceVCFactory.html",
    "title": "Class ResourceVCFactory | Capstone documentation",
    "keywords": "Class ResourceVCFactory Namespace Runtime.GameResources Assembly MainGame.dll public class ResourceVCFactory : MikroSingleton<ResourceVCFactory>, ISingleton, ICanGetUtility, IBelongToArchitecture Inheritance object MikroSingleton<ResourceVCFactory> ResourceVCFactory Implements ISingleton ICanGetUtility IBelongToArchitecture Inherited Members MikroSingleton<ResourceVCFactory>.instance MikroSingleton<ResourceVCFactory>.Singleton object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture OnSingletonInit() public override void OnSingletonInit() SpawnInHandResourceVC(IResourceEntity, bool, int, int) Spawn a resource view controller (in hand) from a resource entity public GameObject SpawnInHandResourceVC(IResourceEntity resourceEntity, bool usePool, int poolInitCount = 5, int poolMaxCount = 20) Parameters resourceEntity IResourceEntity usePool bool poolInitCount int poolMaxCount int Returns GameObject SpawnPickableResourceVC(IResourceEntity, bool, int, int) Spawn a pickable resource view controller (on ground) from a resource entity public GameObject SpawnPickableResourceVC(IResourceEntity resourceEntity, bool usePool, int poolInitCount = 5, int poolMaxCount = 20) Parameters resourceEntity IResourceEntity usePool bool poolInitCount int poolMaxCount int Returns GameObject"
  },
  "api/Runtime.GameResources.ViewControllers.AbstractPickableInHandResourceViewController-1.html": {
    "href": "api/Runtime.GameResources.ViewControllers.AbstractPickableInHandResourceViewController-1.html",
    "title": "Class AbstractPickableInHandResourceViewController<T> | Capstone documentation",
    "keywords": "Class AbstractPickableInHandResourceViewController<T> Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll For both in hand and on ground public abstract class AbstractPickableInHandResourceViewController<T> : AbstractPickableResourceViewController<T>, IPickableResourceViewController, IInHandResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IResourceEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractResourceViewController<T> AbstractPickableResourceViewController<T> AbstractPickableInHandResourceViewController<T> Implements IPickableResourceViewController IInHandResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractWeaponViewController<T> Inherited Members AbstractPickableResourceViewController<T>.inventoryModel AbstractPickableResourceViewController<T>.isAbsorbing AbstractPickableResourceViewController<T>.selfColliders AbstractPickableResourceViewController<T>.entityAutoRemovalTimeWhenNoAbsorb AbstractPickableResourceViewController<T>.OnEntityStart() AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.HoldAbsorb AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields isHolding protected bool isHolding Field Value bool originalAutoRemovalTimeWhenNoAbsorb protected float originalAutoRemovalTimeWhenNoAbsorb Field Value float ownerGameObject protected GameObject ownerGameObject Field Value GameObject rigidbody protected Rigidbody rigidbody Field Value Rigidbody Methods Awake() protected override void Awake() HandleAbsorb(GameObject, PlayerInteractiveZone) protected override void HandleAbsorb(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnEntityRecycled(IEntity) protected override void OnEntityRecycled(IEntity ent) Parameters ent IEntity OnItemScopePressed() public abstract void OnItemScopePressed() OnItemStartUse() public abstract void OnItemStartUse() OnItemStopUse() public abstract void OnItemStopUse() OnItemUse() public abstract void OnItemUse() OnPointByCrosshair() public override void OnPointByCrosshair() OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartAbsorb() protected override void OnStartAbsorb() OnStartHold(GameObject) public virtual void OnStartHold(GameObject ownerGameObject) Parameters ownerGameObject GameObject OnStopHold() public virtual void OnStopHold()"
  },
  "api/Runtime.GameResources.ViewControllers.AbstractPickableResourceViewController-1.html": {
    "href": "api/Runtime.GameResources.ViewControllers.AbstractPickableResourceViewController-1.html",
    "title": "Class AbstractPickableResourceViewController<T> | Capstone documentation",
    "keywords": "Class AbstractPickableResourceViewController<T> Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll For all resources on the ground public abstract class AbstractPickableResourceViewController<T> : AbstractResourceViewController<T>, IPickableResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IResourceEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractResourceViewController<T> AbstractPickableResourceViewController<T> Implements IPickableResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractPickableInHandResourceViewController<T> AbstractPickableRawMaterialViewController<T> Inherited Members AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields entityAutoRemovalTimeWhenNoAbsorb [Header(\"Entity Recycle Logic\")] [Tooltip(\"The time when the entity will be recycled when it is not absorbed by the player\")] [SerializeField] protected float entityAutoRemovalTimeWhenNoAbsorb Field Value float inventoryModel protected IInventoryModel inventoryModel Field Value IInventoryModel isAbsorbing protected bool isAbsorbing Field Value bool selfColliders protected Dictionary<Collider, bool> selfColliders Field Value Dictionary<Collider, bool> Properties HoldAbsorb Hold absorb when the item is just thrown public bool HoldAbsorb { get; set; } Property Value bool Methods Awake() protected override void Awake() HandleAbsorb(GameObject, PlayerInteractiveZone) protected virtual void HandleAbsorb(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnEntityStart() protected override void OnEntityStart() OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) Exit the interactive zone, no matter if reachable or not public override void OnPlayerExitInteractiveZone(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) public override void OnPlayerInteractiveZoneNotReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) public override void OnPlayerInteractiveZoneReachable(GameObject player, PlayerInteractiveZone zone) Parameters player GameObject zone PlayerInteractiveZone OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartAbsorb() protected abstract void OnStartAbsorb()"
  },
  "api/Runtime.GameResources.ViewControllers.AbstractResourceViewController-1.html": {
    "href": "api/Runtime.GameResources.ViewControllers.AbstractResourceViewController-1.html",
    "title": "Class AbstractResourceViewController<T> | Capstone documentation",
    "keywords": "Class AbstractResourceViewController<T> Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public abstract class AbstractResourceViewController<T> : AbstractBasicEntityViewController<T>, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IResourceEntity Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractResourceViewController<T> Implements IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractPickableResourceViewController<T> CommonInventoryResourceViewController Inherited Members AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.Awake() AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnRecycled() AbstractEntityViewController<T>.OnBuildNewEntity() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnEntityStart() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.GameResources.ViewControllers.CommonInventoryResourceViewController.html": {
    "href": "api/Runtime.GameResources.ViewControllers.CommonInventoryResourceViewController.html",
    "title": "Class CommonInventoryResourceViewController | Capstone documentation",
    "keywords": "Class CommonInventoryResourceViewController Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public class CommonInventoryResourceViewController : AbstractResourceViewController<IResourceEntity>, IInventoryResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<IResourceEntity> AbstractBasicEntityViewController<IResourceEntity> AbstractResourceViewController<IResourceEntity> CommonInventoryResourceViewController Implements IInventoryResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members AbstractBasicEntityViewController<IResourceEntity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<IResourceEntity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<IResourceEntity>.ID AbstractEntityViewController<IResourceEntity>.autoCreateNewEntityWhenStart AbstractEntityViewController<IResourceEntity>.showNameTagWhenPointed AbstractEntityViewController<IResourceEntity>.nameTagFollowTransform AbstractEntityViewController<IResourceEntity>.nameTagPrefabName AbstractEntityViewController<IResourceEntity>.hasInteractiveHint AbstractEntityViewController<IResourceEntity>.interactiveHintPrefabName AbstractEntityViewController<IResourceEntity>.interactiveHintLocalizedKey AbstractEntityViewController<IResourceEntity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<IResourceEntity>.entityModel AbstractEntityViewController<IResourceEntity>.BoundEntity AbstractEntityViewController<IResourceEntity>.properties AbstractEntityViewController<IResourceEntity>.OnStartOrAllocate() AbstractEntityViewController<IResourceEntity>.InitWithID(string) AbstractEntityViewController<IResourceEntity>.OnPointByCrosshair() AbstractEntityViewController<IResourceEntity>.OnUnPointByCrosshair() AbstractEntityViewController<IResourceEntity>.OnEntityRecycled(IEntity) AbstractEntityViewController<IResourceEntity>.OnStart() AbstractEntityViewController<IResourceEntity>.OnRecycled() AbstractEntityViewController<IResourceEntity>.OnBindProperty() AbstractEntityViewController<IResourceEntity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<IResourceEntity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<IResourceEntity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<IResourceEntity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<IResourceEntity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<IResourceEntity>.ForceUpdatePropertyBindings() AbstractEntityViewController<IResourceEntity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<IResourceEntity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<IResourceEntity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<IResourceEntity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<IResourceEntity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Awake() protected override void Awake() OnBindEntityProperty() protected override void OnBindEntityProperty() OnBuildNewEntity() protected override IEntity OnBuildNewEntity() Returns IEntity OnEntityStart() protected override void OnEntityStart()"
  },
  "api/Runtime.GameResources.ViewControllers.IInHandResourceViewController.html": {
    "href": "api/Runtime.GameResources.ViewControllers.IInHandResourceViewController.html",
    "title": "Interface IInHandResourceViewController | Capstone documentation",
    "keywords": "Interface IInHandResourceViewController Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public interface IInHandResourceViewController : IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture() Methods OnItemScopePressed() void OnItemScopePressed() OnItemStartUse() void OnItemStartUse() OnItemStopUse() void OnItemStopUse() OnItemUse() void OnItemUse() OnStartHold(GameObject) void OnStartHold(GameObject ownerGameObject) Parameters ownerGameObject GameObject OnStopHold() void OnStopHold()"
  },
  "api/Runtime.GameResources.ViewControllers.IInventoryResourceViewController.html": {
    "href": "api/Runtime.GameResources.ViewControllers.IInventoryResourceViewController.html",
    "title": "Interface IInventoryResourceViewController | Capstone documentation",
    "keywords": "Interface IInventoryResourceViewController Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public interface IInventoryResourceViewController : IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture()"
  },
  "api/Runtime.GameResources.ViewControllers.IPickableResourceViewController.html": {
    "href": "api/Runtime.GameResources.ViewControllers.IPickableResourceViewController.html",
    "title": "Interface IPickableResourceViewController | Capstone documentation",
    "keywords": "Interface IPickableResourceViewController Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public interface IPickableResourceViewController : IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture() Properties HoldAbsorb bool HoldAbsorb { get; set; } Property Value bool"
  },
  "api/Runtime.GameResources.ViewControllers.IResourceViewController.html": {
    "href": "api/Runtime.GameResources.ViewControllers.IResourceViewController.html",
    "title": "Interface IResourceViewController | Capstone documentation",
    "keywords": "Interface IResourceViewController Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public interface IResourceViewController : IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inherited Members IEntityViewController.ID IEntityViewController.Entity IEntityViewController.InitWithID(string) IEntityViewController.OnPointByCrosshair() IEntityViewController.OnUnPointByCrosshair() IEntityViewController.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) IEntityViewController.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) IBelongToArchitecture.GetArchitecture()"
  },
  "api/Runtime.GameResources.ViewControllers.InteractiveHint.html": {
    "href": "api/Runtime.GameResources.ViewControllers.InteractiveHint.html",
    "title": "Class InteractiveHint | Capstone documentation",
    "keywords": "Class InteractiveHint Namespace Runtime.GameResources.ViewControllers Assembly MainGame.dll public class InteractiveHint : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InteractiveHint Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods SetHint(InputAction, string) public void SetHint(InputAction action, string hintText) Parameters action InputAction hintText string"
  },
  "api/Runtime.GameResources.ViewControllers.html": {
    "href": "api/Runtime.GameResources.ViewControllers.html",
    "title": "Namespace Runtime.GameResources.ViewControllers | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources.ViewControllers Classes AbstractPickableInHandResourceViewController<T> For both in hand and on ground AbstractPickableResourceViewController<T> For all resources on the ground AbstractResourceViewController<T> CommonInventoryResourceViewController InteractiveHint Interfaces IInHandResourceViewController IInventoryResourceViewController IPickableResourceViewController IResourceViewController"
  },
  "api/Runtime.GameResources.html": {
    "href": "api/Runtime.GameResources.html",
    "title": "Namespace Runtime.GameResources | Capstone documentation",
    "keywords": "Namespace Runtime.GameResources Namespaces Runtime.GameResources.Model Runtime.GameResources.ViewControllers Classes ResourceVCFactory"
  },
  "api/Runtime.Inventory.Commands.DirectSelectHotBarSlotCommand.html": {
    "href": "api/Runtime.Inventory.Commands.DirectSelectHotBarSlotCommand.html",
    "title": "Class DirectSelectHotBarSlotCommand | Capstone documentation",
    "keywords": "Class DirectSelectHotBarSlotCommand Namespace Runtime.Inventory.Commands Assembly MainGame.dll public class DirectSelectHotBarSlotCommand : AbstractCommand<DirectSelectHotBarSlotCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<DirectSelectHotBarSlotCommand> DirectSelectHotBarSlotCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<DirectSelectHotBarSlotCommand>.AutoRecycle AbstractCommand<DirectSelectHotBarSlotCommand>.OnRecycled() AbstractCommand<DirectSelectHotBarSlotCommand>.IsRecycled AbstractCommand<DirectSelectHotBarSlotCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DirectSelectHotBarSlotCommand() public DirectSelectHotBarSlotCommand() Methods Allocate(HotBarCategory, int) public static DirectSelectHotBarSlotCommand Allocate(HotBarCategory category, int index) Parameters category HotBarCategory index int Returns DirectSelectHotBarSlotCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Runtime.Inventory.Commands.NavigateSelectHotBarSlotCommand.html": {
    "href": "api/Runtime.Inventory.Commands.NavigateSelectHotBarSlotCommand.html",
    "title": "Class NavigateSelectHotBarSlotCommand | Capstone documentation",
    "keywords": "Class NavigateSelectHotBarSlotCommand Namespace Runtime.Inventory.Commands Assembly MainGame.dll public class NavigateSelectHotBarSlotCommand : AbstractCommand<NavigateSelectHotBarSlotCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<NavigateSelectHotBarSlotCommand> NavigateSelectHotBarSlotCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<NavigateSelectHotBarSlotCommand>.AutoRecycle AbstractCommand<NavigateSelectHotBarSlotCommand>.OnRecycled() AbstractCommand<NavigateSelectHotBarSlotCommand>.IsRecycled AbstractCommand<NavigateSelectHotBarSlotCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NavigateSelectHotBarSlotCommand() public NavigateSelectHotBarSlotCommand() Methods Allocate(HotBarCategory, bool) public static NavigateSelectHotBarSlotCommand Allocate(HotBarCategory category, bool isNext) Parameters category HotBarCategory isNext bool Returns NavigateSelectHotBarSlotCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Runtime.Inventory.Commands.OnPlayerThrowResource.html": {
    "href": "api/Runtime.Inventory.Commands.OnPlayerThrowResource.html",
    "title": "Struct OnPlayerThrowResource | Capstone documentation",
    "keywords": "Struct OnPlayerThrowResource Namespace Runtime.Inventory.Commands Assembly MainGame.dll public struct OnPlayerThrowResource Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields resources public List<IResourceEntity> resources Field Value List<IResourceEntity>"
  },
  "api/Runtime.Inventory.Commands.PlayerThrowAllSlotResourceCommand.html": {
    "href": "api/Runtime.Inventory.Commands.PlayerThrowAllSlotResourceCommand.html",
    "title": "Class PlayerThrowAllSlotResourceCommand | Capstone documentation",
    "keywords": "Class PlayerThrowAllSlotResourceCommand Namespace Runtime.Inventory.Commands Assembly MainGame.dll public class PlayerThrowAllSlotResourceCommand : AbstractCommand<PlayerThrowAllSlotResourceCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<PlayerThrowAllSlotResourceCommand> PlayerThrowAllSlotResourceCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<PlayerThrowAllSlotResourceCommand>.AutoRecycle AbstractCommand<PlayerThrowAllSlotResourceCommand>.OnRecycled() AbstractCommand<PlayerThrowAllSlotResourceCommand>.IsRecycled AbstractCommand<PlayerThrowAllSlotResourceCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerThrowAllSlotResourceCommand() public PlayerThrowAllSlotResourceCommand() Fields fromSlot protected ResourceSlot fromSlot Field Value ResourceSlot Methods Allocate(ResourceSlot) public static PlayerThrowAllSlotResourceCommand Allocate(ResourceSlot fromSlot) Parameters fromSlot ResourceSlot Returns PlayerThrowAllSlotResourceCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Runtime.Inventory.Commands.SlotItemDragReleaseCommand.html": {
    "href": "api/Runtime.Inventory.Commands.SlotItemDragReleaseCommand.html",
    "title": "Class SlotItemDragReleaseCommand | Capstone documentation",
    "keywords": "Class SlotItemDragReleaseCommand Namespace Runtime.Inventory.Commands Assembly MainGame.dll public class SlotItemDragReleaseCommand : AbstractCommand<SlotItemDragReleaseCommand>, ICommand, ICanSetArchitecture, ICanGetSystem, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanSendCommand, IPoolable, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractCommand<SlotItemDragReleaseCommand> SlotItemDragReleaseCommand Implements ICommand ICanSetArchitecture ICanGetSystem ICanGetModel ICanGetUtility ICanSendEvent ICanSendCommand IPoolable ICanSendQuery IBelongToArchitecture Inherited Members AbstractCommand<SlotItemDragReleaseCommand>.AutoRecycle AbstractCommand<SlotItemDragReleaseCommand>.OnRecycled() AbstractCommand<SlotItemDragReleaseCommand>.IsRecycled AbstractCommand<SlotItemDragReleaseCommand>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SlotItemDragReleaseCommand() public SlotItemDragReleaseCommand() Methods Allocate(Vector2, ResourceSlot) public static SlotItemDragReleaseCommand Allocate(Vector2 mousePosition, ResourceSlot fromSlot) Parameters mousePosition Vector2 fromSlot ResourceSlot Returns SlotItemDragReleaseCommand OnExecute() Execute this command protected override void OnExecute()"
  },
  "api/Runtime.Inventory.Commands.html": {
    "href": "api/Runtime.Inventory.Commands.html",
    "title": "Namespace Runtime.Inventory.Commands | Capstone documentation",
    "keywords": "Namespace Runtime.Inventory.Commands Classes DirectSelectHotBarSlotCommand NavigateSelectHotBarSlotCommand PlayerThrowAllSlotResourceCommand SlotItemDragReleaseCommand Structs OnPlayerThrowResource"
  },
  "api/Runtime.Inventory.InventorySpriteFactory.html": {
    "href": "api/Runtime.Inventory.InventorySpriteFactory.html",
    "title": "Class InventorySpriteFactory | Capstone documentation",
    "keywords": "Class InventorySpriteFactory Namespace Runtime.Inventory Assembly MainGame.dll public class InventorySpriteFactory : ISingleton, ICanGetUtility, IBelongToArchitecture Inheritance object InventorySpriteFactory Implements ISingleton ICanGetUtility IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Singleton public static InventorySpriteFactory Singleton { get; } Property Value InventorySpriteFactory Methods GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture GetSprite(string) public Sprite GetSprite(string spriteName) Parameters spriteName string Returns Sprite OnSingletonInit() public void OnSingletonInit()"
  },
  "api/Runtime.Inventory.Model.AbstractResourceSlotsSystem-1.html": {
    "href": "api/Runtime.Inventory.Model.AbstractResourceSlotsSystem-1.html",
    "title": "Class AbstractResourceSlotsSystem<T> | Capstone documentation",
    "keywords": "Class AbstractResourceSlotsSystem<T> Namespace Runtime.Inventory.Model Assembly MainGame.dll public abstract class AbstractResourceSlotsSystem<T> : AbstractSystem, IResourceSlotsSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture where T : class, IResourceSlotsModel Type Parameters T Inheritance object AbstractSystem AbstractResourceSlotsSystem<T> Implements IResourceSlotsSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Derived InventorySystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields model protected T model Field Value T Methods ClearSlots() public abstract void ClearSlots() OnInit() protected override void OnInit() ResetSlots() public abstract void ResetSlots()"
  },
  "api/Runtime.Inventory.Model.HotBarCategory.html": {
    "href": "api/Runtime.Inventory.Model.HotBarCategory.html",
    "title": "Enum HotBarCategory | Capstone documentation",
    "keywords": "Enum HotBarCategory Namespace Runtime.Inventory.Model Assembly MainGame.dll public enum HotBarCategory Fields Left = 2 None = 0 Right = 1"
  },
  "api/Runtime.Inventory.Model.HotBarSlotsInfo.html": {
    "href": "api/Runtime.Inventory.Model.HotBarSlotsInfo.html",
    "title": "Class HotBarSlotsInfo | Capstone documentation",
    "keywords": "Class HotBarSlotsInfo Namespace Runtime.Inventory.Model Assembly MainGame.dll [Serializable] public class HotBarSlotsInfo Inheritance object HotBarSlotsInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HotBarSlotsInfo() public HotBarSlotsInfo() Fields CurrentSelectedIndex public int CurrentSelectedIndex Field Value int Slots public List<ResourceSlot> Slots Field Value List<ResourceSlot>"
  },
  "api/Runtime.Inventory.Model.IInventoryModel.html": {
    "href": "api/Runtime.Inventory.Model.IInventoryModel.html",
    "title": "Interface IInventoryModel | Capstone documentation",
    "keywords": "Interface IInventoryModel Namespace Runtime.Inventory.Model Assembly MainGame.dll public interface IInventoryModel : IResourceSlotsModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IResourceSlotsModel.AddItem(IResourceEntity) IResourceSlotsModel.CanPlaceItem(IResourceEntity) IResourceSlotsModel.RemoveItem(string) IResourceSlotsModel.GetSlotCount() IResourceSlotsModel.Clear() IResourceSlotsModel.Reset() IResourceSlotsModel.GetAllSlots() IResourceSlotsModel.GetSlotCurrentItemCount(int) IResourceSlotsModel.RegisterInitialEntityEvents(IResourceEntity) IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods AddHotBarSlots(HotBarCategory, int, Func<ResourceSlot>) Add the specified number of slots to the hotbar. bool AddHotBarSlots(HotBarCategory category, int slotCount, Func<ResourceSlot> getter) Parameters category HotBarCategory slotCount int getter Func<ResourceSlot> Returns bool AddSlots(int) Add the specified number of slots to the inventory. Factors causing false: The resulting number of slots exceeds the maximum number of slots. In this case, only the slots that can be added will be added. bool AddSlots(int slotCount) Parameters slotCount int Returns bool GetHotBarSlotCount(HotBarCategory) int GetHotBarSlotCount(HotBarCategory category) Parameters category HotBarCategory Returns int GetHotBarSlots(HotBarCategory) List<ResourceSlot> GetHotBarSlots(HotBarCategory category) Parameters category HotBarCategory Returns List<ResourceSlot> GetSelectedHotBarSlot(HotBarCategory) ResourceSlot GetSelectedHotBarSlot(HotBarCategory category) Parameters category HotBarCategory Returns ResourceSlot GetSelectedHotBarSlotIndex(HotBarCategory) int GetSelectedHotBarSlotIndex(HotBarCategory category) Parameters category HotBarCategory Returns int SelectHotBarSlot(HotBarCategory, int) void SelectHotBarSlot(HotBarCategory category, int index) Parameters category HotBarCategory index int SelectNextHotBarSlot(HotBarCategory) void SelectNextHotBarSlot(HotBarCategory category) Parameters category HotBarCategory SelectPreviousHotBarSlot(HotBarCategory) void SelectPreviousHotBarSlot(HotBarCategory category) Parameters category HotBarCategory"
  },
  "api/Runtime.Inventory.Model.IInventorySystem.html": {
    "href": "api/Runtime.Inventory.Model.IInventorySystem.html",
    "title": "Interface IInventorySystem | Capstone documentation",
    "keywords": "Interface IInventorySystem Namespace Runtime.Inventory.Model Assembly MainGame.dll public interface IInventorySystem : IResourceSlotsSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members IResourceSlotsSystem.ResetSlots() IResourceSlotsSystem.ClearSlots() ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture()"
  },
  "api/Runtime.Inventory.Model.IResourceSlotsModel.html": {
    "href": "api/Runtime.Inventory.Model.IResourceSlotsModel.html",
    "title": "Interface IResourceSlotsModel | Capstone documentation",
    "keywords": "Interface IResourceSlotsModel Namespace Runtime.Inventory.Model Assembly MainGame.dll public interface IResourceSlotsModel : IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Methods AddItem(IResourceEntity) Add item to the slots. If the item is stackable, it will be added to the existing stack. If there's no existing stack, a new stack will be created. bool AddItem(IResourceEntity item) Parameters item IResourceEntity Returns bool CanPlaceItem(IResourceEntity) Returns true if the item can be placed at the specified index. Factors causing false: The index is out of range. The item is not currently stackable at the specified index. bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool Clear() Reset all slots to the initial state. void Clear() GetAllSlots() List<ResourceSlot> GetAllSlots() Returns List<ResourceSlot> GetSlotCount() Get the number of all slots currently. int GetSlotCount() Returns int GetSlotCurrentItemCount(int) int GetSlotCurrentItemCount(int index) Parameters index int Returns int RegisterInitialEntityEvents(IResourceEntity) void RegisterInitialEntityEvents(IResourceEntity entity) Parameters entity IResourceEntity RemoveItem(string) Find and remove the first item with the specified uuid. bool RemoveItem(string uuid) Parameters uuid string Returns bool Reset() void Reset()"
  },
  "api/Runtime.Inventory.Model.IResourceSlotsSystem.html": {
    "href": "api/Runtime.Inventory.Model.IResourceSlotsSystem.html",
    "title": "Interface IResourceSlotsSystem | Capstone documentation",
    "keywords": "Interface IResourceSlotsSystem Namespace Runtime.Inventory.Model Assembly MainGame.dll public interface IResourceSlotsSystem : ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inherited Members ISystem.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() Methods ClearSlots() void ClearSlots() ResetSlots() void ResetSlots()"
  },
  "api/Runtime.Inventory.Model.InventoryModel.html": {
    "href": "api/Runtime.Inventory.Model.InventoryModel.html",
    "title": "Class InventoryModel | Capstone documentation",
    "keywords": "Class InventoryModel Namespace Runtime.Inventory.Model Assembly MainGame.dll public class InventoryModel : ResourceSlotsModel, IInventoryModel, IResourceSlotsModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel ResourceSlotsModel InventoryModel Implements IInventoryModel IResourceSlotsModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members ResourceSlotsModel.slots ResourceSlotsModel.AddItemAt(IResourceEntity, ResourceSlot) ResourceSlotsModel.OnEntityRecycled(IEntity) ResourceSlotsModel.GetSlotCount() ResourceSlotsModel.GetAllSlots() ResourceSlotsModel.GetSlotCurrentItemCount(int) ResourceSlotsModel.RegisterInitialEntityEvents(IResourceEntity) AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MaxHotBarSlotCount public static Dictionary<HotBarCategory, int> MaxHotBarSlotCount Field Value Dictionary<HotBarCategory, int> MaxSlotCount public static int MaxSlotCount Field Value int Methods AddHotBarSlots(HotBarCategory, int, Func<ResourceSlot>) Add the specified number of slots to the hotbar. public bool AddHotBarSlots(HotBarCategory category, int slotCount, Func<ResourceSlot> getter) Parameters category HotBarCategory slotCount int getter Func<ResourceSlot> Returns bool AddItem(IResourceEntity) Add item to the slots. If the item is stackable, it will be added to the existing stack. If there's no existing stack, a new stack will be created. public override bool AddItem(IResourceEntity item) Parameters item IResourceEntity Returns bool AddSlots(int) Add the specified number of slots to the inventory. Factors causing false: The resulting number of slots exceeds the maximum number of slots. In this case, only the slots that can be added will be added. public bool AddSlots(int slotCount) Parameters slotCount int Returns bool CanPlaceItem(IResourceEntity) Returns true if the item can be placed at the specified index. Factors causing false: The index is out of range. The item is not currently stackable at the specified index. public override bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool Clear() Reset all slots to the initial state. public override void Clear() GetHotBarSlotCount(HotBarCategory) public int GetHotBarSlotCount(HotBarCategory category) Parameters category HotBarCategory Returns int GetHotBarSlots(HotBarCategory) public List<ResourceSlot> GetHotBarSlots(HotBarCategory category) Parameters category HotBarCategory Returns List<ResourceSlot> GetSelectedHotBarSlot(HotBarCategory) public ResourceSlot GetSelectedHotBarSlot(HotBarCategory category) Parameters category HotBarCategory Returns ResourceSlot GetSelectedHotBarSlotIndex(HotBarCategory) public int GetSelectedHotBarSlotIndex(HotBarCategory category) Parameters category HotBarCategory Returns int OnInit() protected override void OnInit() RemoveItem(string) Find and remove the first item with the specified uuid. public override bool RemoveItem(string uuid) Parameters uuid string Returns bool Reset() public override void Reset() SelectHotBarSlot(HotBarCategory, int) public void SelectHotBarSlot(HotBarCategory category, int index) Parameters category HotBarCategory index int SelectNextHotBarSlot(HotBarCategory) public void SelectNextHotBarSlot(HotBarCategory category) Parameters category HotBarCategory SelectPreviousHotBarSlot(HotBarCategory) public void SelectPreviousHotBarSlot(HotBarCategory category) Parameters category HotBarCategory"
  },
  "api/Runtime.Inventory.Model.InventorySystem.html": {
    "href": "api/Runtime.Inventory.Model.InventorySystem.html",
    "title": "Class InventorySystem | Capstone documentation",
    "keywords": "Class InventorySystem Namespace Runtime.Inventory.Model Assembly MainGame.dll public class InventorySystem : AbstractResourceSlotsSystem<IInventoryModel>, IInventorySystem, IResourceSlotsSystem, ISystem, ICanSetArchitecture, ICanGetModel, ICanGetUtility, ICanSendEvent, ICanRegisterEvent, ICanGetSystem, ICanSendQuery, IBelongToArchitecture Inheritance object AbstractSystem AbstractResourceSlotsSystem<IInventoryModel> InventorySystem Implements IInventorySystem IResourceSlotsSystem ISystem ICanSetArchitecture ICanGetModel ICanGetUtility ICanSendEvent ICanRegisterEvent ICanGetSystem ICanSendQuery IBelongToArchitecture Inherited Members AbstractResourceSlotsSystem<IInventoryModel>.model object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields InitialHotBarSlotCount public static Dictionary<HotBarCategory, int> InitialHotBarSlotCount Field Value Dictionary<HotBarCategory, int> InitialSlotCount public static int InitialSlotCount Field Value int Methods ClearSlots() public override void ClearSlots() OnInit() protected override void OnInit() ResetSlots() public override void ResetSlots()"
  },
  "api/Runtime.Inventory.Model.LeftHotBarSlot.html": {
    "href": "api/Runtime.Inventory.Model.LeftHotBarSlot.html",
    "title": "Class LeftHotBarSlot | Capstone documentation",
    "keywords": "Class LeftHotBarSlot Namespace Runtime.Inventory.Model Assembly MainGame.dll [Serializable] public class LeftHotBarSlot : ResourceSlot Inheritance object ResourceSlot LeftHotBarSlot Inherited Members ResourceSlot.currentHoveredSlot ResourceSlot.SetSlotMaxItemCount(int) ResourceSlot.IsEmpty() ResourceSlot.GetQuantity() ResourceSlot.TryAddItem(IResourceEntity) ResourceSlot.RemoveLastItem() ResourceSlot.GetLastItemUUID() ResourceSlot.RemoveItem(string) ResourceSlot.Clear() ResourceSlot.TryMoveAllItemFromSlot(ResourceSlot, IResourceEntity) ResourceSlot.ContainsItem(string) ResourceSlot.RegisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.UnregisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.GetUUIDList() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanPlaceItem(IResourceEntity) public override bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool"
  },
  "api/Runtime.Inventory.Model.OnCurrentHotbarUpdateEvent.html": {
    "href": "api/Runtime.Inventory.Model.OnCurrentHotbarUpdateEvent.html",
    "title": "Struct OnCurrentHotbarUpdateEvent | Capstone documentation",
    "keywords": "Struct OnCurrentHotbarUpdateEvent Namespace Runtime.Inventory.Model Assembly MainGame.dll public struct OnCurrentHotbarUpdateEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Category public HotBarCategory Category Field Value HotBarCategory TopItem public IResourceEntity TopItem Field Value IResourceEntity"
  },
  "api/Runtime.Inventory.Model.OnHotBarSlotSelectedEvent.html": {
    "href": "api/Runtime.Inventory.Model.OnHotBarSlotSelectedEvent.html",
    "title": "Struct OnHotBarSlotSelectedEvent | Capstone documentation",
    "keywords": "Struct OnHotBarSlotSelectedEvent Namespace Runtime.Inventory.Model Assembly MainGame.dll public struct OnHotBarSlotSelectedEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Category public HotBarCategory Category Field Value HotBarCategory SelectedIndex public int SelectedIndex Field Value int"
  },
  "api/Runtime.Inventory.Model.OnInventoryHotBarSlotAddedEvent.html": {
    "href": "api/Runtime.Inventory.Model.OnInventoryHotBarSlotAddedEvent.html",
    "title": "Struct OnInventoryHotBarSlotAddedEvent | Capstone documentation",
    "keywords": "Struct OnInventoryHotBarSlotAddedEvent Namespace Runtime.Inventory.Model Assembly MainGame.dll public struct OnInventoryHotBarSlotAddedEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AddedCount public int AddedCount Field Value int AddedSlots public List<ResourceSlot> AddedSlots Field Value List<ResourceSlot> Category public HotBarCategory Category Field Value HotBarCategory"
  },
  "api/Runtime.Inventory.Model.OnInventorySlotAddedEvent.html": {
    "href": "api/Runtime.Inventory.Model.OnInventorySlotAddedEvent.html",
    "title": "Struct OnInventorySlotAddedEvent | Capstone documentation",
    "keywords": "Struct OnInventorySlotAddedEvent Namespace Runtime.Inventory.Model Assembly MainGame.dll public struct OnInventorySlotAddedEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AddedCount public int AddedCount Field Value int AddedSlots public List<ResourceSlot> AddedSlots Field Value List<ResourceSlot>"
  },
  "api/Runtime.Inventory.Model.ResourceSlot.html": {
    "href": "api/Runtime.Inventory.Model.ResourceSlot.html",
    "title": "Class ResourceSlot | Capstone documentation",
    "keywords": "Class ResourceSlot Namespace Runtime.Inventory.Model Assembly MainGame.dll [Serializable] public class ResourceSlot Inheritance object ResourceSlot Derived LeftHotBarSlot RightHotBarSlot RubbishSlot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResourceSlot() public ResourceSlot() Fields currentHoveredSlot public static ResourceSlotViewController currentHoveredSlot Field Value ResourceSlotViewController Methods CanPlaceItem(IResourceEntity) public virtual bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool Clear() public void Clear() ContainsItem(string) public bool ContainsItem(string uuid) Parameters uuid string Returns bool GetLastItemUUID() public string GetLastItemUUID() Returns string GetQuantity() public int GetQuantity() Returns int GetUUIDList() public List<string> GetUUIDList() Returns List<string> IsEmpty() public bool IsEmpty() Returns bool RegisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) public void RegisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>> callback) Parameters callback Action<ResourceSlot, string, List<string>> RemoveItem(string) public bool RemoveItem(string uuid) Parameters uuid string Returns bool RemoveLastItem() public bool RemoveLastItem() Returns bool SetSlotMaxItemCount(int) public int SetSlotMaxItemCount(int minItemCount) Parameters minItemCount int Returns int TryAddItem(IResourceEntity) public bool TryAddItem(IResourceEntity item) Parameters item IResourceEntity Returns bool TryMoveAllItemFromSlot(ResourceSlot, IResourceEntity) Try to move all items from other slot to this slot. If this slot can not store all items, try to move as many as possible. public void TryMoveAllItemFromSlot(ResourceSlot otherSlot, IResourceEntity topItem) Parameters otherSlot ResourceSlot topItem IResourceEntity UnregisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) public void UnregisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>> callback) Parameters callback Action<ResourceSlot, string, List<string>>"
  },
  "api/Runtime.Inventory.Model.ResourceSlotsModel.html": {
    "href": "api/Runtime.Inventory.Model.ResourceSlotsModel.html",
    "title": "Class ResourceSlotsModel | Capstone documentation",
    "keywords": "Class ResourceSlotsModel Namespace Runtime.Inventory.Model Assembly MainGame.dll public abstract class ResourceSlotsModel : AbstractSavableModel, ISavableModel, IResourceSlotsModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object AbstractModel AbstractSavableModel ResourceSlotsModel Implements ISavableModel IResourceSlotsModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture Derived InventoryModel Inherited Members AbstractSavableModel.OnInit() AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields slots protected List<ResourceSlot> slots Field Value List<ResourceSlot> Methods AddItem(IResourceEntity) Add item to the slots. If the item is stackable, it will be added to the existing stack. If there's no existing stack, a new stack will be created. public virtual bool AddItem(IResourceEntity item) Parameters item IResourceEntity Returns bool AddItemAt(IResourceEntity, ResourceSlot) protected virtual bool AddItemAt(IResourceEntity item, ResourceSlot slot) Parameters item IResourceEntity slot ResourceSlot Returns bool CanPlaceItem(IResourceEntity) Returns true if the item can be placed at the specified index. Factors causing false: The index is out of range. The item is not currently stackable at the specified index. public virtual bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool Clear() Reset all slots to the initial state. public abstract void Clear() GetAllSlots() public List<ResourceSlot> GetAllSlots() Returns List<ResourceSlot> GetSlotCount() Get the number of all slots currently. public int GetSlotCount() Returns int GetSlotCurrentItemCount(int) public int GetSlotCurrentItemCount(int index) Parameters index int Returns int OnEntityRecycled(IEntity) protected void OnEntityRecycled(IEntity entity) Parameters entity IEntity RegisterInitialEntityEvents(IResourceEntity) public void RegisterInitialEntityEvents(IResourceEntity entity) Parameters entity IResourceEntity RemoveItem(string) Find and remove the first item with the specified uuid. public virtual bool RemoveItem(string uuid) Parameters uuid string Returns bool Reset() public abstract void Reset()"
  },
  "api/Runtime.Inventory.Model.RightHotBarSlot.html": {
    "href": "api/Runtime.Inventory.Model.RightHotBarSlot.html",
    "title": "Class RightHotBarSlot | Capstone documentation",
    "keywords": "Class RightHotBarSlot Namespace Runtime.Inventory.Model Assembly MainGame.dll [Serializable] public class RightHotBarSlot : ResourceSlot Inheritance object ResourceSlot RightHotBarSlot Inherited Members ResourceSlot.currentHoveredSlot ResourceSlot.SetSlotMaxItemCount(int) ResourceSlot.IsEmpty() ResourceSlot.GetQuantity() ResourceSlot.TryAddItem(IResourceEntity) ResourceSlot.RemoveLastItem() ResourceSlot.GetLastItemUUID() ResourceSlot.RemoveItem(string) ResourceSlot.Clear() ResourceSlot.TryMoveAllItemFromSlot(ResourceSlot, IResourceEntity) ResourceSlot.ContainsItem(string) ResourceSlot.RegisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.UnregisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.GetUUIDList() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanPlaceItem(IResourceEntity) public override bool CanPlaceItem(IResourceEntity item) Parameters item IResourceEntity Returns bool"
  },
  "api/Runtime.Inventory.Model.RubbishSlot.html": {
    "href": "api/Runtime.Inventory.Model.RubbishSlot.html",
    "title": "Class RubbishSlot | Capstone documentation",
    "keywords": "Class RubbishSlot Namespace Runtime.Inventory.Model Assembly MainGame.dll [Serializable] public class RubbishSlot : ResourceSlot Inheritance object ResourceSlot RubbishSlot Inherited Members ResourceSlot.currentHoveredSlot ResourceSlot.SetSlotMaxItemCount(int) ResourceSlot.IsEmpty() ResourceSlot.GetQuantity() ResourceSlot.TryAddItem(IResourceEntity) ResourceSlot.RemoveLastItem() ResourceSlot.GetLastItemUUID() ResourceSlot.RemoveItem(string) ResourceSlot.Clear() ResourceSlot.TryMoveAllItemFromSlot(ResourceSlot, IResourceEntity) ResourceSlot.ContainsItem(string) ResourceSlot.CanPlaceItem(IResourceEntity) ResourceSlot.RegisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.UnregisterOnSlotUpdateCallback(Action<ResourceSlot, string, List<string>>) ResourceSlot.GetUUIDList() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Runtime.Inventory.Model.SlotInfo.html": {
    "href": "api/Runtime.Inventory.Model.SlotInfo.html",
    "title": "Struct SlotInfo | Capstone documentation",
    "keywords": "Struct SlotInfo Namespace Runtime.Inventory.Model Assembly MainGame.dll public struct SlotInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Items public List<IResourceEntity> Items Field Value List<IResourceEntity> SlotIndex public int SlotIndex Field Value int Properties TopItem public IResourceEntity TopItem { get; } Property Value IResourceEntity"
  },
  "api/Runtime.Inventory.Model.html": {
    "href": "api/Runtime.Inventory.Model.html",
    "title": "Namespace Runtime.Inventory.Model | Capstone documentation",
    "keywords": "Namespace Runtime.Inventory.Model Classes AbstractResourceSlotsSystem<T> HotBarSlotsInfo InventoryModel InventorySystem LeftHotBarSlot ResourceSlot ResourceSlotsModel RightHotBarSlot RubbishSlot Structs OnCurrentHotbarUpdateEvent OnHotBarSlotSelectedEvent OnInventoryHotBarSlotAddedEvent OnInventorySlotAddedEvent SlotInfo Interfaces IInventoryModel IInventorySystem IResourceSlotsModel IResourceSlotsSystem Enums HotBarCategory"
  },
  "api/Runtime.Inventory.ViewController.InventorySlotLayoutViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.InventorySlotLayoutViewController.html",
    "title": "Class InventorySlotLayoutViewController | Capstone documentation",
    "keywords": "Class InventorySlotLayoutViewController Namespace Runtime.Inventory.ViewController Assembly MainGame.dll public abstract class InventorySlotLayoutViewController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> InventorySlotLayoutViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived MainInventorySlotLayoutViewController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields HotBarCategory [SerializeField] public HotBarCategory HotBarCategory Field Value HotBarCategory ShowSlotItemWhenInventoryUIClosed [SerializeField] public bool ShowSlotItemWhenInventoryUIClosed Field Value bool Methods OnHideSlotItem() public abstract void OnHideSlotItem() OnInventorySlotAdded(List<ResourceSlot>, int) public abstract void OnInventorySlotAdded(List<ResourceSlot> addedSlots, int addedCount) Parameters addedSlots List<ResourceSlot> addedCount int OnSelected(int) public abstract void OnSelected(int slotIndex) Parameters slotIndex int OnShowSlotItem() public abstract void OnShowSlotItem()"
  },
  "api/Runtime.Inventory.ViewController.InventoryUIViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.InventoryUIViewController.html",
    "title": "Class InventoryUIViewController | Capstone documentation",
    "keywords": "Class InventoryUIViewController Namespace Runtime.Inventory.ViewController Assembly MainGame.dll public class InventoryUIViewController : AbstractPanel, IPanel, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractPanel InventoryUIViewController Implements IPanel IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members AbstractPanel.IsOnTop() AbstractPanel.Parent AbstractPanel.PanelType AbstractPanel.DefaultSelectedGameObjectWhenFocused AbstractPanel.IsOpening AbstractPanel.OnFocused() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture OnClosed() Called on the point when the panel is closed public override void OnClosed() OnInit() Called when the panel is first instantiated by the UIRoot; if the panel pre-exists, this will act like Awake() public override void OnInit() OnOpen(UIMsg) Called on the point when the panel is opened public override void OnOpen(UIMsg msg) Parameters msg UIMsg"
  },
  "api/Runtime.Inventory.ViewController.MainInventorySlotLayoutViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.MainInventorySlotLayoutViewController.html",
    "title": "Class MainInventorySlotLayoutViewController | Capstone documentation",
    "keywords": "Class MainInventorySlotLayoutViewController Namespace Runtime.Inventory.ViewController Assembly MainGame.dll public class MainInventorySlotLayoutViewController : InventorySlotLayoutViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> InventorySlotLayoutViewController MainInventorySlotLayoutViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived WeaponInventorySlotLayoutViewController ResourceInventorySlotLayoutViewController Inherited Members InventorySlotLayoutViewController.ShowSlotItemWhenInventoryUIClosed InventorySlotLayoutViewController.HotBarCategory MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields slotViewControllers protected List<ResourceSlotViewController> slotViewControllers Field Value List<ResourceSlotViewController> Methods Awake() protected virtual void Awake() OnHideSlotItem() public override void OnHideSlotItem() OnInventorySlotAdded(List<ResourceSlot>, int) public override void OnInventorySlotAdded(List<ResourceSlot> addedSlots, int addedCount) Parameters addedSlots List<ResourceSlot> addedCount int OnSelected(int) public override void OnSelected(int slotIndex) Parameters slotIndex int OnShowSlotItem() public override void OnShowSlotItem() OnSlotViewControllerSpawned(ResourceSlotViewController, int) public virtual void OnSlotViewControllerSpawned(ResourceSlotViewController slotViewController, int index) Parameters slotViewController ResourceSlotViewController index int"
  },
  "api/Runtime.Inventory.ViewController.ResourceInventorySlotLayoutViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.ResourceInventorySlotLayoutViewController.html",
    "title": "Class ResourceInventorySlotLayoutViewController | Capstone documentation",
    "keywords": "Class ResourceInventorySlotLayoutViewController Namespace Runtime.Inventory.ViewController Assembly MainGame.dll public class ResourceInventorySlotLayoutViewController : MainInventorySlotLayoutViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> InventorySlotLayoutViewController MainInventorySlotLayoutViewController ResourceInventorySlotLayoutViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MainInventorySlotLayoutViewController.slotViewControllers MainInventorySlotLayoutViewController.Awake() MainInventorySlotLayoutViewController.OnInventorySlotAdded(List<ResourceSlot>, int) MainInventorySlotLayoutViewController.OnShowSlotItem() MainInventorySlotLayoutViewController.OnHideSlotItem() InventorySlotLayoutViewController.ShowSlotItemWhenInventoryUIClosed InventorySlotLayoutViewController.HotBarCategory MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnSelected(int) public override void OnSelected(int slotIndex) Parameters slotIndex int OnSlotViewControllerSpawned(ResourceSlotViewController, int) public override void OnSlotViewControllerSpawned(ResourceSlotViewController slotViewController, int index) Parameters slotViewController ResourceSlotViewController index int"
  },
  "api/Runtime.Inventory.ViewController.ResourceSlotViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.ResourceSlotViewController.html",
    "title": "Class ResourceSlotViewController | Capstone documentation",
    "keywords": "Class ResourceSlotViewController Namespace Runtime.Inventory.ViewController Assembly MainGame.dll public class ResourceSlotViewController : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IEndDragHandler, IDragHandler, IBeginDragHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> ResourceSlotViewController Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IPointerDownHandler IPointerUpHandler IPointerEnterHandler IPointerExitHandler IEndDragHandler IDragHandler IBeginDragHandler IEventSystemHandler Derived RubbishSlotViewController ShortCutResourceSlotViewController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields isSelected protected bool isSelected Field Value bool pointerDownObject public static GameObject pointerDownObject Field Value GameObject slotBG protected Image slotBG Field Value Image Properties Slot public ResourceSlot Slot { get; } Property Value ResourceSlot Methods Activate(bool) Only when the slot is active, the slot can show and update the item public void Activate(bool active) Parameters active bool Awake() protected virtual void Awake() OnBeginDrag(PointerEventData) Called by a BaseInputModule before a drag is started. public void OnBeginDrag(PointerEventData eventData) Parameters eventData PointerEventData OnDrag(PointerEventData) When dragging is occurring this will be called every time the cursor is moved. public void OnDrag(PointerEventData eventData) Parameters eventData PointerEventData OnEndDrag(PointerEventData) Called by a BaseInputModule when a drag is ended. public void OnEndDrag(PointerEventData eventData) Parameters eventData PointerEventData OnPointerClick() public void OnPointerClick() OnPointerDown(PointerEventData) Use this callback to detect pointer down events. public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnPointerEnter(PointerEventData) Use this callback to detect pointer enter events public void OnPointerEnter(PointerEventData eventData) Parameters eventData PointerEventData OnPointerExit(PointerEventData) Use this callback to detect pointer exit events public void OnPointerExit(PointerEventData eventData) Parameters eventData PointerEventData OnPointerUp(PointerEventData) Use this callback to detect pointer up events. public void OnPointerUp(PointerEventData eventData) Parameters eventData PointerEventData SetSelected(bool) public virtual void SetSelected(bool selected) Parameters selected bool SetSlot(ResourceSlot) public void SetSlot(ResourceSlot slot) Parameters slot ResourceSlot"
  },
  "api/Runtime.Inventory.ViewController.html": {
    "href": "api/Runtime.Inventory.ViewController.html",
    "title": "Namespace Runtime.Inventory.ViewController | Capstone documentation",
    "keywords": "Namespace Runtime.Inventory.ViewController Classes InventorySlotLayoutViewController InventoryUIViewController MainInventorySlotLayoutViewController ResourceInventorySlotLayoutViewController ResourceSlotViewController"
  },
  "api/Runtime.Inventory.html": {
    "href": "api/Runtime.Inventory.html",
    "title": "Namespace Runtime.Inventory | Capstone documentation",
    "keywords": "Namespace Runtime.Inventory Namespaces Runtime.Inventory.Commands Runtime.Inventory.Model Runtime.Inventory.ViewController Classes InventorySpriteFactory"
  },
  "api/Runtime.Player.Builders.PlayerBuilder-1.html": {
    "href": "api/Runtime.Player.Builders.PlayerBuilder-1.html",
    "title": "Class PlayerBuilder<T> | Capstone documentation",
    "keywords": "Class PlayerBuilder<T> Namespace Runtime.Player.Builders Assembly MainGame.dll public class PlayerBuilder<T> : CreatureBuilder<PlayerBuilder<T>, T>, IPoolable where T : class, IEntity, new() Type Parameters T Inheritance object EntityBuilder<PlayerBuilder<T>, T> CreatureBuilder<PlayerBuilder<T>, T> PlayerBuilder<T> Implements IPoolable Inherited Members CreatureBuilder<PlayerBuilder<T>, T>.SetHealth(HealthInfo, IPropertyDependencyModifier<HealthInfo>) CreatureBuilder<PlayerBuilder<T>, T>.SetHealthModifier(IPropertyDependencyModifier<HealthInfo>) CreatureBuilder<PlayerBuilder<T>, T>.SetInvincible(bool) EntityBuilder<PlayerBuilder<T>, T>.Entity EntityBuilder<PlayerBuilder<T>, T>.onEntityCreated EntityBuilder<PlayerBuilder<T>, T>.RegisterOnEntityCreated(Action<T>) EntityBuilder<PlayerBuilder<T>, T>.CheckEntity() EntityBuilder<PlayerBuilder<T>, T>.OverrideName(string) EntityBuilder<PlayerBuilder<T>, T>.FromConfig(ConfigTable) EntityBuilder<PlayerBuilder<T>, T>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<PlayerBuilder<T>, T>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<PlayerBuilder<T>, T>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<PlayerBuilder<T>, T>.AddTag(TagName, int) EntityBuilder<PlayerBuilder<T>, T>.Build() EntityBuilder<PlayerBuilder<T>, T>.OnRecycled() EntityBuilder<PlayerBuilder<T>, T>.IsRecycled EntityBuilder<PlayerBuilder<T>, T>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerBuilder() public PlayerBuilder() Methods Allocate(int) public static PlayerBuilder<T> Allocate(int rarity) Parameters rarity int Returns PlayerBuilder<T> RecycleToCache() public override void RecycleToCache()"
  },
  "api/Runtime.Player.Builders.html": {
    "href": "api/Runtime.Player.Builders.html",
    "title": "Namespace Runtime.Player.Builders | Capstone documentation",
    "keywords": "Namespace Runtime.Player.Builders Classes PlayerBuilder<T>"
  },
  "api/Runtime.Player.GamePlayerModel.html": {
    "href": "api/Runtime.Player.GamePlayerModel.html",
    "title": "Class GamePlayerModel | Capstone documentation",
    "keywords": "Class GamePlayerModel Namespace Runtime.Player Assembly MainGame.dll public class GamePlayerModel : EntityModel<IPlayerEntity>, IGamePlayerModel, IEntityModel<IPlayerEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel EntityModel<IPlayerEntity> GamePlayerModel Implements IGamePlayerModel IEntityModel<IPlayerEntity> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members EntityModel<IPlayerEntity>.entityBuilderFactory EntityModel<IPlayerEntity>.entities EntityModel<IPlayerEntity>.OnInit() EntityModel<IPlayerEntity>.GetEntity(string) EntityModel<IPlayerEntity>.RemoveEntity(string) EntityModel<IPlayerEntity>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPlayer() public IPlayerEntity GetPlayer() Returns IPlayerEntity IsPlayerDead() public bool IsPlayerDead() Returns bool OnEntityBuilt(IPlayerEntity) protected override void OnEntityBuilt(IPlayerEntity entity) Parameters entity IPlayerEntity"
  },
  "api/Runtime.Player.IGamePlayerModel.html": {
    "href": "api/Runtime.Player.IGamePlayerModel.html",
    "title": "Interface IGamePlayerModel | Capstone documentation",
    "keywords": "Interface IGamePlayerModel Namespace Runtime.Player Assembly MainGame.dll Model for enemies public interface IGamePlayerModel : IEntityModel<IPlayerEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IEntityModel<IPlayerEntity>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetPlayer() IPlayerEntity GetPlayer() Returns IPlayerEntity IsPlayerDead() bool IsPlayerDead() Returns bool"
  },
  "api/Runtime.Player.IPlayerEntity.html": {
    "href": "api/Runtime.Player.IPlayerEntity.html",
    "title": "Interface IPlayerEntity | Capstone documentation",
    "keywords": "Interface IPlayerEntity Namespace Runtime.Player Assembly MainGame.dll public interface IPlayerEntity : ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IDamageable.HealthProperty IDamageable.GetMaxHealth() IDamageable.GetCurrentHealth() IDamageable.TakeDamage(int, IBelongToFaction) IDamageable.RegisterOnTakeDamage(OnTakeDamage) IDamageable.UnRegisterOnTakeDamage(OnTakeDamage) IDamageable.Heal(int, IBelongToFaction) IDamageable.RegisterOnHeal(OnHeal) IDamageable.UnRegisterOnHeal(OnHeal) IDamageable.IsInvincible IDamageable.CheckCanTakeDamage(IBelongToFaction) IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture()"
  },
  "api/Runtime.Player.PlayerEntity.html": {
    "href": "api/Runtime.Player.PlayerEntity.html",
    "title": "Class PlayerEntity | Capstone documentation",
    "keywords": "Class PlayerEntity Namespace Runtime.Player Assembly MainGame.dll public class PlayerEntity : AbstractCreature, IPlayerEntity, ICreature, IDamageable, IBelongToFaction, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity DamageableEntity AbstractCreature PlayerEntity Implements IPlayerEntity ICreature IDamageable IBelongToFaction IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members DamageableEntity.CurrentFaction DamageableEntity.IsInvincible DamageableEntity.HealthProperty DamageableEntity.OnEntityStart(bool) DamageableEntity.OnRegisterProperties() DamageableEntity.GetMaxHealth() DamageableEntity.GetCurrentHealth() DamageableEntity.TakeDamage(int, IBelongToFaction) DamageableEntity.OnTakeDamageAdditionalCheck(int, IBelongToFaction) DamageableEntity.CheckCanTakeDamage(IBelongToFaction) DamageableEntity.RegisterOnTakeDamage(OnTakeDamage) DamageableEntity.UnRegisterOnTakeDamage(OnTakeDamage) DamageableEntity.Heal(int, IBelongToFaction) DamageableEntity.RegisterOnHeal(OnHeal) DamageableEntity.UnRegisterOnHeal(OnHeal) AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.GetDisplayName() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EntityName public override string EntityName { get; set; } Property Value string Methods GetConfigTable() protected override ConfigTable GetConfigTable() Returns ConfigTable GetDefaultFaction() protected override Faction GetDefaultFaction() Returns Faction OnDoRecycle() public override void OnDoRecycle() OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected override void OnEntityRegisterAdditionalProperties() OnGetDescription(string) Return the description of the entity protected override string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnRecycle() public override void OnRecycle() OnRegisterCustomProperties() protected override ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[]"
  },
  "api/Runtime.Player.PlayerInteractiveZone.html": {
    "href": "api/Runtime.Player.PlayerInteractiveZone.html",
    "title": "Class PlayerInteractiveZone | Capstone documentation",
    "keywords": "Class PlayerInteractiveZone Namespace Runtime.Player Assembly MainGame.dll public class PlayerInteractiveZone : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerInteractiveZone Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods IsInZone(GameObject) public bool IsInZone(GameObject entityViewController) Parameters entityViewController GameObject Returns bool"
  },
  "api/Runtime.Player.html": {
    "href": "api/Runtime.Player.html",
    "title": "Namespace Runtime.Player | Capstone documentation",
    "keywords": "Namespace Runtime.Player Namespaces Runtime.Player.Builders Classes GamePlayerModel PlayerEntity PlayerInteractiveZone Interfaces IGamePlayerModel Model for enemies IPlayerEntity"
  },
  "api/Runtime.RawMaterials.Model.Base.IRawMaterialEntity.html": {
    "href": "api/Runtime.RawMaterials.Model.Base.IRawMaterialEntity.html",
    "title": "Interface IRawMaterialEntity | Capstone documentation",
    "keywords": "Interface IRawMaterialEntity Namespace Runtime.RawMaterials.Model.Base Assembly MainGame.dll public interface IRawMaterialEntity : IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IResourceEntity.GetMaxStackProperty() IResourceEntity.OnPicked() IResourceEntity.GetResourceCategory() IResourceEntity.InventoryVCPrefabName IResourceEntity.OnGroundVCPrefabName IResourceEntity.InHandVCPrefabName IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Methods GetBaitAdjectivesProperty() IBaitAdjectives GetBaitAdjectivesProperty() Returns IBaitAdjectives"
  },
  "api/Runtime.RawMaterials.Model.Base.IRawMaterialModel.html": {
    "href": "api/Runtime.RawMaterials.Model.Base.IRawMaterialModel.html",
    "title": "Interface IRawMaterialModel | Capstone documentation",
    "keywords": "Interface IRawMaterialModel Namespace Runtime.RawMaterials.Model.Base Assembly MainGame.dll public interface IRawMaterialModel : IGameResourceModel<IRawMaterialEntity>, IEntityModel<IRawMaterialEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IGameResourceModel<IRawMaterialEntity>.GetAnyResource(string) IEntityModel<IRawMaterialEntity>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetRawMaterialBuilder<T>(bool) RawMaterialBuilder<T> GetRawMaterialBuilder<T>(bool addToModelOnceBuilt = true) where T : class, IRawMaterialEntity, new() Parameters addToModelOnceBuilt bool Returns RawMaterialBuilder<T> Type Parameters T"
  },
  "api/Runtime.RawMaterials.Model.Base.RawMaterialEntity-1.html": {
    "href": "api/Runtime.RawMaterials.Model.Base.RawMaterialEntity-1.html",
    "title": "Class RawMaterialEntity<T> | Capstone documentation",
    "keywords": "Class RawMaterialEntity<T> Namespace Runtime.RawMaterials.Model.Base Assembly MainGame.dll public abstract class RawMaterialEntity<T> : ResourceEntity<T>, IRawMaterialEntity, IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : ResourceEntity<T>, new() Type Parameters T Inheritance object Entity AbstractBasicEntity ResourceEntity<T> RawMaterialEntity<T> Implements IRawMaterialEntity IResourceEntity IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived CommonRawMaterialEntity Inherited Members ResourceEntity<T>.pickedBefore ResourceEntity<T>.OnDoRecycle() ResourceEntity<T>.GetMaxStackProperty() ResourceEntity<T>.GetDisplayName() ResourceEntity<T>.OnPicked() ResourceEntity<T>.GetResourceCategory() ResourceEntity<T>.InventoryVCPrefabName ResourceEntity<T>.InHandVCPrefabName AbstractBasicEntity.OnRegisterProperties() AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.OnRecycle() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OnGroundVCPrefabName public override string OnGroundVCPrefabName { get; } Property Value string Methods GetBaitAdjectivesProperty() public IBaitAdjectives GetBaitAdjectivesProperty() Returns IBaitAdjectives GetConfigTable() protected override ConfigTable GetConfigTable() Returns ConfigTable OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected override void OnEntityRegisterAdditionalProperties() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnGetDisplayNameBeforeFirstPicked(string) protected override string OnGetDisplayNameBeforeFirstPicked(string originalDisplayName) Parameters originalDisplayName string Returns string"
  },
  "api/Runtime.RawMaterials.Model.Base.RawMaterialModel.html": {
    "href": "api/Runtime.RawMaterials.Model.Base.RawMaterialModel.html",
    "title": "Class RawMaterialModel | Capstone documentation",
    "keywords": "Class RawMaterialModel Namespace Runtime.RawMaterials.Model.Base Assembly MainGame.dll public class RawMaterialModel : GameResourceModel<IRawMaterialEntity>, IRawMaterialModel, IGameResourceModel<IRawMaterialEntity>, IEntityModel<IRawMaterialEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel EntityModel<IRawMaterialEntity> GameResourceModel<IRawMaterialEntity> RawMaterialModel Implements IRawMaterialModel IGameResourceModel<IRawMaterialEntity> IEntityModel<IRawMaterialEntity> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members GameResourceModel<IRawMaterialEntity>.OnInit() GameResourceModel<IRawMaterialEntity>.OnEntityBuilt(IRawMaterialEntity) GameResourceModel<IRawMaterialEntity>.GetAnyResource(string) GameResourceModel<IRawMaterialEntity>.RemoveEntity(string) EntityModel<IRawMaterialEntity>.entityBuilderFactory EntityModel<IRawMaterialEntity>.entities EntityModel<IRawMaterialEntity>.GetEntity(string) EntityModel<IRawMaterialEntity>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRawMaterialBuilder<T>(bool) public RawMaterialBuilder<T> GetRawMaterialBuilder<T>(bool addToModelOnceBuilt = true) where T : class, IRawMaterialEntity, new() Parameters addToModelOnceBuilt bool Returns RawMaterialBuilder<T> Type Parameters T"
  },
  "api/Runtime.RawMaterials.Model.Base.html": {
    "href": "api/Runtime.RawMaterials.Model.Base.html",
    "title": "Namespace Runtime.RawMaterials.Model.Base | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.Model.Base Classes RawMaterialEntity<T> RawMaterialModel Interfaces IRawMaterialEntity IRawMaterialModel"
  },
  "api/Runtime.RawMaterials.Model.Builder.RawMaterialBuilder-1.html": {
    "href": "api/Runtime.RawMaterials.Model.Builder.RawMaterialBuilder-1.html",
    "title": "Class RawMaterialBuilder<T> | Capstone documentation",
    "keywords": "Class RawMaterialBuilder<T> Namespace Runtime.RawMaterials.Model.Builder Assembly MainGame.dll public class RawMaterialBuilder<T> : ResourceBuilder<RawMaterialBuilder<T>, T>, IPoolable where T : class, IEntity, new() Type Parameters T Inheritance object EntityBuilder<RawMaterialBuilder<T>, T> ResourceBuilder<RawMaterialBuilder<T>, T> RawMaterialBuilder<T> Implements IPoolable Inherited Members ResourceBuilder<RawMaterialBuilder<T>, T>.AddBaitAdjective(BaitAdjective) ResourceBuilder<RawMaterialBuilder<T>, T>.SetMaxStack(int, IPropertyDependencyModifier<int>) EntityBuilder<RawMaterialBuilder<T>, T>.Entity EntityBuilder<RawMaterialBuilder<T>, T>.onEntityCreated EntityBuilder<RawMaterialBuilder<T>, T>.RegisterOnEntityCreated(Action<T>) EntityBuilder<RawMaterialBuilder<T>, T>.CheckEntity() EntityBuilder<RawMaterialBuilder<T>, T>.OverrideName(string) EntityBuilder<RawMaterialBuilder<T>, T>.FromConfig(ConfigTable) EntityBuilder<RawMaterialBuilder<T>, T>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<RawMaterialBuilder<T>, T>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<RawMaterialBuilder<T>, T>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<RawMaterialBuilder<T>, T>.AddTag(TagName, int) EntityBuilder<RawMaterialBuilder<T>, T>.Build() EntityBuilder<RawMaterialBuilder<T>, T>.OnRecycled() EntityBuilder<RawMaterialBuilder<T>, T>.IsRecycled EntityBuilder<RawMaterialBuilder<T>, T>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Allocate(int) public static RawMaterialBuilder<T> Allocate(int rarity) Parameters rarity int Returns RawMaterialBuilder<T> RecycleToCache() public override void RecycleToCache()"
  },
  "api/Runtime.RawMaterials.Model.Builder.html": {
    "href": "api/Runtime.RawMaterials.Model.Builder.html",
    "title": "Namespace Runtime.RawMaterials.Model.Builder | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.Model.Builder Classes RawMaterialBuilder<T>"
  },
  "api/Runtime.RawMaterials.Model.Instances.CommonRawMaterialEntity.html": {
    "href": "api/Runtime.RawMaterials.Model.Instances.CommonRawMaterialEntity.html",
    "title": "Class CommonRawMaterialEntity | Capstone documentation",
    "keywords": "Class CommonRawMaterialEntity Namespace Runtime.RawMaterials.Model.Instances Assembly MainGame.dll public class CommonRawMaterialEntity : RawMaterialEntity<CommonRawMaterialEntity>, IRawMaterialEntity, IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity ResourceEntity<CommonRawMaterialEntity> RawMaterialEntity<CommonRawMaterialEntity> CommonRawMaterialEntity Implements IRawMaterialEntity IResourceEntity IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members RawMaterialEntity<CommonRawMaterialEntity>.OnEntityStart(bool) RawMaterialEntity<CommonRawMaterialEntity>.OnEntityRegisterAdditionalProperties() RawMaterialEntity<CommonRawMaterialEntity>.GetConfigTable() RawMaterialEntity<CommonRawMaterialEntity>.GetBaitAdjectivesProperty() RawMaterialEntity<CommonRawMaterialEntity>.OnGetDisplayNameBeforeFirstPicked(string) RawMaterialEntity<CommonRawMaterialEntity>.OnGroundVCPrefabName ResourceEntity<CommonRawMaterialEntity>.pickedBefore ResourceEntity<CommonRawMaterialEntity>.OnDoRecycle() ResourceEntity<CommonRawMaterialEntity>.GetMaxStackProperty() ResourceEntity<CommonRawMaterialEntity>.GetDisplayName() ResourceEntity<CommonRawMaterialEntity>.OnPicked() ResourceEntity<CommonRawMaterialEntity>.InventoryVCPrefabName ResourceEntity<CommonRawMaterialEntity>.InHandVCPrefabName AbstractBasicEntity.OnRegisterProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommonRawMaterialEntity() public CommonRawMaterialEntity() Properties EntityName public override string EntityName { get; set; } Property Value string Methods GetResourceCategory() public override ResourceCategory GetResourceCategory() Returns ResourceCategory OnGetDescription(string) Return the description of the entity protected override string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnRecycle() public override void OnRecycle() OnRegisterCustomProperties() protected override ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[]"
  },
  "api/Runtime.RawMaterials.Model.Instances.html": {
    "href": "api/Runtime.RawMaterials.Model.Instances.html",
    "title": "Namespace Runtime.RawMaterials.Model.Instances | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.Model.Instances Classes CommonRawMaterialEntity"
  },
  "api/Runtime.RawMaterials.Model.html": {
    "href": "api/Runtime.RawMaterials.Model.html",
    "title": "Namespace Runtime.RawMaterials.Model | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.Model Namespaces Runtime.RawMaterials.Model.Base Runtime.RawMaterials.Model.Builder Runtime.RawMaterials.Model.Instances"
  },
  "api/Runtime.RawMaterials.ViewControllers.AbstractPickableRawMaterialViewController-1.html": {
    "href": "api/Runtime.RawMaterials.ViewControllers.AbstractPickableRawMaterialViewController-1.html",
    "title": "Class AbstractPickableRawMaterialViewController<T> | Capstone documentation",
    "keywords": "Class AbstractPickableRawMaterialViewController<T> Namespace Runtime.RawMaterials.ViewControllers Assembly MainGame.dll public abstract class AbstractPickableRawMaterialViewController<T> : AbstractPickableResourceViewController<T>, IPickableResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture where T : class, IRawMaterialEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractResourceViewController<T> AbstractPickableResourceViewController<T> AbstractPickableRawMaterialViewController<T> Implements IPickableResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived CommonPickableRawMaterialViewController Inherited Members AbstractPickableResourceViewController<T>.inventoryModel AbstractPickableResourceViewController<T>.isAbsorbing AbstractPickableResourceViewController<T>.entityAutoRemovalTimeWhenNoAbsorb AbstractPickableResourceViewController<T>.OnEntityStart() AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.HandleAbsorb(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnStartAbsorb() AbstractPickableResourceViewController<T>.OnRecycled() AbstractPickableResourceViewController<T>.HoldAbsorb AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnPointByCrosshair() AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnEntityRecycled(IEntity) AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields rawMaterialModel protected IRawMaterialModel rawMaterialModel Field Value IRawMaterialModel selfColliders protected Collider[] selfColliders Field Value Collider[] Methods Awake() protected override void Awake() OnBuildNewEntity() protected override IEntity OnBuildNewEntity() Returns IEntity OnInitResourceEntity(RawMaterialBuilder<T>) protected abstract IEntity OnInitResourceEntity(RawMaterialBuilder<T> builder) Parameters builder RawMaterialBuilder<T> Returns IEntity"
  },
  "api/Runtime.RawMaterials.ViewControllers.Instances.CommonPickableRawMaterialViewController.html": {
    "href": "api/Runtime.RawMaterials.ViewControllers.Instances.CommonPickableRawMaterialViewController.html",
    "title": "Class CommonPickableRawMaterialViewController | Capstone documentation",
    "keywords": "Class CommonPickableRawMaterialViewController Namespace Runtime.RawMaterials.ViewControllers.Instances Assembly MainGame.dll You can use ths class to quickly create a common raw material VC. In this case, your entity data created from the config sheet will be a CommonRawMaterialEntity public class CommonPickableRawMaterialViewController : AbstractPickableRawMaterialViewController<CommonRawMaterialEntity>, IPickableResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<CommonRawMaterialEntity> AbstractBasicEntityViewController<CommonRawMaterialEntity> AbstractResourceViewController<CommonRawMaterialEntity> AbstractPickableResourceViewController<CommonRawMaterialEntity> AbstractPickableRawMaterialViewController<CommonRawMaterialEntity> CommonPickableRawMaterialViewController Implements IPickableResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members AbstractPickableRawMaterialViewController<CommonRawMaterialEntity>.rawMaterialModel AbstractPickableRawMaterialViewController<CommonRawMaterialEntity>.selfColliders AbstractPickableRawMaterialViewController<CommonRawMaterialEntity>.Awake() AbstractPickableRawMaterialViewController<CommonRawMaterialEntity>.OnBuildNewEntity() AbstractPickableResourceViewController<CommonRawMaterialEntity>.inventoryModel AbstractPickableResourceViewController<CommonRawMaterialEntity>.isAbsorbing AbstractPickableResourceViewController<CommonRawMaterialEntity>.entityAutoRemovalTimeWhenNoAbsorb AbstractPickableResourceViewController<CommonRawMaterialEntity>.OnEntityStart() AbstractPickableResourceViewController<CommonRawMaterialEntity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<CommonRawMaterialEntity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<CommonRawMaterialEntity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<CommonRawMaterialEntity>.HandleAbsorb(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<CommonRawMaterialEntity>.OnRecycled() AbstractPickableResourceViewController<CommonRawMaterialEntity>.HoldAbsorb AbstractBasicEntityViewController<CommonRawMaterialEntity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<CommonRawMaterialEntity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<CommonRawMaterialEntity>.ID AbstractEntityViewController<CommonRawMaterialEntity>.autoCreateNewEntityWhenStart AbstractEntityViewController<CommonRawMaterialEntity>.showNameTagWhenPointed AbstractEntityViewController<CommonRawMaterialEntity>.nameTagFollowTransform AbstractEntityViewController<CommonRawMaterialEntity>.nameTagPrefabName AbstractEntityViewController<CommonRawMaterialEntity>.hasInteractiveHint AbstractEntityViewController<CommonRawMaterialEntity>.interactiveHintPrefabName AbstractEntityViewController<CommonRawMaterialEntity>.interactiveHintLocalizedKey AbstractEntityViewController<CommonRawMaterialEntity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<CommonRawMaterialEntity>.entityModel AbstractEntityViewController<CommonRawMaterialEntity>.BoundEntity AbstractEntityViewController<CommonRawMaterialEntity>.properties AbstractEntityViewController<CommonRawMaterialEntity>.OnStartOrAllocate() AbstractEntityViewController<CommonRawMaterialEntity>.InitWithID(string) AbstractEntityViewController<CommonRawMaterialEntity>.OnPointByCrosshair() AbstractEntityViewController<CommonRawMaterialEntity>.OnUnPointByCrosshair() AbstractEntityViewController<CommonRawMaterialEntity>.OnEntityRecycled(IEntity) AbstractEntityViewController<CommonRawMaterialEntity>.OnStart() AbstractEntityViewController<CommonRawMaterialEntity>.OnBindProperty() AbstractEntityViewController<CommonRawMaterialEntity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<CommonRawMaterialEntity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<CommonRawMaterialEntity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<CommonRawMaterialEntity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<CommonRawMaterialEntity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<CommonRawMaterialEntity>.ForceUpdatePropertyBindings() AbstractEntityViewController<CommonRawMaterialEntity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<CommonRawMaterialEntity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBindEntityProperty() protected override void OnBindEntityProperty() OnInitResourceEntity(RawMaterialBuilder<CommonRawMaterialEntity>) protected override IEntity OnInitResourceEntity(RawMaterialBuilder<CommonRawMaterialEntity> builder) Parameters builder RawMaterialBuilder<CommonRawMaterialEntity> Returns IEntity OnStartAbsorb() protected override void OnStartAbsorb()"
  },
  "api/Runtime.RawMaterials.ViewControllers.Instances.html": {
    "href": "api/Runtime.RawMaterials.ViewControllers.Instances.html",
    "title": "Namespace Runtime.RawMaterials.ViewControllers.Instances | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.ViewControllers.Instances Classes CommonPickableRawMaterialViewController You can use ths class to quickly create a common raw material VC. In this case, your entity data created from the config sheet will be a CommonRawMaterialEntity"
  },
  "api/Runtime.RawMaterials.ViewControllers.html": {
    "href": "api/Runtime.RawMaterials.ViewControllers.html",
    "title": "Namespace Runtime.RawMaterials.ViewControllers | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials.ViewControllers Namespaces Runtime.RawMaterials.ViewControllers.Instances Classes AbstractPickableRawMaterialViewController<T>"
  },
  "api/Runtime.RawMaterials.html": {
    "href": "api/Runtime.RawMaterials.html",
    "title": "Namespace Runtime.RawMaterials | Capstone documentation",
    "keywords": "Namespace Runtime.RawMaterials Namespaces Runtime.RawMaterials.Model Runtime.RawMaterials.ViewControllers"
  },
  "api/Runtime.Temporary.AbstractProjectile.html": {
    "href": "api/Runtime.Temporary.AbstractProjectile.html",
    "title": "Class AbstractProjectile | Capstone documentation",
    "keywords": "Class AbstractProjectile Namespace Runtime.Temporary Assembly MainGame.dll public abstract class AbstractProjectile : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AbstractProjectile Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields damage public float damage Field Value float explosionEffect public ParticleSystem explosionEffect Field Value ParticleSystem force protected Vector2 force Field Value Vector2 splatterSound public AudioClip splatterSound Field Value AudioClip Properties Shooter public GameObject Shooter { get; set; } Property Value GameObject Methods DestroyProjectile() protected void DestroyProjectile() SetForce(Vector2) public abstract void SetForce(Vector2 force) Parameters force Vector2 Events OnProjectileDestroyed public event Action<AbstractProjectile> OnProjectileDestroyed Event Type Action<AbstractProjectile>"
  },
  "api/Runtime.Temporary.EnemyBomb.html": {
    "href": "api/Runtime.Temporary.EnemyBomb.html",
    "title": "Class EnemyBomb | Capstone documentation",
    "keywords": "Class EnemyBomb Namespace Runtime.Temporary Assembly MainGame.dll public class EnemyBomb : AbstractBulletViewController, IBulletViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject AbstractBulletViewController EnemyBomb Implements IBulletViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Inherited Members AbstractBulletViewController.CurrentFaction AbstractBulletViewController.Damage AbstractBulletViewController.hitBox AbstractBulletViewController.bulletOwner AbstractBulletViewController.Init(Faction, int, GameObject) AbstractBulletViewController.OnStartOrAllocate() AbstractBulletViewController.CheckHit(HitData) AbstractBulletViewController.HitResponse(HitData) AbstractBulletViewController.OnRecycled() AbstractBulletViewController.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields curve public AnimationCurve curve Field Value AnimationCurve travelTime public float travelTime Field Value float Methods Init(Transform, float, Faction, int, GameObject) public void Init(Transform target, float tTime, Faction faction, int damage, GameObject bulletOwner) Parameters target Transform tTime float faction Faction damage int bulletOwner GameObject OnBulletRecycled() protected override void OnBulletRecycled() OnHitResponse(HitData) protected override void OnHitResponse(HitData data) Parameters data HitData"
  },
  "api/Runtime.Temporary.MeteorBehavior.html": {
    "href": "api/Runtime.Temporary.MeteorBehavior.html",
    "title": "Class MeteorBehavior | Capstone documentation",
    "keywords": "Class MeteorBehavior Namespace Runtime.Temporary Assembly MainGame.dll public class MeteorBehavior : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MeteorBehavior Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.Temporary.Player.PlayerMovement.HeadBobData.html": {
    "href": "api/Runtime.Temporary.Player.PlayerMovement.HeadBobData.html",
    "title": "Struct PlayerMovement.HeadBobData | Capstone documentation",
    "keywords": "Struct PlayerMovement.HeadBobData Namespace Runtime.Temporary.Player Assembly MainGame.dll [Serializable] public struct PlayerMovement.HeadBobData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HeadBobData(float, float) public HeadBobData(float amplitudeGain, float frequencyGain) Parameters amplitudeGain float frequencyGain float Fields AmplitudeGain public float AmplitudeGain Field Value float FrequencyGain public float FrequencyGain Field Value float"
  },
  "api/Runtime.Temporary.Player.PlayerMovement.MovementState.html": {
    "href": "api/Runtime.Temporary.Player.PlayerMovement.MovementState.html",
    "title": "Enum PlayerMovement.MovementState | Capstone documentation",
    "keywords": "Enum PlayerMovement.MovementState Namespace Runtime.Temporary.Player Assembly MainGame.dll public enum PlayerMovement.MovementState Fields air = 3 sliding = 2 sprinting = 1 walking = 0 wallrunning = 4"
  },
  "api/Runtime.Temporary.Player.PlayerMovement.html": {
    "href": "api/Runtime.Temporary.Player.PlayerMovement.html",
    "title": "Class PlayerMovement | Capstone documentation",
    "keywords": "Class PlayerMovement Namespace Runtime.Temporary.Player Assembly MainGame.dll [RequireComponent(typeof(Rigidbody))] public class PlayerMovement : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> PlayerMovement Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields accelForce [Header(\"Movement\")] public float accelForce Field Value float additionalGravity public float additionalGravity Field Value float airMultiplier public float airMultiplier Field Value float exitWallTime public float exitWallTime Field Value float gravityCounterForce public float gravityCounterForce Field Value float groundDrag public float groundDrag Field Value float jumpCooldown public float jumpCooldown Field Value float jumpForce public float jumpForce Field Value float maxSlideTime [Header(\"Sliding\")] public float maxSlideTime Field Value float maxSlopeAngle [Header(\"Slope Handling\")] public float maxSlopeAngle Field Value float maxWallRunTime public float maxWallRunTime Field Value float model public Transform model Field Value Transform orientation public Transform orientation Field Value Transform playerHeight [Header(\"Ground Check\")] public float playerHeight Field Value float rb public Rigidbody rb Field Value Rigidbody slideForce public float slideForce Field Value float slideSpeed public float slideSpeed Field Value float slideYScale public float slideYScale Field Value float sliding public bool sliding Field Value bool slopeIncreaseMultiplier public float slopeIncreaseMultiplier Field Value float speedIncreaseMultiplier public float speedIncreaseMultiplier Field Value float sprintSpeed public float sprintSpeed Field Value float state public PlayerMovement.MovementState state Field Value PlayerMovement.MovementState useGravity public bool useGravity Field Value bool walkSpeed public float walkSpeed Field Value float wallCheckDistance public float wallCheckDistance Field Value float wallJumpSideForce public float wallJumpSideForce Field Value float wallJumpUpForce public float wallJumpUpForce Field Value float wallRunForce public float wallRunForce Field Value float whatIsWall [Header(\"Wallrunning\")] public LayerMask whatIsWall Field Value LayerMask Methods ChangeBobVars(HeadBobData) public void ChangeBobVars(PlayerMovement.HeadBobData data) Parameters data PlayerMovement.HeadBobData ChangeBobVars(float, float) public void ChangeBobVars(float frequencyGain, float amplitudeGain) Parameters frequencyGain float amplitudeGain float DoCamTilt(float) public void DoCamTilt(float zTilt) Parameters zTilt float GetSlopeMoveDirection(Vector3) public Vector3 GetSlopeMoveDirection(Vector3 direction) Parameters direction Vector3 Returns Vector3 OnSlope() public bool OnSlope() Returns bool SlopeTooBig() public bool SlopeTooBig() Returns bool"
  },
  "api/Runtime.Temporary.Player.html": {
    "href": "api/Runtime.Temporary.Player.html",
    "title": "Namespace Runtime.Temporary.Player | Capstone documentation",
    "keywords": "Namespace Runtime.Temporary.Player Classes PlayerMovement Structs PlayerMovement.HeadBobData Enums PlayerMovement.MovementState"
  },
  "api/Runtime.Temporary.PlayerController.html": {
    "href": "api/Runtime.Temporary.PlayerController.html",
    "title": "Class PlayerController | Capstone documentation",
    "keywords": "Class PlayerController Namespace Runtime.Temporary Assembly MainGame.dll public class PlayerController : AbstractCreatureViewController<PlayerEntity>, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHurtResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<PlayerEntity> AbstractBasicEntityViewController<PlayerEntity> AbstractDamagableViewController<PlayerEntity> AbstractCreatureViewController<PlayerEntity> PlayerController Implements IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHurtResponder IBelongToFaction Inherited Members AbstractDamagableViewController<PlayerEntity>.OnStart() AbstractDamagableViewController<PlayerEntity>.CurrentFaction AbstractDamagableViewController<PlayerEntity>.CheckHurt(HitData) AbstractDamagableViewController<PlayerEntity>.HurtResponse(HitData) AbstractBasicEntityViewController<PlayerEntity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<PlayerEntity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<PlayerEntity>.ID AbstractEntityViewController<PlayerEntity>.autoCreateNewEntityWhenStart AbstractEntityViewController<PlayerEntity>.showNameTagWhenPointed AbstractEntityViewController<PlayerEntity>.nameTagFollowTransform AbstractEntityViewController<PlayerEntity>.nameTagPrefabName AbstractEntityViewController<PlayerEntity>.hasInteractiveHint AbstractEntityViewController<PlayerEntity>.interactiveHintPrefabName AbstractEntityViewController<PlayerEntity>.interactiveHintLocalizedKey AbstractEntityViewController<PlayerEntity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<PlayerEntity>.entityModel AbstractEntityViewController<PlayerEntity>.BoundEntity AbstractEntityViewController<PlayerEntity>.properties AbstractEntityViewController<PlayerEntity>.Awake() AbstractEntityViewController<PlayerEntity>.OnStartOrAllocate() AbstractEntityViewController<PlayerEntity>.InitWithID(string) AbstractEntityViewController<PlayerEntity>.OnPointByCrosshair() AbstractEntityViewController<PlayerEntity>.OnUnPointByCrosshair() AbstractEntityViewController<PlayerEntity>.OnEntityRecycled(IEntity) AbstractEntityViewController<PlayerEntity>.OnRecycled() AbstractEntityViewController<PlayerEntity>.OnBindProperty() AbstractEntityViewController<PlayerEntity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<PlayerEntity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<PlayerEntity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<PlayerEntity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<PlayerEntity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<PlayerEntity>.ForceUpdatePropertyBindings() AbstractEntityViewController<PlayerEntity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<PlayerEntity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractEntityViewController<PlayerEntity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<PlayerEntity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<PlayerEntity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBindEntityProperty() protected override void OnBindEntityProperty() OnBuildNewEntity() protected override IEntity OnBuildNewEntity() Returns IEntity OnEntityDie(IBelongToFaction) When the entity dies, this method will be called protected override void OnEntityDie(IBelongToFaction damagedealer) Parameters damagedealer IBelongToFaction OnEntityHeal(int, int, IBelongToFaction) When the entity is healed, this method will be called protected override void OnEntityHeal(int heal, int currenthealth, IBelongToFaction healer) Parameters heal int currenthealth int healer IBelongToFaction OnEntityStart() protected override void OnEntityStart() OnEntityTakeDamage(int, int, IBelongToFaction) When the entity takes damage, this method will be called protected override void OnEntityTakeDamage(int damage, int currenthealth, IBelongToFaction damagedealer) Parameters damage int currenthealth int damagedealer IBelongToFaction The dealer of the damage. You can access its faction from it"
  },
  "api/Runtime.Temporary.SceneDebug.html": {
    "href": "api/Runtime.Temporary.SceneDebug.html",
    "title": "Class SceneDebug | Capstone documentation",
    "keywords": "Class SceneDebug Namespace Runtime.Temporary Assembly MainGame.dll public class SceneDebug : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneDebug Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields boss public TestEnity boss Field Value TestEnity player public TestEnity player Field Value TestEnity"
  },
  "api/Runtime.Temporary.TestEnity.html": {
    "href": "api/Runtime.Temporary.TestEnity.html",
    "title": "Class TestEnity | Capstone documentation",
    "keywords": "Class TestEnity Namespace Runtime.Temporary Assembly MainGame.dll public class TestEnity : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestEnity Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields curHealth public int curHealth Field Value int m_name public string m_name Field Value string maxHealth public int maxHealth Field Value int Methods HealFull() public void HealFull() TakeDamage(int) public void TakeDamage(int damage) Parameters damage int"
  },
  "api/Runtime.Temporary.Weapon.BasicGun.html": {
    "href": "api/Runtime.Temporary.Weapon.BasicGun.html",
    "title": "Class BasicGun | Capstone documentation",
    "keywords": "Class BasicGun Namespace Runtime.Temporary.Weapon Assembly MainGame.dll public class BasicGun : MonoBehaviour, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour BasicGun Implements IHitResponder IBelongToFaction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields cam public Camera cam Field Value Camera currentCD protected float currentCD Field Value float launchPoint [Header(\"Gun General Settings\")] [SerializeField] protected Transform launchPoint Field Value Transform layer public LayerMask layer Field Value LayerMask lr protected LineRenderer lr Field Value LineRenderer proj [Header(\"Projectile Settings\")] [SerializeField] protected ProjectileStats proj Field Value ProjectileStats projectile public GameObject projectile Field Value GameObject range [SerializeField] public float range Field Value float shootCD [Header(\"Stats\")] [SerializeField] protected float shootCD Field Value float type public WeaponType type Field Value WeaponType Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; protected set; } Property Value BindableProperty<Faction> Damage public int Damage { get; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool DrawLine(Vector3, Vector3) public void DrawLine(Vector3 start, Vector3 end) Parameters start Vector3 end Vector3 FixedUpdate() public void FixedUpdate() HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData Shoot() public void Shoot() Start() public void Start() Update() public void Update()"
  },
  "api/Runtime.Temporary.Weapon.Bullet.html": {
    "href": "api/Runtime.Temporary.Weapon.Bullet.html",
    "title": "Class Bullet | Capstone documentation",
    "keywords": "Class Bullet Namespace Runtime.Temporary.Weapon Assembly MainGame.dll public class Bullet : MonoBehaviour, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour Bullet Implements IHitResponder IBelongToFaction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; protected set; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData Init(Faction, int) public void Init(Faction faction, int damage) Parameters faction Faction damage int"
  },
  "api/Runtime.Temporary.Weapon.BulletDeprecated.html": {
    "href": "api/Runtime.Temporary.Weapon.BulletDeprecated.html",
    "title": "Class BulletDeprecated | Capstone documentation",
    "keywords": "Class BulletDeprecated Namespace Runtime.Temporary.Weapon Assembly MainGame.dll public class BulletDeprecated : MonoBehaviour, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour BulletDeprecated Implements IHitResponder IBelongToFaction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; protected set; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData Init(Faction, int) public void Init(Faction faction, int damage) Parameters faction Faction damage int"
  },
  "api/Runtime.Temporary.Weapon.Explosion.html": {
    "href": "api/Runtime.Temporary.Weapon.Explosion.html",
    "title": "Class Explosion | Capstone documentation",
    "keywords": "Class Explosion Namespace Runtime.Temporary.Weapon Assembly MainGame.dll public class Explosion : MonoBehaviour, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour Explosion Implements IHitResponder IBelongToFaction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; protected set; } Property Value BindableProperty<Faction> Damage public int Damage { get; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData Start() public void Start()"
  },
  "api/Runtime.Temporary.Weapon.ProjectileStats.html": {
    "href": "api/Runtime.Temporary.Weapon.ProjectileStats.html",
    "title": "Struct ProjectileStats | Capstone documentation",
    "keywords": "Struct ProjectileStats Namespace Runtime.Temporary.Weapon Assembly MainGame.dll [Serializable] public struct ProjectileStats Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ProjectileStats(int, float) public ProjectileStats(int dmg, float spd) Parameters dmg int spd float Fields damage public int damage Field Value int speed public float speed Field Value float"
  },
  "api/Runtime.Temporary.Weapon.WeaponType.html": {
    "href": "api/Runtime.Temporary.Weapon.WeaponType.html",
    "title": "Enum WeaponType | Capstone documentation",
    "keywords": "Enum WeaponType Namespace Runtime.Temporary.Weapon Assembly MainGame.dll public enum WeaponType Fields Hitscan = 0 Projectile = 1"
  },
  "api/Runtime.Temporary.Weapon.html": {
    "href": "api/Runtime.Temporary.Weapon.html",
    "title": "Namespace Runtime.Temporary.Weapon | Capstone documentation",
    "keywords": "Namespace Runtime.Temporary.Weapon Classes BasicGun BulletDeprecated Explosion Structs ProjectileStats Enums WeaponType"
  },
  "api/Runtime.Temporary.html": {
    "href": "api/Runtime.Temporary.html",
    "title": "Namespace Runtime.Temporary | Capstone documentation",
    "keywords": "Namespace Runtime.Temporary Namespaces Runtime.Temporary.Player Runtime.Temporary.Weapon Classes AbstractProjectile EnemyBomb MeteorBehavior PlayerController SceneDebug TestEnity"
  },
  "api/Runtime.UI.HealthBar.NormalEnemyHealthBar.html": {
    "href": "api/Runtime.UI.HealthBar.NormalEnemyHealthBar.html",
    "title": "Class NormalEnemyHealthBar | Capstone documentation",
    "keywords": "Class NormalEnemyHealthBar Namespace Runtime.UI.HealthBar Assembly MainGame.dll public class NormalEnemyHealthBar : HealthBar, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> HealthBar NormalEnemyHealthBar Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnHealthBarDestroyed() public override void OnHealthBarDestroyed() OnSetEntity(IDamageable) public override void OnSetEntity(IDamageable entity) Parameters entity IDamageable"
  },
  "api/Runtime.UI.HealthBar.html": {
    "href": "api/Runtime.UI.HealthBar.html",
    "title": "Namespace Runtime.UI.HealthBar | Capstone documentation",
    "keywords": "Namespace Runtime.UI.HealthBar Classes NormalEnemyHealthBar"
  },
  "api/Runtime.UI.MainUI.html": {
    "href": "api/Runtime.UI.MainUI.html",
    "title": "Class MainUI | Capstone documentation",
    "keywords": "Class MainUI Namespace Runtime.UI Assembly MainGame.dll public class MainUI : UIRoot, IUIRoot, IPanelContainer, IPanel, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour UIRoot MainUI Implements IUIRoot IPanelContainer IPanel IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members UIRoot.currentMainPanel UIRoot.IsOnTop() UIRoot.Parent UIRoot.PanelType UIRoot.DefaultSelectedGameObjectWhenFocused UIRoot.IsOpening UIRoot.Children UIRoot.GetTopChild() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Awake() protected override void Awake() ClosePanel(IPanel, bool) Close the current panel. If the current panel is the main panel, then it will return to the last opened main panel. public override void ClosePanel(IPanel panel, bool alsoCloseChild = true) Parameters panel IPanel alsoCloseChild bool GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture OpenOrClose<T>(IPanelContainer, UIMsg, bool, bool, string) public T OpenOrClose<T>(IPanelContainer parent, UIMsg message, bool switchUIPlayerMap = true, bool createNewIfNotExist = true, string assetNameIfNotExist = \"\") where T : class, IPanel Parameters parent IPanelContainer message UIMsg switchUIPlayerMap bool createNewIfNotExist bool assetNameIfNotExist string Returns T Type Parameters T Open<T>(IPanelContainer, UIMsg, bool, string) Open a panel. This will always open a currently closed panel. If no closed panel exists or no pre-existing panel exists, it will try to create a new one (if createNewIfNotExist is true) public override T Open<T>(IPanelContainer parent, UIMsg message, bool createNewIfNotExist = true, string assetNameIfNotExist = \"\") where T : class, IPanel Parameters parent IPanelContainer The parent of this panel. Leave null if the parent is the root UI. Note that MainPanels can only have the root UI as its parent message UIMsg The message to be passed to the panel createNewIfNotExist bool assetNameIfNotExist string The asset name in the asset bundle for the panel. Used to create the panel if it doesn't exist in the scene Returns T Type Parameters T"
  },
  "api/Runtime.UI.NameTags.GeneralNameTag.html": {
    "href": "api/Runtime.UI.NameTags.GeneralNameTag.html",
    "title": "Class GeneralNameTag | Capstone documentation",
    "keywords": "Class GeneralNameTag Namespace Runtime.UI.NameTags Assembly MainGame.dll public class GeneralNameTag : MonoBehaviour, INameTag Inheritance object Object Component Behaviour MonoBehaviour GeneralNameTag Implements INameTag Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields nameText protected TMP_Text nameText Field Value TMP_Text rectTr protected RectTransform rectTr Field Value RectTransform Methods SetName(string) public void SetName(string name) Parameters name string"
  },
  "api/Runtime.UI.NameTags.HUDCategory.html": {
    "href": "api/Runtime.UI.NameTags.HUDCategory.html",
    "title": "Enum HUDCategory | Capstone documentation",
    "keywords": "Enum HUDCategory Namespace Runtime.UI.NameTags Assembly MainGame.dll public enum HUDCategory Fields HealthBar = 3 InteractiveTag = 1 NameTag = 0 SlotDescription = 2"
  },
  "api/Runtime.UI.NameTags.HUDElementInfo.html": {
    "href": "api/Runtime.UI.NameTags.HUDElementInfo.html",
    "title": "Class HUDElementInfo | Capstone documentation",
    "keywords": "Class HUDElementInfo Namespace Runtime.UI.NameTags Assembly MainGame.dll public class HUDElementInfo Inheritance object HUDElementInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HUDElementInfo() public HUDElementInfo() Fields followDict public Dictionary<Transform, (GameObject, bool)> followDict Field Value Dictionary<Transform, (GameObject, bool)> prefabPools public Dictionary<string, SafeGameObjectPool> prefabPools Field Value Dictionary<string, SafeGameObjectPool> Methods Despawn(Transform) public void Despawn(Transform targetFollow) Parameters targetFollow Transform GetOrCreate(Transform, Transform, string, bool) public (GameObject, bool) GetOrCreate(Transform targetFollow, Transform spawnedTransform, string prefabName, bool isWorld) Parameters targetFollow Transform spawnedTransform Transform prefabName string isWorld bool Returns (GameObject, bool)"
  },
  "api/Runtime.UI.NameTags.HUDManager.html": {
    "href": "api/Runtime.UI.NameTags.HUDManager.html",
    "title": "Class HUDManager | Capstone documentation",
    "keywords": "Class HUDManager Namespace Runtime.UI.NameTags Assembly MainGame.dll public class HUDManager : MonoBehaviour, ISingleton Inheritance object Object Component Behaviour MonoBehaviour HUDManager Implements ISingleton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Singleton public static HUDManager Singleton { get; } Property Value HUDManager Methods DespawnHUDElement(Transform, HUDCategory) public void DespawnHUDElement(Transform targetFollow, HUDCategory hudCategory) Parameters targetFollow Transform hudCategory HUDCategory OnSingletonInit() public void OnSingletonInit() SpawnHUDElement(Transform, string, HUDCategory, bool) Spawn an HUD element and follow the target public GameObject SpawnHUDElement(Transform targetFollow, string prefabName, HUDCategory hudCategory, bool isWorld) Parameters targetFollow Transform prefabName string The asset bundle name of the prefab hudCategory HUDCategory The type of the HUD element. No two HUD elements of the same type can follow the same target. To create a new HUD element type, add a new enum value to HUDCategory isWorld bool Returns GameObject"
  },
  "api/Runtime.UI.NameTags.INameTag.html": {
    "href": "api/Runtime.UI.NameTags.INameTag.html",
    "title": "Interface INameTag | Capstone documentation",
    "keywords": "Interface INameTag Namespace Runtime.UI.NameTags Assembly MainGame.dll public interface INameTag Methods SetName(string) void SetName(string name) Parameters name string"
  },
  "api/Runtime.UI.NameTags.html": {
    "href": "api/Runtime.UI.NameTags.html",
    "title": "Namespace Runtime.UI.NameTags | Capstone documentation",
    "keywords": "Namespace Runtime.UI.NameTags Classes GeneralNameTag HUDElementInfo HUDManager Interfaces INameTag Enums HUDCategory"
  },
  "api/Runtime.UI.html": {
    "href": "api/Runtime.UI.html",
    "title": "Namespace Runtime.UI | Capstone documentation",
    "keywords": "Namespace Runtime.UI Namespaces Runtime.UI.HealthBar Runtime.UI.NameTags Classes MainUI"
  },
  "api/Runtime.Utilities.AnimationEvents.AnimationSMBManager.html": {
    "href": "api/Runtime.Utilities.AnimationEvents.AnimationSMBManager.html",
    "title": "Class AnimationSMBManager | Capstone documentation",
    "keywords": "Class AnimationSMBManager Namespace Runtime.Utilities.AnimationEvents Assembly MainGame.dll public class AnimationSMBManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AnimationSMBManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Event public UnityEvent<string> Event { get; } Property Value UnityEvent<string>"
  },
  "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Event.AnimationSMB_EventData.html": {
    "href": "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Event.AnimationSMB_EventData.html",
    "title": "Class AnimationSMB_Event.AnimationSMB_EventData | Capstone documentation",
    "keywords": "Class AnimationSMB_Event.AnimationSMB_EventData Namespace Runtime.Utilities.AnimationEvents Assembly MainGame.dll This is the data that will be used to invoke an event. Is visible in the inspector. [Serializable] public class AnimationSMB_Event.AnimationSMB_EventData Inheritance object AnimationSMB_Event.AnimationSMB_EventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields activated public bool activated Field Value bool eventName public string eventName Field Value string onUpdateFrame public float onUpdateFrame Field Value float timing public AnimationSMB_Timing timing Field Value AnimationSMB_Timing"
  },
  "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Event.html": {
    "href": "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Event.html",
    "title": "Class AnimationSMB_Event | Capstone documentation",
    "keywords": "Class AnimationSMB_Event Namespace Runtime.Utilities.AnimationEvents Assembly MainGame.dll AnimationSMB_Event can be placed on an animation state in the animator to invoke an event at a specific time in an animation clip. public class AnimationSMB_Event : StateMachineBehaviour Inheritance object Object ScriptableObject StateMachineBehaviour AnimationSMB_Event Inherited Members StateMachineBehaviour.OnStateMove(Animator, AnimatorStateInfo, int) StateMachineBehaviour.OnStateIK(Animator, AnimatorStateInfo, int) StateMachineBehaviour.OnStateMachineEnter(Animator, int) StateMachineBehaviour.OnStateMachineExit(Animator, int) StateMachineBehaviour.OnStateEnter(Animator, AnimatorStateInfo, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateUpdate(Animator, AnimatorStateInfo, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateExit(Animator, AnimatorStateInfo, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateMove(Animator, AnimatorStateInfo, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateIK(Animator, AnimatorStateInfo, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateMachineEnter(Animator, int, AnimatorControllerPlayable) StateMachineBehaviour.OnStateMachineExit(Animator, int, AnimatorControllerPlayable) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields events public List<AnimationSMB_Event.AnimationSMB_EventData> events Field Value List<AnimationSMB_Event.AnimationSMB_EventData> Methods OnStateEnter(Animator, AnimatorStateInfo, int) Called when the animation state is starts, frame=0. public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters animator Animator stateInfo AnimatorStateInfo layerIndex int OnStateExit(Animator, AnimatorStateInfo, int) Called when the animation state ends, frame=totalFrames. public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters animator Animator stateInfo AnimatorStateInfo layerIndex int OnStateUpdate(Animator, AnimatorStateInfo, int) Called on specific frames of the animation. Depends on the frame set in the inspector. public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters animator Animator stateInfo AnimatorStateInfo layerIndex int"
  },
  "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Timing.html": {
    "href": "api/Runtime.Utilities.AnimationEvents.AnimationSMB_Timing.html",
    "title": "Enum AnimationSMB_Timing | Capstone documentation",
    "keywords": "Enum AnimationSMB_Timing Namespace Runtime.Utilities.AnimationEvents Assembly MainGame.dll public enum AnimationSMB_Timing Fields OnEnd = 3 OnEnter = 0 OnExit = 2 OnUpdate = 1"
  },
  "api/Runtime.Utilities.AnimationEvents.html": {
    "href": "api/Runtime.Utilities.AnimationEvents.html",
    "title": "Namespace Runtime.Utilities.AnimationEvents | Capstone documentation",
    "keywords": "Namespace Runtime.Utilities.AnimationEvents Classes AnimationSMBManager AnimationSMB_Event AnimationSMB_Event can be placed on an animation state in the animator to invoke an event at a specific time in an animation clip. AnimationSMB_Event.AnimationSMB_EventData This is the data that will be used to invoke an event. Is visible in the inspector. Enums AnimationSMB_Timing"
  },
  "api/Runtime.Utilities.BindableDictExtensionUnregisterOnAdd-2.html": {
    "href": "api/Runtime.Utilities.BindableDictExtensionUnregisterOnAdd-2.html",
    "title": "Class BindableDictExtensionUnregisterOnAdd<TKey, TValue> | Capstone documentation",
    "keywords": "Class BindableDictExtensionUnregisterOnAdd<TKey, TValue> Namespace Runtime.Utilities Assembly MainGame.dll public class BindableDictExtensionUnregisterOnAdd<TKey, TValue> : IUnRegister Type Parameters TKey TValue Inheritance object BindableDictExtensionUnregisterOnAdd<TKey, TValue> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindableDictExtensionUnregisterOnAdd(BindableDictionary<TKey, TValue>, Action<TKey, TValue>) public BindableDictExtensionUnregisterOnAdd(BindableDictionary<TKey, TValue> bindable, Action<TKey, TValue> onValueChanged) Parameters bindable BindableDictionary<TKey, TValue> onValueChanged Action<TKey, TValue> Properties Bindable public BindableDictionary<TKey, TValue> Bindable { get; set; } Property Value BindableDictionary<TKey, TValue> OnValueChanged public Action<TKey, TValue> OnValueChanged { get; set; } Property Value Action<TKey, TValue> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.BindableDictExtensionUnregisterOnRemove-2.html": {
    "href": "api/Runtime.Utilities.BindableDictExtensionUnregisterOnRemove-2.html",
    "title": "Class BindableDictExtensionUnregisterOnRemove<TKey, TValue> | Capstone documentation",
    "keywords": "Class BindableDictExtensionUnregisterOnRemove<TKey, TValue> Namespace Runtime.Utilities Assembly MainGame.dll public class BindableDictExtensionUnregisterOnRemove<TKey, TValue> : IUnRegister Type Parameters TKey TValue Inheritance object BindableDictExtensionUnregisterOnRemove<TKey, TValue> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindableDictExtensionUnregisterOnRemove(BindableDictionary<TKey, TValue>, Action<TKey, TValue>) public BindableDictExtensionUnregisterOnRemove(BindableDictionary<TKey, TValue> bindable, Action<TKey, TValue> onValueChanged) Parameters bindable BindableDictionary<TKey, TValue> onValueChanged Action<TKey, TValue> Properties Bindable public BindableDictionary<TKey, TValue> Bindable { get; set; } Property Value BindableDictionary<TKey, TValue> OnValueChanged public Action<TKey, TValue> OnValueChanged { get; set; } Property Value Action<TKey, TValue> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.BindableDictionary-2.html": {
    "href": "api/Runtime.Utilities.BindableDictionary-2.html",
    "title": "Class BindableDictionary<TKey, TValue> | Capstone documentation",
    "keywords": "Class BindableDictionary<TKey, TValue> Namespace Runtime.Utilities Assembly MainGame.dll public class BindableDictionary<TKey, TValue> : BindableProperty<Dictionary<TKey, TValue>>, IBindableProperty, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters TKey TValue Inheritance object BindableProperty<Dictionary<TKey, TValue>> BindableDictionary<TKey, TValue> Implements IBindableProperty IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Inherited Members BindableProperty<Dictionary<TKey, TValue>>.Value BindableProperty<Dictionary<TKey, TValue>>.RegisterOnValueChanged(Action<Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.RegisterWithInitValue(Action<Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.RegisterWithInitValue(Action<Dictionary<TKey, TValue>, Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.ToString() BindableProperty<Dictionary<TKey, TValue>>.RegisterOnValueChanged(Action<Dictionary<TKey, TValue>, Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.UnRegisterOnValueChanged(Action<Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.UnRegisterOnValueChanged(Action<Dictionary<TKey, TValue>, Dictionary<TKey, TValue>>) BindableProperty<Dictionary<TKey, TValue>>.UnRegisterAll() BindableProperty<Dictionary<TKey, TValue>>.ObjectValue BindableProperty<Dictionary<TKey, TValue>>.RegisterOnObjectValueChaned(Action<object>) BindableProperty<Dictionary<TKey, TValue>>.RegisterOnObjectValueChaned(Action<object, object>) BindableProperty<Dictionary<TKey, TValue>>.RegisterWithInitObject(Action<object>) BindableProperty<Dictionary<TKey, TValue>>.RegisterWithInitObject(Action<object, object>) BindableProperty<Dictionary<TKey, TValue>>.UnRegisterOnObjectValueChanged(Action<object>) BindableProperty<Dictionary<TKey, TValue>>.UnRegisterOnObjectValueChanged(Action<object, object>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindableDictionary(Dictionary<TKey, TValue>) public BindableDictionary(Dictionary<TKey, TValue> defaultValue = null) Parameters defaultValue Dictionary<TKey, TValue> Properties this[TKey] public TValue this[TKey key] { get; set; } Parameters key TKey Property Value TValue Methods AddAndInvoke(KeyValuePair<TKey, TValue>) public void AddAndInvoke(KeyValuePair<TKey, TValue> item) Parameters item KeyValuePair<TKey, TValue> AddAndInvoke(TKey, TValue) public void AddAndInvoke(TKey key, TValue value) Parameters key TKey value TValue ClearAndInvoke() public void ClearAndInvoke() GetEnumerator() public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns IEnumerator<KeyValuePair<TKey, TValue>> RegisterOnAdd(Action<TKey, TValue>) public BindableDictExtensionUnregisterOnAdd<TKey, TValue> RegisterOnAdd(Action<TKey, TValue> onAdd) Parameters onAdd Action<TKey, TValue> Returns BindableDictExtensionUnregisterOnAdd<TKey, TValue> RegisterOnRemove(Action<TKey, TValue>) public BindableDictExtensionUnregisterOnRemove<TKey, TValue> RegisterOnRemove(Action<TKey, TValue> onRemove) Parameters onRemove Action<TKey, TValue> Returns BindableDictExtensionUnregisterOnRemove<TKey, TValue> RemoveAndInvoke(KeyValuePair<TKey, TValue>) public void RemoveAndInvoke(KeyValuePair<TKey, TValue> item) Parameters item KeyValuePair<TKey, TValue> RemoveAndInvoke(TKey) public void RemoveAndInvoke(TKey key) Parameters key TKey UnRegisterOnAdd(Action<TKey, TValue>) public void UnRegisterOnAdd(Action<TKey, TValue> onAdd) Parameters onAdd Action<TKey, TValue> UnRegisterOnRemove(Action<TKey, TValue>) public void UnRegisterOnRemove(Action<TKey, TValue> onRemove) Parameters onRemove Action<TKey, TValue>"
  },
  "api/Runtime.Utilities.BindableHashset-1.html": {
    "href": "api/Runtime.Utilities.BindableHashset-1.html",
    "title": "Class BindableHashset<T> | Capstone documentation",
    "keywords": "Class BindableHashset<T> Namespace Runtime.Utilities Assembly MainGame.dll [Serializable] public class BindableHashset<T> : BindableProperty<HashSet<T>>, IBindableProperty, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object BindableProperty<HashSet<T>> BindableHashset<T> Implements IBindableProperty IEnumerable<T> IEnumerable Inherited Members BindableProperty<HashSet<T>>.Value BindableProperty<HashSet<T>>.RegisterOnValueChanged(Action<HashSet<T>>) BindableProperty<HashSet<T>>.RegisterWithInitValue(Action<HashSet<T>>) BindableProperty<HashSet<T>>.RegisterWithInitValue(Action<HashSet<T>, HashSet<T>>) BindableProperty<HashSet<T>>.ToString() BindableProperty<HashSet<T>>.RegisterOnValueChanged(Action<HashSet<T>, HashSet<T>>) BindableProperty<HashSet<T>>.UnRegisterOnValueChanged(Action<HashSet<T>>) BindableProperty<HashSet<T>>.UnRegisterOnValueChanged(Action<HashSet<T>, HashSet<T>>) BindableProperty<HashSet<T>>.UnRegisterAll() BindableProperty<HashSet<T>>.ObjectValue BindableProperty<HashSet<T>>.RegisterOnObjectValueChaned(Action<object>) BindableProperty<HashSet<T>>.RegisterOnObjectValueChaned(Action<object, object>) BindableProperty<HashSet<T>>.RegisterWithInitObject(Action<object>) BindableProperty<HashSet<T>>.RegisterWithInitObject(Action<object, object>) BindableProperty<HashSet<T>>.UnRegisterOnObjectValueChanged(Action<object>) BindableProperty<HashSet<T>>.UnRegisterOnObjectValueChanged(Action<object, object>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BindableHashset(HashSet<T>) public BindableHashset(HashSet<T> defaultValue = null) Parameters defaultValue HashSet<T> Properties Count public int Count { get; } Property Value int Methods AddAndInvoke(T) public void AddAndInvoke(T item) Parameters item T ClearAndInvoke() public void ClearAndInvoke() Contains(T) public bool Contains(T item) Parameters item T Returns bool GetEnumerator() public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> RegisterOnAdd(Action<T>) public IUnRegister RegisterOnAdd(Action<T> onAdd) Parameters onAdd Action<T> Returns IUnRegister RegisterOnRemove(Action<T>) public IUnRegister RegisterOnRemove(Action<T> onRemove) Parameters onRemove Action<T> Returns IUnRegister RemoveAndInvoke(T) public void RemoveAndInvoke(T item) Parameters item T UnRegisterOnAdd(Action<T>) public void UnRegisterOnAdd(Action<T> onAdd) Parameters onAdd Action<T> UnRegisterOnRemove(Action<T>) public void UnRegisterOnRemove(Action<T> onRemove) Parameters onRemove Action<T>"
  },
  "api/Runtime.Utilities.BindableHashsetExtensionUnregisterOnAdd-1.html": {
    "href": "api/Runtime.Utilities.BindableHashsetExtensionUnregisterOnAdd-1.html",
    "title": "Class BindableHashsetExtensionUnregisterOnAdd<T> | Capstone documentation",
    "keywords": "Class BindableHashsetExtensionUnregisterOnAdd<T> Namespace Runtime.Utilities Assembly MainGame.dll public class BindableHashsetExtensionUnregisterOnAdd<T> : IUnRegister Type Parameters T Inheritance object BindableHashsetExtensionUnregisterOnAdd<T> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindableHashsetExtensionUnregisterOnAdd(BindableHashset<T>, Action<T>) public BindableHashsetExtensionUnregisterOnAdd(BindableHashset<T> bindable, Action<T> onValueChanged) Parameters bindable BindableHashset<T> onValueChanged Action<T> Properties Bindable public BindableHashset<T> Bindable { get; set; } Property Value BindableHashset<T> OnValueChanged public Action<T> OnValueChanged { get; set; } Property Value Action<T> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.BindableHashsetExtensionUnregisterOnRemove-1.html": {
    "href": "api/Runtime.Utilities.BindableHashsetExtensionUnregisterOnRemove-1.html",
    "title": "Class BindableHashsetExtensionUnregisterOnRemove<T> | Capstone documentation",
    "keywords": "Class BindableHashsetExtensionUnregisterOnRemove<T> Namespace Runtime.Utilities Assembly MainGame.dll public class BindableHashsetExtensionUnregisterOnRemove<T> : IUnRegister Type Parameters T Inheritance object BindableHashsetExtensionUnregisterOnRemove<T> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindableHashsetExtensionUnregisterOnRemove(BindableHashset<T>, Action<T>) public BindableHashsetExtensionUnregisterOnRemove(BindableHashset<T> bindable, Action<T> onValueChanged) Parameters bindable BindableHashset<T> onValueChanged Action<T> Properties Bindable public BindableHashset<T> Bindable { get; set; } Property Value BindableHashset<T> OnValueChanged public Action<T> OnValueChanged { get; set; } Property Value Action<T> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.BindableList-1.html": {
    "href": "api/Runtime.Utilities.BindableList-1.html",
    "title": "Class BindableList<T> | Capstone documentation",
    "keywords": "Class BindableList<T> Namespace Runtime.Utilities Assembly MainGame.dll [Serializable] public class BindableList<T> : BindableProperty<List<T>>, IBindableProperty, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object BindableProperty<List<T>> BindableList<T> Implements IBindableProperty IEnumerable<T> IEnumerable Inherited Members BindableProperty<List<T>>.Value BindableProperty<List<T>>.RegisterOnValueChanged(Action<List<T>>) BindableProperty<List<T>>.RegisterWithInitValue(Action<List<T>>) BindableProperty<List<T>>.RegisterWithInitValue(Action<List<T>, List<T>>) BindableProperty<List<T>>.ToString() BindableProperty<List<T>>.RegisterOnValueChanged(Action<List<T>, List<T>>) BindableProperty<List<T>>.UnRegisterOnValueChanged(Action<List<T>>) BindableProperty<List<T>>.UnRegisterOnValueChanged(Action<List<T>, List<T>>) BindableProperty<List<T>>.UnRegisterAll() BindableProperty<List<T>>.ObjectValue BindableProperty<List<T>>.RegisterOnObjectValueChaned(Action<object>) BindableProperty<List<T>>.RegisterOnObjectValueChaned(Action<object, object>) BindableProperty<List<T>>.RegisterWithInitObject(Action<object>) BindableProperty<List<T>>.RegisterWithInitObject(Action<object, object>) BindableProperty<List<T>>.UnRegisterOnObjectValueChanged(Action<object>) BindableProperty<List<T>>.UnRegisterOnObjectValueChanged(Action<object, object>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BindableList(List<T>) public BindableList(List<T> defaultValue = null) Parameters defaultValue List<T> Properties this[int] public T this[int index] { get; set; } Parameters index int Property Value T Methods AddAndInvoke(T) public void AddAndInvoke(T item) Parameters item T AddRangeAndInvoke(IEnumerable<T>) public void AddRangeAndInvoke(IEnumerable<T> collection) Parameters collection IEnumerable<T> ClearAndInvoke() public void ClearAndInvoke() GetEnumerator() public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> InsertAndInvoke(int, T) public void InsertAndInvoke(int index, T item) Parameters index int item T InsertRangeAndInvoke(int, IEnumerable<T>) public void InsertRangeAndInvoke(int index, IEnumerable<T> collection) Parameters index int collection IEnumerable<T> RegisterOnAdd(Action<T>) public IUnRegister RegisterOnAdd(Action<T> onAdd) Parameters onAdd Action<T> Returns IUnRegister RegisterOnRemove(Action<T>) public IUnRegister RegisterOnRemove(Action<T> onRemove) Parameters onRemove Action<T> Returns IUnRegister RemoveAndInvoke(T) public bool RemoveAndInvoke(T item) Parameters item T Returns bool RemoveAtAndInvoke(int) public void RemoveAtAndInvoke(int index) Parameters index int UnRegisterOnAdd(Action<T>) public void UnRegisterOnAdd(Action<T> onAdd) Parameters onAdd Action<T> UnRegisterOnRemove(Action<T>) public void UnRegisterOnRemove(Action<T> onRemove) Parameters onRemove Action<T>"
  },
  "api/Runtime.Utilities.BindablePropertyExtensionUnregisterOnAdd-1.html": {
    "href": "api/Runtime.Utilities.BindablePropertyExtensionUnregisterOnAdd-1.html",
    "title": "Class BindablePropertyExtensionUnregisterOnAdd<T> | Capstone documentation",
    "keywords": "Class BindablePropertyExtensionUnregisterOnAdd<T> Namespace Runtime.Utilities Assembly MainGame.dll public class BindablePropertyExtensionUnregisterOnAdd<T> : IUnRegister Type Parameters T Inheritance object BindablePropertyExtensionUnregisterOnAdd<T> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindablePropertyExtensionUnregisterOnAdd(BindableList<T>, Action<T>) public BindablePropertyExtensionUnregisterOnAdd(BindableList<T> bindable, Action<T> onValueChanged) Parameters bindable BindableList<T> onValueChanged Action<T> Properties Bindable public BindableList<T> Bindable { get; set; } Property Value BindableList<T> OnValueChanged public Action<T> OnValueChanged { get; set; } Property Value Action<T> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.BindablePropertyExtensionUnregisterOnRemove-1.html": {
    "href": "api/Runtime.Utilities.BindablePropertyExtensionUnregisterOnRemove-1.html",
    "title": "Class BindablePropertyExtensionUnregisterOnRemove<T> | Capstone documentation",
    "keywords": "Class BindablePropertyExtensionUnregisterOnRemove<T> Namespace Runtime.Utilities Assembly MainGame.dll public class BindablePropertyExtensionUnregisterOnRemove<T> : IUnRegister Type Parameters T Inheritance object BindablePropertyExtensionUnregisterOnRemove<T> Implements IUnRegister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods UnRegisterExtension.UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Constructors BindablePropertyExtensionUnregisterOnRemove(BindableList<T>, Action<T>) public BindablePropertyExtensionUnregisterOnRemove(BindableList<T> bindable, Action<T> onValueChanged) Parameters bindable BindableList<T> onValueChanged Action<T> Properties Bindable public BindableList<T> Bindable { get; set; } Property Value BindableList<T> OnValueChanged public Action<T> OnValueChanged { get; set; } Property Value Action<T> Methods UnRegister() public void UnRegister()"
  },
  "api/Runtime.Utilities.Collision.HitBox.html": {
    "href": "api/Runtime.Utilities.Collision.HitBox.html",
    "title": "Class HitBox | Capstone documentation",
    "keywords": "Class HitBox Namespace Runtime.Utilities.Collision Assembly MainGame.dll Checks for collision using BoxCast. [RequireComponent(typeof(Collider))] [RequireComponent(typeof(TriggerCheck))] public class HitBox : MonoBehaviour, IHitDetector Inheritance object Object Component Behaviour MonoBehaviour HitBox Implements IHitDetector Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Damage public int Damage { get; protected set; } Property Value int HitResponder public IHitResponder HitResponder { get; set; } Property Value IHitResponder Methods CheckHit(HitDetectorInfo, int) Called every frame to check for BoxCast collision. Creates a HitData object that is sent to the HitResponder and HurtResponder, invoking their responses. public void CheckHit(HitDetectorInfo hitDetectorInfo = default, int damage = 0) Parameters hitDetectorInfo HitDetectorInfo damage int StartCheckingHits(int) public void StartCheckingHits(int damage) Parameters damage int StopCheckingHits() public void StopCheckingHits() TriggerCheckHit(Collider) public void TriggerCheckHit(Collider c) Parameters c Collider"
  },
  "api/Runtime.Utilities.Collision.HitData.html": {
    "href": "api/Runtime.Utilities.Collision.HitData.html",
    "title": "Class HitData | Capstone documentation",
    "keywords": "Class HitData Namespace Runtime.Utilities.Collision Assembly MainGame.dll Stores data about a detected collision. public class HitData : IPoolable Inheritance object HitData Implements IPoolable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attacker public IBelongToFaction Attacker Field Value IBelongToFaction Damage public int Damage Field Value int HitDetector public IHitDetector HitDetector Field Value IHitDetector HitDirectionNormalized public Vector3 HitDirectionNormalized Field Value Vector3 HitNormal public Vector3 HitNormal Field Value Vector3 HitPoint public Vector3 HitPoint Field Value Vector3 Hurtbox public IHurtbox Hurtbox Field Value IHurtbox Properties IsRecycled public bool IsRecycled { get; set; } Property Value bool Methods OnRecycled() public void OnRecycled() RecycleToCache() public void RecycleToCache() SetHitScanData(IHitResponder, IHurtbox, RaycastHit, IHitDetector) Sets the data of the hit. Used for HitScan. public HitData SetHitScanData(IHitResponder hitResponder, IHurtbox hurtbox, RaycastHit hit, IHitDetector hitDetector) Parameters hitResponder IHitResponder hurtbox IHurtbox hit RaycastHit hitDetector IHitDetector Returns HitData Returns HitData object. Validate() Checks if the HitData created is valid (doesn't hit itself, responders exist, etc. public bool Validate() Returns bool Returns true if valid HitData."
  },
  "api/Runtime.Utilities.Collision.HitDetectorInfo.html": {
    "href": "api/Runtime.Utilities.Collision.HitDetectorInfo.html",
    "title": "Struct HitDetectorInfo | Capstone documentation",
    "keywords": "Struct HitDetectorInfo Namespace Runtime.Utilities.Collision Assembly MainGame.dll Struct for storing data for CheckHit() in HitScan. public struct HitDetectorInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields camera public Camera camera Field Value Camera launchPoint public Transform launchPoint Field Value Transform layer public LayerMask layer Field Value LayerMask weapon public IWeaponEntity weapon Field Value IWeaponEntity"
  },
  "api/Runtime.Utilities.Collision.HitScan.html": {
    "href": "api/Runtime.Utilities.Collision.HitScan.html",
    "title": "Class HitScan | Capstone documentation",
    "keywords": "Class HitScan Namespace Runtime.Utilities.Collision Assembly MainGame.dll HitScan checks for collision using Raycast. public class HitScan : IHitDetector, IBelongToFaction, ICanGetUtility, IBelongToArchitecture Inheritance object HitScan Implements IHitDetector IBelongToFaction ICanGetUtility IBelongToArchitecture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HitScan(IHitResponder, Faction, TrailRenderer) public HitScan(IHitResponder hitResponder, Faction faction, TrailRenderer tr) Parameters hitResponder IHitResponder faction Faction tr TrailRenderer Fields bulletHoleDecal public GameObject bulletHoleDecal Field Value GameObject bulletHoleFadeTime public float bulletHoleFadeTime Field Value float bulletHolesPool public ObjectPool<GameObject> bulletHolesPool Field Value ObjectPool<GameObject> Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; protected set; } Property Value int HitResponder public IHitResponder HitResponder { get; set; } Property Value IHitResponder Methods CheckHit(HitDetectorInfo, int) Called every frame to check for Raycast collision. public void CheckHit(HitDetectorInfo hitDetectorInfo, int damage) Parameters hitDetectorInfo HitDetectorInfo damage int GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture"
  },
  "api/Runtime.Utilities.Collision.HurtBox.html": {
    "href": "api/Runtime.Utilities.Collision.HurtBox.html",
    "title": "Class HurtBox | Capstone documentation",
    "keywords": "Class HurtBox Namespace Runtime.Utilities.Collision Assembly MainGame.dll [RequireComponent(typeof(Collider))] public class HurtBox : MonoBehaviour, IHurtbox Inheritance object Object Component Behaviour MonoBehaviour HurtBox Implements IHurtbox Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties Active public bool Active { get; } Property Value bool DamageMultiplier public float DamageMultiplier { get; set; } Property Value float HurtResponder public IHurtResponder HurtResponder { get; set; } Property Value IHurtResponder Owner public GameObject Owner { get; } Property Value GameObject Transform public Transform Transform { get; } Property Value Transform Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool"
  },
  "api/Runtime.Utilities.Collision.IHitDetector.html": {
    "href": "api/Runtime.Utilities.Collision.IHitDetector.html",
    "title": "Interface IHitDetector | Capstone documentation",
    "keywords": "Interface IHitDetector Namespace Runtime.Utilities.Collision Assembly MainGame.dll Used by classes that check for collision: HitBox, HitScan, etc. public interface IHitDetector Properties Damage int Damage { get; } Property Value int HitResponder IHitResponder HitResponder { get; set; } Property Value IHitResponder Methods CheckHit(HitDetectorInfo, int) void CheckHit(HitDetectorInfo hitDetectorInfo, int damage) Parameters hitDetectorInfo HitDetectorInfo damage int"
  },
  "api/Runtime.Utilities.Collision.IHitResponder.html": {
    "href": "api/Runtime.Utilities.Collision.IHitResponder.html",
    "title": "Interface IHitResponder | Capstone documentation",
    "keywords": "Interface IHitResponder Namespace Runtime.Utilities.Collision Assembly MainGame.dll Place one a GameObject if it will hit other objects. public interface IHitResponder : IBelongToFaction Inherited Members IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) Methods CheckHit(HitData) bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) void HitResponse(HitData data) Parameters data HitData"
  },
  "api/Runtime.Utilities.Collision.IHurtResponder.html": {
    "href": "api/Runtime.Utilities.Collision.IHurtResponder.html",
    "title": "Interface IHurtResponder | Capstone documentation",
    "keywords": "Interface IHurtResponder Namespace Runtime.Utilities.Collision Assembly MainGame.dll Place one a GameObject if it will BE hit by other objects. public interface IHurtResponder : IBelongToFaction Inherited Members IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) Methods CheckHurt(HitData) bool CheckHurt(HitData data) Parameters data HitData Returns bool HurtResponse(HitData) void HurtResponse(HitData data) Parameters data HitData"
  },
  "api/Runtime.Utilities.Collision.IHurtbox.html": {
    "href": "api/Runtime.Utilities.Collision.IHurtbox.html",
    "title": "Interface IHurtbox | Capstone documentation",
    "keywords": "Interface IHurtbox Namespace Runtime.Utilities.Collision Assembly MainGame.dll Hurtbox interface. public interface IHurtbox Properties Active bool Active { get; } Property Value bool DamageMultiplier float DamageMultiplier { get; set; } Property Value float HurtResponder IHurtResponder HurtResponder { get; set; } Property Value IHurtResponder Owner GameObject Owner { get; } Property Value GameObject Transform Transform Transform { get; } Property Value Transform Methods CheckHit(HitData) bool CheckHit(HitData data) Parameters data HitData Returns bool"
  },
  "api/Runtime.Utilities.Collision.html": {
    "href": "api/Runtime.Utilities.Collision.html",
    "title": "Namespace Runtime.Utilities.Collision | Capstone documentation",
    "keywords": "Namespace Runtime.Utilities.Collision Classes HitBox Checks for collision using BoxCast. HitData Stores data about a detected collision. HitScan HitScan checks for collision using Raycast. HurtBox Structs HitDetectorInfo Struct for storing data for CheckHit() in HitScan. Interfaces IHitDetector Used by classes that check for collision: HitBox, HitScan, etc. IHitResponder Place one a GameObject if it will hit other objects. IHurtResponder Place one a GameObject if it will BE hit by other objects. IHurtbox Hurtbox interface."
  },
  "api/Runtime.Utilities.ConfigSheet.ConfigDatas.html": {
    "href": "api/Runtime.Utilities.ConfigSheet.ConfigDatas.html",
    "title": "Class ConfigDatas | Capstone documentation",
    "keywords": "Class ConfigDatas Namespace Runtime.Utilities.ConfigSheet Assembly MainGame.dll public class ConfigDatas : MikroSingleton<ConfigDatas>, ISingleton Inheritance object MikroSingleton<ConfigDatas> ConfigDatas Implements ISingleton Inherited Members MikroSingleton<ConfigDatas>.instance MikroSingleton<ConfigDatas>.Singleton object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnemyEntityConfigTable public ConfigTable EnemyEntityConfigTable { get; } Property Value ConfigTable EnemyEntityConfigTable_Test public ConfigTable EnemyEntityConfigTable_Test { get; } Property Value ConfigTable PlayerEntityConfigTable public ConfigTable PlayerEntityConfigTable { get; } Property Value ConfigTable RawMaterialEntityConfigTable public ConfigTable RawMaterialEntityConfigTable { get; } Property Value ConfigTable RawMaterialEntityConfigTable_Test public ConfigTable RawMaterialEntityConfigTable_Test { get; } Property Value ConfigTable WeaponEntityConfigTable public ConfigTable WeaponEntityConfigTable { get; } Property Value ConfigTable WeaponEntityConfigTable_Test public ConfigTable WeaponEntityConfigTable_Test { get; } Property Value ConfigTable Methods OnSingletonInit() public override void OnSingletonInit()"
  },
  "api/Runtime.Utilities.ConfigSheet.ConfigTable.html": {
    "href": "api/Runtime.Utilities.ConfigSheet.ConfigTable.html",
    "title": "Class ConfigTable | Capstone documentation",
    "keywords": "Class ConfigTable Namespace Runtime.Utilities.ConfigSheet Assembly MainGame.dll public class ConfigTable Inheritance object ConfigTable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfigTable(string, string, string) public ConfigTable(string docID, string sheetID, string localBackupName) Parameters docID string sheetID string localBackupName string Methods Get(string, string) public dynamic Get(string entityName, string key) Parameters entityName string key string Returns dynamic Get<T>(string, string) public T Get<T>(string entityName, string key) Parameters entityName string key string Returns T Type Parameters T"
  },
  "api/Runtime.Utilities.ConfigSheet.SerializationFactory.html": {
    "href": "api/Runtime.Utilities.ConfigSheet.SerializationFactory.html",
    "title": "Class SerializationFactory | Capstone documentation",
    "keywords": "Class SerializationFactory Namespace Runtime.Utilities.ConfigSheet Assembly MainGame.dll public class SerializationFactory : MikroSingleton<SerializationFactory>, ISingleton Inheritance object MikroSingleton<SerializationFactory> SerializationFactory Implements ISingleton Inherited Members MikroSingleton<SerializationFactory>.instance MikroSingleton<SerializationFactory>.Singleton object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnSingletonInit() public override void OnSingletonInit() ParseType(string) public Type ParseType(string typeName) Parameters typeName string Returns Type RegisterType(string, Type) public void RegisterType(string alias, Type actualType) Parameters alias string actualType Type"
  },
  "api/Runtime.Utilities.ConfigSheet.html": {
    "href": "api/Runtime.Utilities.ConfigSheet.html",
    "title": "Namespace Runtime.Utilities.ConfigSheet | Capstone documentation",
    "keywords": "Namespace Runtime.Utilities.ConfigSheet Classes ConfigDatas ConfigTable SerializationFactory"
  },
  "api/Runtime.Utilities.CoroutineRunner.html": {
    "href": "api/Runtime.Utilities.CoroutineRunner.html",
    "title": "Class CoroutineRunner | Capstone documentation",
    "keywords": "Class CoroutineRunner Namespace Runtime.Utilities Assembly MainGame.dll public class CoroutineRunner : MonoMikroSingleton<CoroutineRunner>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<CoroutineRunner> CoroutineRunner Implements ISingleton Inherited Members MonoMikroSingleton<CoroutineRunner>.instance MonoMikroSingleton<CoroutineRunner>.Exists MonoMikroSingleton<CoroutineRunner>.Singleton MonoMikroSingleton<CoroutineRunner>.OnBeforeDestroy() MonoMikroSingleton<CoroutineRunner>.OnSingletonInit() MonoMikroSingleton<CoroutineRunner>.onApplicationQuit MonoMikroSingleton<CoroutineRunner>.IsApplicationQuit MonoMikroSingleton<CoroutineRunner>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.Utilities.DOTweenExtension.html": {
    "href": "api/Runtime.Utilities.DOTweenExtension.html",
    "title": "Class DOTweenExtension | Capstone documentation",
    "keywords": "Class DOTweenExtension Namespace Runtime.Utilities Assembly MainGame.dll public static class DOTweenExtension Inheritance object DOTweenExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DOMoveInTargetLocalSpace(Transform, Transform, Vector3, float) public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveInTargetLocalSpace(this Transform transform, Transform target, Vector3 targetLocalEndPosition, float duration) Parameters transform Transform target Transform targetLocalEndPosition Vector3 duration float Returns TweenerCore<Vector3, Vector3, VectorOptions>"
  },
  "api/Runtime.Utilities.DefaultPoolableGameObjectSaved.html": {
    "href": "api/Runtime.Utilities.DefaultPoolableGameObjectSaved.html",
    "title": "Class DefaultPoolableGameObjectSaved | Capstone documentation",
    "keywords": "Class DefaultPoolableGameObjectSaved Namespace Runtime.Utilities Assembly MainGame.dll public class DefaultPoolableGameObjectSaved : DefaultPoolableGameObject, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Derived AbstractEntityViewController<T> Inherited Members DefaultPoolableGameObject.OnStartOrAllocate() DefaultPoolableGameObject.OnRecycled() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods Awake() protected virtual void Awake() GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture"
  },
  "api/Runtime.Utilities.UnRegisterAllocateTrigger.html": {
    "href": "api/Runtime.Utilities.UnRegisterAllocateTrigger.html",
    "title": "Class UnRegisterAllocateTrigger | Capstone documentation",
    "keywords": "Class UnRegisterAllocateTrigger Namespace Runtime.Utilities Assembly MainGame.dll public class UnRegisterAllocateTrigger : UnRegisterDestroyTrigger Inheritance object Object Component Behaviour MonoBehaviour UnRegisterDestroyTrigger UnRegisterAllocateTrigger Inherited Members UnRegisterDestroyTrigger.AddUnRegister(IUnRegister, bool) UnRegisterDestroyTrigger.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour)"
  },
  "api/Runtime.Utilities.UnRegisterExtension.html": {
    "href": "api/Runtime.Utilities.UnRegisterExtension.html",
    "title": "Class UnRegisterExtension | Capstone documentation",
    "keywords": "Class UnRegisterExtension Namespace Runtime.Utilities Assembly MainGame.dll public static class UnRegisterExtension Inheritance object UnRegisterExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UnRegisterWhenGameObjectDestroyedOrRecycled(IUnRegister, GameObject, bool) Unregister this listener when a specific gameObject is destroyed public static void UnRegisterWhenGameObjectDestroyedOrRecycled(this IUnRegister unRegister, GameObject gameObject, bool alsoUnRegisterWhenDisabled = false) Parameters unRegister IUnRegister gameObject GameObject alsoUnRegisterWhenDisabled bool"
  },
  "api/Runtime.Utilities.html": {
    "href": "api/Runtime.Utilities.html",
    "title": "Namespace Runtime.Utilities | Capstone documentation",
    "keywords": "Namespace Runtime.Utilities Namespaces Runtime.Utilities.AnimationEvents Runtime.Utilities.Collision Runtime.Utilities.ConfigSheet Classes BindableDictExtensionUnregisterOnAdd<TKey, TValue> BindableDictExtensionUnregisterOnRemove<TKey, TValue> BindableDictionary<TKey, TValue> BindableHashsetExtensionUnregisterOnAdd<T> BindableHashsetExtensionUnregisterOnRemove<T> BindableHashset<T> BindableList<T> BindablePropertyExtensionUnregisterOnAdd<T> BindablePropertyExtensionUnregisterOnRemove<T> CoroutineRunner DOTweenExtension DefaultPoolableGameObjectSaved UnRegisterAllocateTrigger UnRegisterExtension"
  },
  "api/Runtime.Weapons.GunRecoil.html": {
    "href": "api/Runtime.Weapons.GunRecoil.html",
    "title": "Class GunRecoil | Capstone documentation",
    "keywords": "Class GunRecoil Namespace Runtime.Weapons Assembly MainGame.dll public class GunRecoil : AbstractMikroController<MainGame>, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture Inheritance object Object Component Behaviour MonoBehaviour AbstractMikroController<MainGame> GunRecoil Implements IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods RecoilFire() public void RecoilFire()"
  },
  "api/Runtime.Weapons.Model.Base.IWeaponEntity.html": {
    "href": "api/Runtime.Weapons.Model.Base.IWeaponEntity.html",
    "title": "Interface IWeaponEntity | Capstone documentation",
    "keywords": "Interface IWeaponEntity Namespace Runtime.Weapons.Model.Base Assembly MainGame.dll public interface IWeaponEntity : IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inherited Members IResourceEntity.GetMaxStackProperty() IResourceEntity.OnPicked() IResourceEntity.GetResourceCategory() IResourceEntity.InventoryVCPrefabName IResourceEntity.OnGroundVCPrefabName IResourceEntity.InHandVCPrefabName IHaveCustomProperties.GetCustomProperties() IHaveCustomProperties.GetCustomDataValue(string, string) IHaveCustomProperties.GetCustomDataValue<T>(string, string) IHaveCustomProperties.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, object, object>) IHaveCustomProperties.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) IHaveCustomProperties.HasCustomProperty(string) IHaveTags.GetTagProperty() IEntity.EntityName IEntity.RegisterInitialProperty<T>(T) IEntity.RegisterTempProperty<T>(T, string, bool, bool) IEntity.GetProperty(PropertyName) IEntity.GetProperty(PropertyNameInfo) IEntity.GetProperty<T>() IEntity.GetProperty<T>(PropertyNameInfo) IEntity.GetProperty(Type) IEntity.HasProperty(PropertyNameInfo) IEntity.TryGetProperty(PropertyNameInfo, out IPropertyBase) IEntity.OnLoadFromSave() IEntity.Initialize() IEntity.UUID IEntity.OnAllocate() IEntity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) IEntity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) IEntity.LoadPropertyBaseValueFromConfig(ConfigTable) IEntity.OnStart(bool) IEntity.RegisterOnEntityRecycled(Action<IEntity>) IEntity.UnRegisterOnEntityRecycled(Action<IEntity>) IPoolable.OnRecycled() IPoolable.IsRecycled IPoolable.RecycleToCache() IHaveDescription.GetDescription() IHaveDisplayName.GetDisplayName() IBelongToArchitecture.GetArchitecture() Properties CurrentAmmo BindableProperty<int> CurrentAmmo { get; set; } Property Value BindableProperty<int> Methods GetAmmoSize() IAmmoSize GetAmmoSize() Returns IAmmoSize GetAttackSpeed() IAttackSpeed GetAttackSpeed() Returns IAttackSpeed GetBaseDamage() IBaseDamage GetBaseDamage() Returns IBaseDamage GetBulletSpeed() IBulletSpeed GetBulletSpeed() Returns IBulletSpeed GetBulletsPerShot() IBulletsPerShot GetBulletsPerShot() Returns IBulletsPerShot GetChargeSpeed() IChargeSpeed GetChargeSpeed() Returns IChargeSpeed GetRange() IRange GetRange() Returns IRange GetRecoil() IRecoil GetRecoil() Returns IRecoil GetReloadSpeed() IReloadSpeed GetReloadSpeed() Returns IReloadSpeed GetScopeRecoil() IScopeRecoil GetScopeRecoil() Returns IScopeRecoil GetSpread() ISpread GetSpread() Returns ISpread OnRecoil(bool) void OnRecoil(bool isScopedIn) Parameters isScopedIn bool Reload() void Reload()"
  },
  "api/Runtime.Weapons.Model.Base.IWeaponModel.html": {
    "href": "api/Runtime.Weapons.Model.Base.IWeaponModel.html",
    "title": "Interface IWeaponModel | Capstone documentation",
    "keywords": "Interface IWeaponModel Namespace Runtime.Weapons.Model.Base Assembly MainGame.dll public interface IWeaponModel : IGameResourceModel<IWeaponEntity>, IEntityModel<IWeaponEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inherited Members IGameResourceModel<IWeaponEntity>.GetAnyResource(string) IEntityModel<IWeaponEntity>.GetEntity(string) IEntityModel.RemoveEntity(string) IEntityModel.EntityCount IModel.Init() ICanSetArchitecture.SetArchitecture(IArchitecture) IBelongToArchitecture.GetArchitecture() ISavableModel.OnLoad(string) ISavableModel.OnSave(string) ISavableModel.IsFirstTimeCreated Methods GetWeaponBuilder<T>(bool) WeaponBuilder<T> GetWeaponBuilder<T>(bool addToModelOnceBuilt = true) where T : class, IWeaponEntity, new() Parameters addToModelOnceBuilt bool Returns WeaponBuilder<T> Type Parameters T"
  },
  "api/Runtime.Weapons.Model.Base.OnWeaponRecoilEvent.html": {
    "href": "api/Runtime.Weapons.Model.Base.OnWeaponRecoilEvent.html",
    "title": "Struct OnWeaponRecoilEvent | Capstone documentation",
    "keywords": "Struct OnWeaponRecoilEvent Namespace Runtime.Weapons.Model.Base Assembly MainGame.dll public struct OnWeaponRecoilEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields recoilVector public Vector3 recoilVector Field Value Vector3 returnSpeed public float returnSpeed Field Value float snappiness public float snappiness Field Value float"
  },
  "api/Runtime.Weapons.Model.Base.WeaponEntity-1.html": {
    "href": "api/Runtime.Weapons.Model.Base.WeaponEntity-1.html",
    "title": "Class WeaponEntity<T> | Capstone documentation",
    "keywords": "Class WeaponEntity<T> Namespace Runtime.Weapons.Model.Base Assembly MainGame.dll public abstract class WeaponEntity<T> : ResourceEntity<T>, IWeaponEntity, IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture where T : WeaponEntity<T>, new() Type Parameters T Inheritance object Entity AbstractBasicEntity ResourceEntity<T> WeaponEntity<T> Implements IWeaponEntity IResourceEntity IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Derived RustyPistolEntity Inherited Members ResourceEntity<T>.pickedBefore ResourceEntity<T>.GetMaxStackProperty() ResourceEntity<T>.GetDisplayName() ResourceEntity<T>.OnPicked() ResourceEntity<T>.InventoryVCPrefabName ResourceEntity<T>.OnGroundVCPrefabName ResourceEntity<T>.InHandVCPrefabName AbstractBasicEntity.OnRegisterProperties() AbstractBasicEntity.OnRegisterCustomProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.EntityName Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.OnGetDescription(string) Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentAmmo public BindableProperty<int> CurrentAmmo { get; set; } Property Value BindableProperty<int> Methods GetAmmoSize() public IAmmoSize GetAmmoSize() Returns IAmmoSize GetAttackSpeed() public IAttackSpeed GetAttackSpeed() Returns IAttackSpeed GetBaseDamage() public IBaseDamage GetBaseDamage() Returns IBaseDamage GetBulletSpeed() public IBulletSpeed GetBulletSpeed() Returns IBulletSpeed GetBulletsPerShot() public IBulletsPerShot GetBulletsPerShot() Returns IBulletsPerShot GetChargeSpeed() public IChargeSpeed GetChargeSpeed() Returns IChargeSpeed GetConfigTable() protected override ConfigTable GetConfigTable() Returns ConfigTable GetRange() public IRange GetRange() Returns IRange GetRecoil() public IRecoil GetRecoil() Returns IRecoil GetReloadSpeed() public IReloadSpeed GetReloadSpeed() Returns IReloadSpeed GetResourceCategory() public override ResourceCategory GetResourceCategory() Returns ResourceCategory GetScopeRecoil() public IScopeRecoil GetScopeRecoil() Returns IScopeRecoil GetSpread() public ISpread GetSpread() Returns ISpread OnDoRecycle() public override void OnDoRecycle() OnEntityRegisterAdditionalProperties() A place to register additional properties, normally empty. Recommended to register custom properties instead. protected override void OnEntityRegisterAdditionalProperties() OnEntityStart(bool) After the entity is built, or loaded from save, this will be called protected override void OnEntityStart(bool isLoadedFromSave) Parameters isLoadedFromSave bool OnGetDisplayNameBeforeFirstPicked(string) protected override string OnGetDisplayNameBeforeFirstPicked(string originalDisplayName) Parameters originalDisplayName string Returns string OnRecoil(bool) public void OnRecoil(bool isScopedIn) Parameters isScopedIn bool OnRecycle() public override void OnRecycle() Reload() public void Reload()"
  },
  "api/Runtime.Weapons.Model.Base.WeaponModel.html": {
    "href": "api/Runtime.Weapons.Model.Base.WeaponModel.html",
    "title": "Class WeaponModel | Capstone documentation",
    "keywords": "Class WeaponModel Namespace Runtime.Weapons.Model.Base Assembly MainGame.dll public class WeaponModel : GameResourceModel<IWeaponEntity>, IWeaponModel, IGameResourceModel<IWeaponEntity>, IEntityModel<IWeaponEntity>, IEntityModel, IModel, ICanSetArchitecture, ICanGetUtility, ICanSendEvent, IBelongToArchitecture, ISavableModel Inheritance object AbstractModel AbstractSavableModel EntityModel<IWeaponEntity> GameResourceModel<IWeaponEntity> WeaponModel Implements IWeaponModel IGameResourceModel<IWeaponEntity> IEntityModel<IWeaponEntity> IEntityModel IModel ICanSetArchitecture ICanGetUtility ICanSendEvent IBelongToArchitecture ISavableModel Inherited Members GameResourceModel<IWeaponEntity>.OnEntityBuilt(IWeaponEntity) GameResourceModel<IWeaponEntity>.GetAnyResource(string) GameResourceModel<IWeaponEntity>.RemoveEntity(string) EntityModel<IWeaponEntity>.entityBuilderFactory EntityModel<IWeaponEntity>.entities EntityModel<IWeaponEntity>.GetEntity(string) EntityModel<IWeaponEntity>.EntityCount AbstractSavableModel.Save(string) AbstractSavableModel.OnLoad(string) AbstractSavableModel.OnSave(string) AbstractSavableModel.IsFirstTimeCreated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetWeaponBuilder<T>(bool) public WeaponBuilder<T> GetWeaponBuilder<T>(bool addToModelOnceBuilt = true) where T : class, IWeaponEntity, new() Parameters addToModelOnceBuilt bool Returns WeaponBuilder<T> Type Parameters T OnInit() protected override void OnInit()"
  },
  "api/Runtime.Weapons.Model.Base.html": {
    "href": "api/Runtime.Weapons.Model.Base.html",
    "title": "Namespace Runtime.Weapons.Model.Base | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.Model.Base Classes WeaponEntity<T> WeaponModel Structs OnWeaponRecoilEvent Interfaces IWeaponEntity IWeaponModel"
  },
  "api/Runtime.Weapons.Model.Builders.WeaponBuilder-1.html": {
    "href": "api/Runtime.Weapons.Model.Builders.WeaponBuilder-1.html",
    "title": "Class WeaponBuilder<T> | Capstone documentation",
    "keywords": "Class WeaponBuilder<T> Namespace Runtime.Weapons.Model.Builders Assembly MainGame.dll public class WeaponBuilder<T> : EntityBuilder<WeaponBuilder<T>, T>, IPoolable where T : class, IEntity, new() Type Parameters T Inheritance object EntityBuilder<WeaponBuilder<T>, T> WeaponBuilder<T> Implements IPoolable Inherited Members EntityBuilder<WeaponBuilder<T>, T>.Entity EntityBuilder<WeaponBuilder<T>, T>.onEntityCreated EntityBuilder<WeaponBuilder<T>, T>.RegisterOnEntityCreated(Action<T>) EntityBuilder<WeaponBuilder<T>, T>.CheckEntity() EntityBuilder<WeaponBuilder<T>, T>.OverrideName(string) EntityBuilder<WeaponBuilder<T>, T>.FromConfig(ConfigTable) EntityBuilder<WeaponBuilder<T>, T>.SetProperty<ValueType>(PropertyNameInfo, ValueType, IPropertyDependencyModifier<ValueType>) EntityBuilder<WeaponBuilder<T>, T>.SetModifier<ValueType>(PropertyNameInfo, IPropertyDependencyModifier<ValueType>) EntityBuilder<WeaponBuilder<T>, T>.SetDependencies(PropertyNameInfo, PropertyNameInfo[]) EntityBuilder<WeaponBuilder<T>, T>.AddTag(TagName, int) EntityBuilder<WeaponBuilder<T>, T>.Build() EntityBuilder<WeaponBuilder<T>, T>.OnRecycled() EntityBuilder<WeaponBuilder<T>, T>.IsRecycled EntityBuilder<WeaponBuilder<T>, T>.RecycleToCache() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WeaponBuilder() public WeaponBuilder() Methods Allocate(int) public static WeaponBuilder<T> Allocate(int rarity) Parameters rarity int Returns WeaponBuilder<T> RecycleToCache() public override void RecycleToCache() SetAllBasics(int) public WeaponBuilder<T> SetAllBasics(int baseDamage) Parameters baseDamage int Returns WeaponBuilder<T> SetAllBasicsModifiers(IPropertyDependencyModifier<int>) public WeaponBuilder<T> SetAllBasicsModifiers(IPropertyDependencyModifier<int> baseDamage) Parameters baseDamage IPropertyDependencyModifier<int> Returns WeaponBuilder<T> SetBaseDamage(int, IPropertyDependencyModifier<int>) public WeaponBuilder<T> SetBaseDamage(int baseDamage, IPropertyDependencyModifier<int> modifier = null) Parameters baseDamage int modifier IPropertyDependencyModifier<int> Returns WeaponBuilder<T> SetBaseDamageModifier(IPropertyDependencyModifier<int>) public WeaponBuilder<T> SetBaseDamageModifier(IPropertyDependencyModifier<int> modifier = null) Parameters modifier IPropertyDependencyModifier<int> Returns WeaponBuilder<T>"
  },
  "api/Runtime.Weapons.Model.Builders.html": {
    "href": "api/Runtime.Weapons.Model.Builders.html",
    "title": "Namespace Runtime.Weapons.Model.Builders | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.Model.Builders Classes WeaponBuilder<T>"
  },
  "api/Runtime.Weapons.Model.Properties.AmmoSize.html": {
    "href": "api/Runtime.Weapons.Model.Properties.AmmoSize.html",
    "title": "Class AmmoSize | Capstone documentation",
    "keywords": "Class AmmoSize Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class AmmoSize : AbstractLoadFromConfigProperty<int>, IAmmoSize, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> AmmoSize Implements IAmmoSize IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.AmmoSizeDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.AmmoSizeDefaultModifier.html",
    "title": "Class AmmoSizeDefaultModifier | Capstone documentation",
    "keywords": "Class AmmoSizeDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class AmmoSizeDefaultModifier : PropertyDependencyModifier<int>, IPropertyDependencyModifier<int> Inheritance object PropertyDependencyModifier<int> AmmoSizeDefaultModifier Implements IPropertyDependencyModifier<int> Inherited Members PropertyDependencyModifier<int>.dependenciesInType PropertyDependencyModifier<int>.Modify(int, IPropertyBase[], string, string) PropertyDependencyModifier<int>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<int>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(int) public override int OnModify(int propertyValue) Parameters propertyValue int Returns int"
  },
  "api/Runtime.Weapons.Model.Properties.AttackSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.AttackSpeed.html",
    "title": "Class AttackSpeed | Capstone documentation",
    "keywords": "Class AttackSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class AttackSpeed : AbstractLoadFromConfigProperty<float>, IAttackSpeed, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> AttackSpeed Implements IAttackSpeed IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.AttackSpeedDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.AttackSpeedDefaultModifier.html",
    "title": "Class AttackSpeedDefaultModifier | Capstone documentation",
    "keywords": "Class AttackSpeedDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class AttackSpeedDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> AttackSpeedDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.BaseDamage.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BaseDamage.html",
    "title": "Class BaseDamage | Capstone documentation",
    "keywords": "Class BaseDamage Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BaseDamage : AbstractLoadFromConfigProperty<int>, IBaseDamage, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> BaseDamage Implements IBaseDamage IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.BaseDamageDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BaseDamageDefaultModifier.html",
    "title": "Class BaseDamageDefaultModifier | Capstone documentation",
    "keywords": "Class BaseDamageDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BaseDamageDefaultModifier : PropertyDependencyModifier<int>, IPropertyDependencyModifier<int> Inheritance object PropertyDependencyModifier<int> BaseDamageDefaultModifier Implements IPropertyDependencyModifier<int> Inherited Members PropertyDependencyModifier<int>.dependenciesInType PropertyDependencyModifier<int>.Modify(int, IPropertyBase[], string, string) PropertyDependencyModifier<int>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<int>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(int) public override int OnModify(int propertyValue) Parameters propertyValue int Returns int"
  },
  "api/Runtime.Weapons.Model.Properties.BulletSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BulletSpeed.html",
    "title": "Class BulletSpeed | Capstone documentation",
    "keywords": "Class BulletSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BulletSpeed : AbstractLoadFromConfigProperty<float>, IBulletSpeed, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> BulletSpeed Implements IBulletSpeed IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.BulletSpeedDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BulletSpeedDefaultModifier.html",
    "title": "Class BulletSpeedDefaultModifier | Capstone documentation",
    "keywords": "Class BulletSpeedDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BulletSpeedDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> BulletSpeedDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.BulletsPerShot.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BulletsPerShot.html",
    "title": "Class BulletsPerShot | Capstone documentation",
    "keywords": "Class BulletsPerShot Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BulletsPerShot : AbstractLoadFromConfigProperty<int>, IBulletsPerShot, IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<int> AbstractLoadFromConfigProperty<int> BulletsPerShot Implements IBulletsPerShot IProperty<int> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<int>.LoadFromConfig(dynamic) Property<int>.PropertyName Property<int>.fullName Property<int>.BaseValue Property<int>.InitialValue Property<int>.RealValue Property<int>.overrideDependentProperties Property<int>.SetBaseValue(int) Property<int>.OnSetFullName(string) Property<int>.GetFullName() Property<int>.modifier Property<int>.OnRecycled() Property<int>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<int>.GetDependentProperties() Property<int>.SetDependentProperties(params PropertyNameInfo[]) Property<int>.Initialize(IPropertyBase[], string) Property<int>.OnClone(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<int> GetDefautModifier() Returns IPropertyDependencyModifier<int> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.BulletsPerShotDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.BulletsPerShotDefaultModifier.html",
    "title": "Class BulletsPerShotDefaultModifier | Capstone documentation",
    "keywords": "Class BulletsPerShotDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class BulletsPerShotDefaultModifier : PropertyDependencyModifier<int>, IPropertyDependencyModifier<int> Inheritance object PropertyDependencyModifier<int> BulletsPerShotDefaultModifier Implements IPropertyDependencyModifier<int> Inherited Members PropertyDependencyModifier<int>.dependenciesInType PropertyDependencyModifier<int>.Modify(int, IPropertyBase[], string, string) PropertyDependencyModifier<int>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<int>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<int>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(int) public override int OnModify(int propertyValue) Parameters propertyValue int Returns int"
  },
  "api/Runtime.Weapons.Model.Properties.ChargeSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ChargeSpeed.html",
    "title": "Class ChargeSpeed | Capstone documentation",
    "keywords": "Class ChargeSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ChargeSpeed : AbstractLoadFromConfigProperty<float>, IChargeSpeed, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> ChargeSpeed Implements IChargeSpeed IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.ChargeSpeedDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ChargeSpeedDefaultModifier.html",
    "title": "Class ChargeSpeedDefaultModifier | Capstone documentation",
    "keywords": "Class ChargeSpeedDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ChargeSpeedDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> ChargeSpeedDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.IAmmoSize.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IAmmoSize.html",
    "title": "Interface IAmmoSize | Capstone documentation",
    "keywords": "Interface IAmmoSize Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IAmmoSize : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IAttackSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IAttackSpeed.html",
    "title": "Interface IAttackSpeed | Capstone documentation",
    "keywords": "Interface IAttackSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IAttackSpeed : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IBaseDamage.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IBaseDamage.html",
    "title": "Interface IBaseDamage | Capstone documentation",
    "keywords": "Interface IBaseDamage Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IBaseDamage : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IBulletSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IBulletSpeed.html",
    "title": "Interface IBulletSpeed | Capstone documentation",
    "keywords": "Interface IBulletSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IBulletSpeed : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IBulletsPerShot.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IBulletsPerShot.html",
    "title": "Interface IBulletsPerShot | Capstone documentation",
    "keywords": "Interface IBulletsPerShot Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IBulletsPerShot : IProperty<int>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<int>.BaseValue IProperty<int>.InitialValue IProperty<int>.RealValue IProperty<int>.SetBaseValue(int) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IChargeSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IChargeSpeed.html",
    "title": "Interface IChargeSpeed | Capstone documentation",
    "keywords": "Interface IChargeSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IChargeSpeed : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IRange.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IRange.html",
    "title": "Interface IRange | Capstone documentation",
    "keywords": "Interface IRange Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IRange : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IRecoil.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IRecoil.html",
    "title": "Interface IRecoil | Capstone documentation",
    "keywords": "Interface IRecoil Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IRecoil : IProperty<RecoilInfo>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<RecoilInfo>.BaseValue IProperty<RecoilInfo>.InitialValue IProperty<RecoilInfo>.RealValue IProperty<RecoilInfo>.SetBaseValue(RecoilInfo) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetRecoilVector() Vector3 GetRecoilVector() Returns Vector3 GetReturnSpeed() float GetReturnSpeed() Returns float GetSnappiness() float GetSnappiness() Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.IReloadSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IReloadSpeed.html",
    "title": "Interface IReloadSpeed | Capstone documentation",
    "keywords": "Interface IReloadSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IReloadSpeed : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.IScopeRecoil.html": {
    "href": "api/Runtime.Weapons.Model.Properties.IScopeRecoil.html",
    "title": "Interface IScopeRecoil | Capstone documentation",
    "keywords": "Interface IScopeRecoil Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface IScopeRecoil : IProperty<RecoilInfo>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<RecoilInfo>.BaseValue IProperty<RecoilInfo>.InitialValue IProperty<RecoilInfo>.RealValue IProperty<RecoilInfo>.SetBaseValue(RecoilInfo) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>) Methods GetRecoilVector() Vector3 GetRecoilVector() Returns Vector3 GetReturnSpeed() float GetReturnSpeed() Returns float GetSnappiness() float GetSnappiness() Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.ISpread.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ISpread.html",
    "title": "Interface ISpread | Capstone documentation",
    "keywords": "Interface ISpread Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public interface ISpread : IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inherited Members IProperty<float>.BaseValue IProperty<float>.InitialValue IProperty<float>.RealValue IProperty<float>.SetBaseValue(float) ILoadFromConfigProperty.LoadFromConfig(dynamic) IPropertyBase.PropertyName IPropertyBase.OnSetFullName(string) IPropertyBase.GetFullName() IPropertyBase.GetBaseValue() IPropertyBase.SetBaseValue(object) IPropertyBase.GetInitialValue() IPropertyBase.GetRealValue() IPropertyBase.GetDependentProperties() IPropertyBase.SetDependentProperties(params PropertyNameInfo[]) IPropertyBase.Initialize(IPropertyBase[], string) IPropertyBase.OnRecycled() IPropertyBase.SetModifier<T>(IPropertyDependencyModifier<T>)"
  },
  "api/Runtime.Weapons.Model.Properties.Range.html": {
    "href": "api/Runtime.Weapons.Model.Properties.Range.html",
    "title": "Class Range | Capstone documentation",
    "keywords": "Class Range Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class Range : AbstractLoadFromConfigProperty<float>, IRange, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> Range Implements IRange IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.RangeDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.RangeDefaultModifier.html",
    "title": "Class RangeDefaultModifier | Capstone documentation",
    "keywords": "Class RangeDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class RangeDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> RangeDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.Recoil.html": {
    "href": "api/Runtime.Weapons.Model.Properties.Recoil.html",
    "title": "Class Recoil | Capstone documentation",
    "keywords": "Class Recoil Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class Recoil : AbstractLoadFromConfigProperty<RecoilInfo>, IRecoil, IProperty<RecoilInfo>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<RecoilInfo> AbstractLoadFromConfigProperty<RecoilInfo> Recoil Implements IRecoil IProperty<RecoilInfo> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<RecoilInfo>.LoadFromConfig(dynamic) Property<RecoilInfo>.PropertyName Property<RecoilInfo>.fullName Property<RecoilInfo>.BaseValue Property<RecoilInfo>.InitialValue Property<RecoilInfo>.RealValue Property<RecoilInfo>.overrideDependentProperties Property<RecoilInfo>.SetBaseValue(RecoilInfo) Property<RecoilInfo>.OnSetFullName(string) Property<RecoilInfo>.GetFullName() Property<RecoilInfo>.modifier Property<RecoilInfo>.OnRecycled() Property<RecoilInfo>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<RecoilInfo>.GetDependentProperties() Property<RecoilInfo>.SetDependentProperties(params PropertyNameInfo[]) Property<RecoilInfo>.Initialize(IPropertyBase[], string) Property<RecoilInfo>.OnClone(RecoilInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<RecoilInfo> GetDefautModifier() Returns IPropertyDependencyModifier<RecoilInfo> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName GetRecoilVector() public Vector3 GetRecoilVector() Returns Vector3 GetReturnSpeed() public float GetReturnSpeed() Returns float GetSnappiness() public float GetSnappiness() Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.RecoilDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.RecoilDefaultModifier.html",
    "title": "Class RecoilDefaultModifier | Capstone documentation",
    "keywords": "Class RecoilDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class RecoilDefaultModifier : PropertyDependencyModifier<RecoilInfo>, IPropertyDependencyModifier<RecoilInfo> Inheritance object PropertyDependencyModifier<RecoilInfo> RecoilDefaultModifier Implements IPropertyDependencyModifier<RecoilInfo> Inherited Members PropertyDependencyModifier<RecoilInfo>.dependenciesInType PropertyDependencyModifier<RecoilInfo>.Modify(RecoilInfo, IPropertyBase[], string, string) PropertyDependencyModifier<RecoilInfo>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<RecoilInfo>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<RecoilInfo>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<RecoilInfo>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(RecoilInfo) public override RecoilInfo OnModify(RecoilInfo propertyValue) Parameters propertyValue RecoilInfo Returns RecoilInfo"
  },
  "api/Runtime.Weapons.Model.Properties.RecoilInfo.html": {
    "href": "api/Runtime.Weapons.Model.Properties.RecoilInfo.html",
    "title": "Struct RecoilInfo | Capstone documentation",
    "keywords": "Struct RecoilInfo Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public struct RecoilInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RecoilInfo(float, float, float, float, float) public RecoilInfo(float recoilX, float recoilY, float recoilZ, float snappiness, float returnSpeed) Parameters recoilX float recoilY float recoilZ float snappiness float returnSpeed float Fields RecoilX public float RecoilX Field Value float RecoilY public float RecoilY Field Value float RecoilZ public float RecoilZ Field Value float ReturnSpeed public float ReturnSpeed Field Value float Snappiness public float Snappiness Field Value float"
  },
  "api/Runtime.Weapons.Model.Properties.ReloadSpeed.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ReloadSpeed.html",
    "title": "Class ReloadSpeed | Capstone documentation",
    "keywords": "Class ReloadSpeed Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ReloadSpeed : AbstractLoadFromConfigProperty<float>, IReloadSpeed, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> ReloadSpeed Implements IReloadSpeed IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.ReloadSpeedDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ReloadSpeedDefaultModifier.html",
    "title": "Class ReloadSpeedDefaultModifier | Capstone documentation",
    "keywords": "Class ReloadSpeedDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ReloadSpeedDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> ReloadSpeedDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.ScopeRecoil.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ScopeRecoil.html",
    "title": "Class ScopeRecoil | Capstone documentation",
    "keywords": "Class ScopeRecoil Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ScopeRecoil : AbstractLoadFromConfigProperty<RecoilInfo>, IScopeRecoil, IProperty<RecoilInfo>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<RecoilInfo> AbstractLoadFromConfigProperty<RecoilInfo> ScopeRecoil Implements IScopeRecoil IProperty<RecoilInfo> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<RecoilInfo>.LoadFromConfig(dynamic) Property<RecoilInfo>.PropertyName Property<RecoilInfo>.fullName Property<RecoilInfo>.BaseValue Property<RecoilInfo>.InitialValue Property<RecoilInfo>.RealValue Property<RecoilInfo>.overrideDependentProperties Property<RecoilInfo>.SetBaseValue(RecoilInfo) Property<RecoilInfo>.OnSetFullName(string) Property<RecoilInfo>.GetFullName() Property<RecoilInfo>.modifier Property<RecoilInfo>.OnRecycled() Property<RecoilInfo>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<RecoilInfo>.GetDependentProperties() Property<RecoilInfo>.SetDependentProperties(params PropertyNameInfo[]) Property<RecoilInfo>.Initialize(IPropertyBase[], string) Property<RecoilInfo>.OnClone(RecoilInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<RecoilInfo> GetDefautModifier() Returns IPropertyDependencyModifier<RecoilInfo> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName GetRecoilVector() public Vector3 GetRecoilVector() Returns Vector3 GetReturnSpeed() public float GetReturnSpeed() Returns float GetSnappiness() public float GetSnappiness() Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.ScopeRecoilDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.ScopeRecoilDefaultModifier.html",
    "title": "Class ScopeRecoilDefaultModifier | Capstone documentation",
    "keywords": "Class ScopeRecoilDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class ScopeRecoilDefaultModifier : PropertyDependencyModifier<RecoilInfo>, IPropertyDependencyModifier<RecoilInfo> Inheritance object PropertyDependencyModifier<RecoilInfo> ScopeRecoilDefaultModifier Implements IPropertyDependencyModifier<RecoilInfo> Inherited Members PropertyDependencyModifier<RecoilInfo>.dependenciesInType PropertyDependencyModifier<RecoilInfo>.Modify(RecoilInfo, IPropertyBase[], string, string) PropertyDependencyModifier<RecoilInfo>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<RecoilInfo>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<RecoilInfo>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<RecoilInfo>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(RecoilInfo) public override RecoilInfo OnModify(RecoilInfo propertyValue) Parameters propertyValue RecoilInfo Returns RecoilInfo"
  },
  "api/Runtime.Weapons.Model.Properties.Spread.html": {
    "href": "api/Runtime.Weapons.Model.Properties.Spread.html",
    "title": "Class Spread | Capstone documentation",
    "keywords": "Class Spread Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class Spread : AbstractLoadFromConfigProperty<float>, ISpread, IProperty<float>, ILoadFromConfigProperty, IPropertyBase Inheritance object Property<float> AbstractLoadFromConfigProperty<float> Spread Implements ISpread IProperty<float> ILoadFromConfigProperty IPropertyBase Inherited Members AbstractLoadFromConfigProperty<float>.LoadFromConfig(dynamic) Property<float>.PropertyName Property<float>.fullName Property<float>.BaseValue Property<float>.InitialValue Property<float>.RealValue Property<float>.overrideDependentProperties Property<float>.SetBaseValue(float) Property<float>.OnSetFullName(string) Property<float>.GetFullName() Property<float>.modifier Property<float>.OnRecycled() Property<float>.SetModifier<ValueType>(IPropertyDependencyModifier<ValueType>) Property<float>.GetDependentProperties() Property<float>.SetDependentProperties(params PropertyNameInfo[]) Property<float>.Initialize(IPropertyBase[], string) Property<float>.OnClone(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDefaultDependentProperties() public override PropertyNameInfo[] GetDefaultDependentProperties() Returns PropertyNameInfo[] GetDefautModifier() Using Get instead of property to avoid ES3 serialization protected override IPropertyDependencyModifier<float> GetDefautModifier() Returns IPropertyDependencyModifier<float> GetPropertyName() protected override PropertyName GetPropertyName() Returns PropertyName"
  },
  "api/Runtime.Weapons.Model.Properties.SpreadDefaultModifier.html": {
    "href": "api/Runtime.Weapons.Model.Properties.SpreadDefaultModifier.html",
    "title": "Class SpreadDefaultModifier | Capstone documentation",
    "keywords": "Class SpreadDefaultModifier Namespace Runtime.Weapons.Model.Properties Assembly MainGame.dll public class SpreadDefaultModifier : PropertyDependencyModifier<float>, IPropertyDependencyModifier<float> Inheritance object PropertyDependencyModifier<float> SpreadDefaultModifier Implements IPropertyDependencyModifier<float> Inherited Members PropertyDependencyModifier<float>.dependenciesInType PropertyDependencyModifier<float>.Modify(float, IPropertyBase[], string, string) PropertyDependencyModifier<float>.GetModifierParameterFromConfig<T>(string, T) PropertyDependencyModifier<float>.GetDependency<T>(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency(PropertyNameInfo) PropertyDependencyModifier<float>.GetDependency<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnModify(float) public override float OnModify(float propertyValue) Parameters propertyValue float Returns float"
  },
  "api/Runtime.Weapons.Model.Properties.html": {
    "href": "api/Runtime.Weapons.Model.Properties.html",
    "title": "Namespace Runtime.Weapons.Model.Properties | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.Model.Properties Classes AmmoSize AmmoSizeDefaultModifier AttackSpeed AttackSpeedDefaultModifier BaseDamage BaseDamageDefaultModifier BulletSpeed BulletSpeedDefaultModifier BulletsPerShot BulletsPerShotDefaultModifier ChargeSpeed ChargeSpeedDefaultModifier Range RangeDefaultModifier Recoil RecoilDefaultModifier ReloadSpeed ReloadSpeedDefaultModifier ScopeRecoil ScopeRecoilDefaultModifier Spread SpreadDefaultModifier Structs RecoilInfo Interfaces IAmmoSize IAttackSpeed IBaseDamage IBulletSpeed IBulletsPerShot IChargeSpeed IRange IRecoil IReloadSpeed IScopeRecoil ISpread"
  },
  "api/Runtime.Weapons.Model.html": {
    "href": "api/Runtime.Weapons.Model.html",
    "title": "Namespace Runtime.Weapons.Model | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.Model Namespaces Runtime.Weapons.Model.Base Runtime.Weapons.Model.Builders Runtime.Weapons.Model.Properties"
  },
  "api/Runtime.Weapons.RustyPistol.html": {
    "href": "api/Runtime.Weapons.RustyPistol.html",
    "title": "Class RustyPistol | Capstone documentation",
    "keywords": "Class RustyPistol Namespace Runtime.Weapons Assembly MainGame.dll public class RustyPistol : AbstractWeaponViewController<RustyPistolEntity>, IPickableResourceViewController, IInHandResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<RustyPistolEntity> AbstractBasicEntityViewController<RustyPistolEntity> AbstractResourceViewController<RustyPistolEntity> AbstractPickableResourceViewController<RustyPistolEntity> AbstractPickableInHandResourceViewController<RustyPistolEntity> AbstractWeaponViewController<RustyPistolEntity> RustyPistol Implements IPickableResourceViewController IInHandResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Inherited Members AbstractWeaponViewController<RustyPistolEntity>.hitDetector AbstractWeaponViewController<RustyPistolEntity>.OnBuildNewEntity() AbstractWeaponViewController<RustyPistolEntity>.CurrentFaction AbstractWeaponViewController<RustyPistolEntity>.Damage AbstractPickableInHandResourceViewController<RustyPistolEntity>.isHolding AbstractPickableInHandResourceViewController<RustyPistolEntity>.rigidbody AbstractPickableInHandResourceViewController<RustyPistolEntity>.ownerGameObject AbstractPickableInHandResourceViewController<RustyPistolEntity>.originalAutoRemovalTimeWhenNoAbsorb AbstractPickableInHandResourceViewController<RustyPistolEntity>.HandleAbsorb(GameObject, PlayerInteractiveZone) AbstractPickableInHandResourceViewController<RustyPistolEntity>.OnStopHold() AbstractPickableInHandResourceViewController<RustyPistolEntity>.OnPointByCrosshair() AbstractPickableInHandResourceViewController<RustyPistolEntity>.OnEntityRecycled(IEntity) AbstractPickableResourceViewController<RustyPistolEntity>.inventoryModel AbstractPickableResourceViewController<RustyPistolEntity>.isAbsorbing AbstractPickableResourceViewController<RustyPistolEntity>.selfColliders AbstractPickableResourceViewController<RustyPistolEntity>.entityAutoRemovalTimeWhenNoAbsorb AbstractPickableResourceViewController<RustyPistolEntity>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<RustyPistolEntity>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<RustyPistolEntity>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<RustyPistolEntity>.HoldAbsorb AbstractBasicEntityViewController<RustyPistolEntity>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<RustyPistolEntity>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<RustyPistolEntity>.ID AbstractEntityViewController<RustyPistolEntity>.autoCreateNewEntityWhenStart AbstractEntityViewController<RustyPistolEntity>.showNameTagWhenPointed AbstractEntityViewController<RustyPistolEntity>.nameTagFollowTransform AbstractEntityViewController<RustyPistolEntity>.nameTagPrefabName AbstractEntityViewController<RustyPistolEntity>.hasInteractiveHint AbstractEntityViewController<RustyPistolEntity>.interactiveHintPrefabName AbstractEntityViewController<RustyPistolEntity>.interactiveHintLocalizedKey AbstractEntityViewController<RustyPistolEntity>.autoDestroyWhenEntityRemoved AbstractEntityViewController<RustyPistolEntity>.entityModel AbstractEntityViewController<RustyPistolEntity>.BoundEntity AbstractEntityViewController<RustyPistolEntity>.properties AbstractEntityViewController<RustyPistolEntity>.OnStartOrAllocate() AbstractEntityViewController<RustyPistolEntity>.InitWithID(string) AbstractEntityViewController<RustyPistolEntity>.OnUnPointByCrosshair() AbstractEntityViewController<RustyPistolEntity>.OnStart() AbstractEntityViewController<RustyPistolEntity>.OnBindProperty() AbstractEntityViewController<RustyPistolEntity>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<RustyPistolEntity>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<RustyPistolEntity>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<RustyPistolEntity>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<RustyPistolEntity>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<RustyPistolEntity>.ForceUpdatePropertyBindings() AbstractEntityViewController<RustyPistolEntity>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<RustyPistolEntity>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields autoReload [Header(\"Auto Reload\")] public bool autoReload Field Value bool defaultGunModel public GameObject defaultGunModel Field Value GameObject gunPositionTransform public Transform gunPositionTransform Field Value Transform isReloading public bool isReloading Field Value bool isScopedIn protected bool isScopedIn Field Value bool lastShootTime public float lastShootTime Field Value float layer public LayerMask layer Field Value LayerMask model public GameObject model Field Value GameObject reloadGunModel public GameObject reloadGunModel Field Value GameObject reloadTimer public float reloadTimer Field Value float scopeInPositionTransform public Transform scopeInPositionTransform Field Value Transform trailRenderer public TrailRenderer trailRenderer Field Value TrailRenderer Methods Awake() protected override void Awake() CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public override void HitResponse(HitData data) Parameters data HitData OnBindEntityProperty() protected override void OnBindEntityProperty() OnCreateHitDetector() protected override IHitDetector OnCreateHitDetector() Returns IHitDetector OnEntityStart() protected override void OnEntityStart() OnInitWeaponEntity(WeaponBuilder<RustyPistolEntity>) protected override IEntity OnInitWeaponEntity(WeaponBuilder<RustyPistolEntity> builder) Parameters builder WeaponBuilder<RustyPistolEntity> Returns IEntity OnItemScopePressed() public override void OnItemScopePressed() OnItemStartUse() public override void OnItemStartUse() OnItemStopUse() public override void OnItemStopUse() OnItemUse() public override void OnItemUse() OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartAbsorb() protected override void OnStartAbsorb() OnStartHold(GameObject) public override void OnStartHold(GameObject ownerGameObject) Parameters ownerGameObject GameObject Shoot() public void Shoot() Update() public void Update()"
  },
  "api/Runtime.Weapons.RustyPistolEntity.html": {
    "href": "api/Runtime.Weapons.RustyPistolEntity.html",
    "title": "Class RustyPistolEntity | Capstone documentation",
    "keywords": "Class RustyPistolEntity Namespace Runtime.Weapons Assembly MainGame.dll public class RustyPistolEntity : WeaponEntity<RustyPistolEntity>, IWeaponEntity, IResourceEntity, IHaveCustomProperties, IHaveTags, IEntity, IPoolable, IHaveDescription, IHaveDisplayName, ICanGetUtility, ICanSendEvent, IBelongToArchitecture Inheritance object Entity AbstractBasicEntity ResourceEntity<RustyPistolEntity> WeaponEntity<RustyPistolEntity> RustyPistolEntity Implements IWeaponEntity IResourceEntity IHaveCustomProperties IHaveTags IEntity IPoolable IHaveDescription IHaveDisplayName ICanGetUtility ICanSendEvent IBelongToArchitecture Inherited Members WeaponEntity<RustyPistolEntity>.CurrentAmmo WeaponEntity<RustyPistolEntity>.GetConfigTable() WeaponEntity<RustyPistolEntity>.GetResourceCategory() WeaponEntity<RustyPistolEntity>.OnEntityStart(bool) WeaponEntity<RustyPistolEntity>.OnDoRecycle() WeaponEntity<RustyPistolEntity>.OnEntityRegisterAdditionalProperties() WeaponEntity<RustyPistolEntity>.GetBaseDamage() WeaponEntity<RustyPistolEntity>.GetAttackSpeed() WeaponEntity<RustyPistolEntity>.GetRange() WeaponEntity<RustyPistolEntity>.GetAmmoSize() WeaponEntity<RustyPistolEntity>.GetReloadSpeed() WeaponEntity<RustyPistolEntity>.GetBulletsPerShot() WeaponEntity<RustyPistolEntity>.GetSpread() WeaponEntity<RustyPistolEntity>.GetRecoil() WeaponEntity<RustyPistolEntity>.GetScopeRecoil() WeaponEntity<RustyPistolEntity>.GetBulletSpeed() WeaponEntity<RustyPistolEntity>.GetChargeSpeed() WeaponEntity<RustyPistolEntity>.Reload() WeaponEntity<RustyPistolEntity>.OnRecoil(bool) WeaponEntity<RustyPistolEntity>.OnGetDisplayNameBeforeFirstPicked(string) ResourceEntity<RustyPistolEntity>.pickedBefore ResourceEntity<RustyPistolEntity>.GetMaxStackProperty() ResourceEntity<RustyPistolEntity>.GetDisplayName() ResourceEntity<RustyPistolEntity>.OnPicked() ResourceEntity<RustyPistolEntity>.InventoryVCPrefabName ResourceEntity<RustyPistolEntity>.InHandVCPrefabName AbstractBasicEntity.OnRegisterProperties() AbstractBasicEntity.GetCustomProperties() AbstractBasicEntity.GetCustomDataValue(string, string) AbstractBasicEntity.GetCustomDataValue<T>(string, string) AbstractBasicEntity.RegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.RegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, string, Action<ICustomDataProperty, dynamic, dynamic>) AbstractBasicEntity.UnRegisterOnCustomDataChanged(string, Action<ICustomProperty>) AbstractBasicEntity.HasCustomProperty(string) AbstractBasicEntity.GetTagProperty() AbstractBasicEntity.GetRarity() Entity.UUID Entity.configTable Entity.onEntityRecycled Entity.OnLoadFromSave() Entity.RegisterInitialProperty<T>(T) Entity.RegisterTempProperty<T>(T, string, bool, bool) Entity.OnAllocate() Entity.SetPropertyBaseValue<T>(PropertyNameInfo, T, IPropertyDependencyModifier<T>) Entity.SetPropertyModifier<T>(PropertyNameInfo, IPropertyDependencyModifier<T>) Entity.LoadPropertyBaseValueFromConfig(ConfigTable) Entity.OnStart(bool) Entity.RegisterOnEntityRecycled(Action<IEntity>) Entity.UnRegisterOnEntityRecycled(Action<IEntity>) Entity.GetProperty(PropertyName) Entity.GetProperty(PropertyNameInfo) Entity.GetProperty<T>() Entity.GetProperty<T>(PropertyNameInfo) Entity.GetProperty(Type) Entity.HasProperty(PropertyNameInfo) Entity.TryGetProperty(PropertyNameInfo, out IPropertyBase) Entity.Initialize() Entity.InitProperty(IPropertyBase) Entity.OnRecycled() Entity.IsRecycled Entity.RecycleToCache() Entity.GetDescription() Entity.GetArchitecture() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EntityName public override string EntityName { get; set; } Property Value string OnGroundVCPrefabName public override string OnGroundVCPrefabName { get; } Property Value string Methods OnGetDescription(string) Return the description of the entity protected override string OnGetDescription(string defaultLocalizationKey) Parameters defaultLocalizationKey string This is always equal to EntityName_desc. Use Localization.Get or Localization.GetFormat to retrieve its description based on the key Or you can ignore defaultLocalizationKey can manually implement yours Returns string OnRecycle() public override void OnRecycle() OnRegisterCustomProperties() protected override ICustomProperty[] OnRegisterCustomProperties() Returns ICustomProperty[]"
  },
  "api/Runtime.Weapons.ViewControllers.Base.AbstractBulletViewController.html": {
    "href": "api/Runtime.Weapons.ViewControllers.Base.AbstractBulletViewController.html",
    "title": "Class AbstractBulletViewController | Capstone documentation",
    "keywords": "Class AbstractBulletViewController Namespace Runtime.Weapons.ViewControllers.Base Assembly MainGame.dll [RequireComponent(typeof(HitBox))] public abstract class AbstractBulletViewController : PoolableGameObject, IBulletViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject AbstractBulletViewController Implements IBulletViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Derived EnemyBomb Boss1Bullet Inherited Members PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields bulletOwner protected GameObject bulletOwner Field Value GameObject hitBox protected HitBox hitBox Field Value HitBox Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; protected set; } Property Value int Methods CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool GetArchitecture() public IArchitecture GetArchitecture() Returns IArchitecture HitResponse(HitData) public void HitResponse(HitData data) Parameters data HitData Init(Faction, int, GameObject) public void Init(Faction faction, int damage, GameObject bulletOwner) Parameters faction Faction damage int bulletOwner GameObject OnBulletRecycled() protected abstract void OnBulletRecycled() OnHitResponse(HitData) protected abstract void OnHitResponse(HitData data) Parameters data HitData OnRecycled() Triggered after recycled back to the pool, or after calling Recycle() public override void OnRecycled() OnStartOrAllocate() public override void OnStartOrAllocate()"
  },
  "api/Runtime.Weapons.ViewControllers.Base.AbstractWeaponViewController-1.html": {
    "href": "api/Runtime.Weapons.ViewControllers.Base.AbstractWeaponViewController-1.html",
    "title": "Class AbstractWeaponViewController<T> | Capstone documentation",
    "keywords": "Class AbstractWeaponViewController<T> Namespace Runtime.Weapons.ViewControllers.Base Assembly MainGame.dll For both public abstract class AbstractWeaponViewController<T> : AbstractPickableInHandResourceViewController<T>, IPickableResourceViewController, IInHandResourceViewController, IResourceViewController, IEntityViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction where T : class, IWeaponEntity, new() Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject DefaultPoolableGameObject DefaultPoolableGameObjectSaved AbstractEntityViewController<T> AbstractBasicEntityViewController<T> AbstractResourceViewController<T> AbstractPickableResourceViewController<T> AbstractPickableInHandResourceViewController<T> AbstractWeaponViewController<T> Implements IPickableResourceViewController IInHandResourceViewController IResourceViewController IEntityViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Derived RustyPistol Inherited Members AbstractPickableInHandResourceViewController<T>.isHolding AbstractPickableInHandResourceViewController<T>.rigidbody AbstractPickableInHandResourceViewController<T>.ownerGameObject AbstractPickableInHandResourceViewController<T>.originalAutoRemovalTimeWhenNoAbsorb AbstractPickableInHandResourceViewController<T>.OnStartAbsorb() AbstractPickableInHandResourceViewController<T>.OnRecycled() AbstractPickableInHandResourceViewController<T>.HandleAbsorb(GameObject, PlayerInteractiveZone) AbstractPickableInHandResourceViewController<T>.OnStartHold(GameObject) AbstractPickableInHandResourceViewController<T>.OnStopHold() AbstractPickableInHandResourceViewController<T>.OnItemStartUse() AbstractPickableInHandResourceViewController<T>.OnItemStopUse() AbstractPickableInHandResourceViewController<T>.OnItemUse() AbstractPickableInHandResourceViewController<T>.OnItemScopePressed() AbstractPickableInHandResourceViewController<T>.OnPointByCrosshair() AbstractPickableInHandResourceViewController<T>.OnEntityRecycled(IEntity) AbstractPickableResourceViewController<T>.inventoryModel AbstractPickableResourceViewController<T>.isAbsorbing AbstractPickableResourceViewController<T>.selfColliders AbstractPickableResourceViewController<T>.entityAutoRemovalTimeWhenNoAbsorb AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerInteractiveZoneNotReachable(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.OnPlayerExitInteractiveZone(GameObject, PlayerInteractiveZone) AbstractPickableResourceViewController<T>.HoldAbsorb AbstractBasicEntityViewController<T>.BindCustomData<T>(string, string, string, Action<T, T>) AbstractBasicEntityViewController<T>.BindCustomData<TargetType>(string, string, string, Func<dynamic, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.ID AbstractEntityViewController<T>.autoCreateNewEntityWhenStart AbstractEntityViewController<T>.showNameTagWhenPointed AbstractEntityViewController<T>.nameTagFollowTransform AbstractEntityViewController<T>.nameTagPrefabName AbstractEntityViewController<T>.hasInteractiveHint AbstractEntityViewController<T>.interactiveHintPrefabName AbstractEntityViewController<T>.interactiveHintLocalizedKey AbstractEntityViewController<T>.autoDestroyWhenEntityRemoved AbstractEntityViewController<T>.entityModel AbstractEntityViewController<T>.BoundEntity AbstractEntityViewController<T>.properties AbstractEntityViewController<T>.OnStartOrAllocate() AbstractEntityViewController<T>.InitWithID(string) AbstractEntityViewController<T>.OnUnPointByCrosshair() AbstractEntityViewController<T>.OnStart() AbstractEntityViewController<T>.OnBindProperty() AbstractEntityViewController<T>.OnBindEntityProperty() AbstractEntityViewController<T>.Bind<IPropertyType>(string, Action<dynamic, dynamic>) AbstractEntityViewController<T>.Bind<T>(string, BindableProperty<T>, Action<T, T>) AbstractEntityViewController<T>.Bind<BindedDataType, TargetType>(string, BindableProperty<BindedDataType>, Func<BindedDataType, TargetType>, Action<TargetType, TargetType>) AbstractEntityViewController<T>.Bind<T>(string, IBindableProperty, Func<dynamic, T>, Action<T, T>) AbstractEntityViewController<T>.UpdateBinding<T, BindablePropertyType>(IBindableProperty, PropertyInfo, Func<BindablePropertyType, T>, Action<T, T>) AbstractEntityViewController<T>.ForceUpdatePropertyBindings() AbstractEntityViewController<T>.OnPlayerInInteractiveZone(GameObject, PlayerInteractiveZone) AbstractEntityViewController<T>.OnDestroy() DefaultPoolableGameObjectSaved.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Fields hitDetector protected IHitDetector hitDetector Field Value IHitDetector Properties CurrentFaction Faction can be changed during runtime public BindableProperty<Faction> CurrentFaction { get; } Property Value BindableProperty<Faction> Damage public int Damage { get; } Property Value int Methods Awake() protected override void Awake() CheckHit(HitData) public bool CheckHit(HitData data) Parameters data HitData Returns bool HitResponse(HitData) public abstract void HitResponse(HitData data) Parameters data HitData OnBuildNewEntity() protected override IEntity OnBuildNewEntity() Returns IEntity OnCreateHitDetector() protected abstract IHitDetector OnCreateHitDetector() Returns IHitDetector OnEntityStart() protected override void OnEntityStart() OnInitWeaponEntity(WeaponBuilder<T>) protected abstract IEntity OnInitWeaponEntity(WeaponBuilder<T> builder) Parameters builder WeaponBuilder<T> Returns IEntity"
  },
  "api/Runtime.Weapons.ViewControllers.Base.IBulletViewController.html": {
    "href": "api/Runtime.Weapons.ViewControllers.Base.IBulletViewController.html",
    "title": "Interface IBulletViewController | Capstone documentation",
    "keywords": "Interface IBulletViewController Namespace Runtime.Weapons.ViewControllers.Base Assembly MainGame.dll public interface IBulletViewController : IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inherited Members IBelongToArchitecture.GetArchitecture() IHitResponder.CheckHit(HitData) IHitResponder.HitResponse(HitData) IBelongToFaction.CurrentFaction IBelongToFaction.IsSameFaction(IBelongToFaction) Properties Damage int Damage { get; } Property Value int Methods Init(Faction, int, GameObject) void Init(Faction faction, int damage, GameObject bulletOwner) Parameters faction Faction damage int bulletOwner GameObject"
  },
  "api/Runtime.Weapons.ViewControllers.Base.html": {
    "href": "api/Runtime.Weapons.ViewControllers.Base.html",
    "title": "Namespace Runtime.Weapons.ViewControllers.Base | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.ViewControllers.Base Classes AbstractBulletViewController AbstractWeaponViewController<T> For both Interfaces IBulletViewController"
  },
  "api/Runtime.Weapons.ViewControllers.Crosshair.html": {
    "href": "api/Runtime.Weapons.ViewControllers.Crosshair.html",
    "title": "Class Crosshair | Capstone documentation",
    "keywords": "Class Crosshair Namespace Runtime.Weapons.ViewControllers Assembly MainGame.dll public class Crosshair : MonoMikroSingleton<Crosshair>, ISingleton Inheritance object Object Component Behaviour MonoBehaviour MikroBehavior MonoMikroSingleton<Crosshair> Crosshair Implements ISingleton Inherited Members MonoMikroSingleton<Crosshair>.instance MonoMikroSingleton<Crosshair>.Exists MonoMikroSingleton<Crosshair>.Singleton MonoMikroSingleton<Crosshair>.OnBeforeDestroy() MonoMikroSingleton<Crosshair>.OnSingletonInit() MonoMikroSingleton<Crosshair>.onApplicationQuit MonoMikroSingleton<Crosshair>.IsApplicationQuit MonoMikroSingleton<Crosshair>.OnApplicationQuit() MikroBehavior.AddListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType, Action<MikroMessage>) MikroBehavior.RemoveListener(EventType) MikroBehavior.Broadcast(EventType, MikroMessage) MikroBehavior.Delay(float, Action) MikroBehavior.Delay(float, EventType, MikroMessage) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Properties CurrentPointedEntity public IEntityViewController CurrentPointedEntity { get; } Property Value IEntityViewController"
  },
  "api/Runtime.Weapons.ViewControllers.html": {
    "href": "api/Runtime.Weapons.ViewControllers.html",
    "title": "Namespace Runtime.Weapons.ViewControllers | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons.ViewControllers Namespaces Runtime.Weapons.ViewControllers.Base Classes Crosshair"
  },
  "api/Runtime.Weapons.html": {
    "href": "api/Runtime.Weapons.html",
    "title": "Namespace Runtime.Weapons | Capstone documentation",
    "keywords": "Namespace Runtime.Weapons Namespaces Runtime.Weapons.Model Runtime.Weapons.ViewControllers Classes GunRecoil RustyPistol RustyPistolEntity"
  },
  "api/Runtime.html": {
    "href": "api/Runtime.html",
    "title": "Namespace Runtime | Capstone documentation",
    "keywords": "Namespace Runtime Namespaces Runtime.BehaviorDesigner Runtime.Controls Runtime.DataFramework Runtime.Enemies Runtime.GameResources Runtime.Inventory Runtime.Player Runtime.RawMaterials Runtime.Temporary Runtime.UI Runtime.Utilities Runtime.Weapons"
  },
  "api/a.Boss1Bullet.html": {
    "href": "api/a.Boss1Bullet.html",
    "title": "Class Boss1Bullet | Capstone documentation",
    "keywords": "Class Boss1Bullet Namespace a Assembly MainGame.dll public class Boss1Bullet : AbstractBulletViewController, IBulletViewController, IController, ICanSendCommand, ICanGetSystem, ICanGetModel, ICanRegisterEvent, ICanSendQuery, ICanGetUtility, IBelongToArchitecture, IHitResponder, IBelongToFaction Inheritance object Object Component Behaviour MonoBehaviour PoolableGameObject AbstractBulletViewController Boss1Bullet Implements IBulletViewController IController ICanSendCommand ICanGetSystem ICanGetModel ICanRegisterEvent ICanSendQuery ICanGetUtility IBelongToArchitecture IHitResponder IBelongToFaction Inherited Members AbstractBulletViewController.CurrentFaction AbstractBulletViewController.Damage AbstractBulletViewController.hitBox AbstractBulletViewController.bulletOwner AbstractBulletViewController.Init(Faction, int, GameObject) AbstractBulletViewController.OnStartOrAllocate() AbstractBulletViewController.CheckHit(HitData) AbstractBulletViewController.HitResponse(HitData) AbstractBulletViewController.OnRecycled() AbstractBulletViewController.GetArchitecture() PoolableGameObject.Pool PoolableGameObject.IsRecycled PoolableGameObject.RecycleToCache() PoolableGameObject.RegisterOnRecycledEvent(UnityAction) PoolableGameObject.RegisterOnAllocateEvent(UnityAction) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MonoActionExecutor.Execute(MonoBehaviour, MikroAction) MonoBehaviorActionExtensions.Repeat(MonoBehaviour, int) MonoBehaviorActionExtensions.Sequence(MonoBehaviour) MonoBehaviorActionExtensions.Spawn(MonoBehaviour) DelayActionExtensions.Delay(MonoBehaviour, float, Action) GameObjectExtension.Hide(MonoBehaviour) GameObjectExtension.Show(MonoBehaviour) TransformExtension.Identity(MonoBehaviour) Methods OnBulletRecycled() protected override void OnBulletRecycled() OnHitResponse(HitData) protected override void OnHitResponse(HitData data) Parameters data HitData"
  },
  "api/a.html": {
    "href": "api/a.html",
    "title": "Namespace a | Capstone documentation",
    "keywords": "Namespace a Classes Boss1Bullet"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Capstone documentation",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Capstone documentation",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Capstone documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}