name: Build

on: [push, pull_request]
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
jobs:
  buildAndTestForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        unityVersion:
          - 2021.3.25f1
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
    
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Build_Linux
#           path: build

#   buildForWindowsBasedPlatforms:
#     needs: [buildAndTestForLinuxBasedPlatforms]
#     name: Build for ${{ matrix.targetPlatform }}
#     runs-on: windows-2021
#     strategy:
#       fail-fast: false
#       matrix:
#         projectPath:
#           - .
#         unityVersion:
#           - 2021.3.25f1
#         targetPlatform:
#           - StandaloneWindows64 # Build a Windows 64-bit standalone.
#          # - StandaloneWindows # Build a Windows 32-bit standalone.

#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           lfs: true
# #       - uses: actions/cache@v2
# #         with:
# #           path: ${{ matrix.projectPath }}/Library
# #           key:
# #             Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
# #             hashFiles(matrix.projectPath) }}
# #           restore-keys: |
# #             Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
# #             Library-${{ matrix.projectPath }}-
# #             Library-
#       - uses: game-ci/unity-builder@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           allowDirtyBuild: true
#           projectPath: ${{ matrix.projectPath }}
#           unityVersion: ${{ matrix.unityVersion }}
#           targetPlatform: ${{ matrix.targetPlatform }}
        
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Build_Win
#           path: build

#   buildForMacOSBasedPlatforms:
#     needs: [buildAndTestForLinuxBasedPlatforms]
#     name: Build for ${{ matrix.targetPlatform }}
#     runs-on: macos-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         projectPath:
#           - .
#         unityVersion:
#           - 2021.3.25f1
#         targetPlatform:
#           - StandaloneOSX # Build a macOS standalone.

#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           lfs: true

#       - uses: actions/cache@v2
#         with:
#           path: ${{ matrix.projectPath }}/Library
#           key:
#             Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
#             hashFiles(matrix.projectPath) }}
#           restore-keys: |
#             Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
#             Library-${{ matrix.projectPath }}-
#             Library-

#       - uses: game-ci/unity-builder@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           allowDirtyBuild: true
#           projectPath: ${{ matrix.projectPath }}
#           unityVersion: ${{ matrix.unityVersion }}
#           targetPlatform: ${{ matrix.targetPlatform }}

#       - uses: actions/upload-artifact@v2
#         with:
#           name: Build_Mac
#           path: build
